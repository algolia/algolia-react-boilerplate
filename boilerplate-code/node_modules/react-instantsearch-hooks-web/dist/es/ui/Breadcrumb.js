import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["classNames", "items", "hasItems", "createURL", "onNavigate", "separator", "translations"];
import React from 'react';
import { cx } from "./lib/cx.js";
import { isModifierClick } from "./lib/isModifierClick.js";
export function Breadcrumb(_ref) {
  var _ref$classNames = _ref.classNames,
      classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
      _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      hasItems = _ref.hasItems,
      createURL = _ref.createURL,
      onNavigate = _ref.onNavigate,
      _ref$separator = _ref.separator,
      separator = _ref$separator === void 0 ? '>' : _ref$separator,
      translations = _ref.translations,
      props = _objectWithoutProperties(_ref, _excluded);

  var handleClick = function handleClick(value) {
    return function (event) {
      if (!isModifierClick(event)) {
        event.preventDefault();
        onNavigate(value);
      }
    };
  };

  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    className: cx('ais-Breadcrumb', classNames.root, !hasItems && cx('ais-Breadcrumb--noRefinement', classNames.noRefinementRoot), props.className)
  }), /*#__PURE__*/React.createElement("ul", {
    className: cx('ais-Breadcrumb-list', classNames.list)
  }, /*#__PURE__*/React.createElement("li", {
    className: cx('ais-Breadcrumb-item', classNames.item, !hasItems && cx('ais-Breadcrumb-item--selected', classNames.selectedItem))
  }, /*#__PURE__*/React.createElement("a", {
    href: createURL(null),
    onClick: handleClick(null),
    className: cx('ais-Breadcrumb-link', classNames.link)
  }, translations.rootElementText)), items.map(function (item, index) {
    var isLast = index === items.length - 1;
    return /*#__PURE__*/React.createElement("li", {
      key: index,
      className: cx('ais-Breadcrumb-item', classNames.item, isLast && cx('ais-Breadcrumb-item--selected', classNames.selectedItem))
    }, /*#__PURE__*/React.createElement("span", {
      "aria-hidden": "true",
      className: cx('ais-Breadcrumb-separator', classNames.separator)
    }, separator), isLast ? item.label : /*#__PURE__*/React.createElement("a", {
      className: cx('ais-Breadcrumb-link', classNames.link),
      href: createURL(item.value),
      onClick: handleClick(item.value)
    }, item.label));
  })));
}