import { mapByScoreToRecommendations } from './utils';
import { version } from './version';
export function getTrendingFacets(_ref) {
  var recommendClient = _ref.recommendClient,
      _ref$transformItems = _ref.transformItems,
      transformItems = _ref$transformItems === void 0 ? function (x) {
    return x;
  } : _ref$transformItems,
      fallbackParameters = _ref.fallbackParameters,
      indexName = _ref.indexName,
      maxRecommendations = _ref.maxRecommendations,
      queryParameters = _ref.queryParameters,
      threshold = _ref.threshold,
      facetName = _ref.facetName;
  var query = {
    fallbackParameters: fallbackParameters,
    indexName: indexName,
    maxRecommendations: maxRecommendations,
    queryParameters: queryParameters,
    threshold: threshold,
    facetName: facetName
  };
  recommendClient.addAlgoliaAgent('recommend-core', version);
  return recommendClient.getTrendingFacets([query]).then(function (response) {
    return mapByScoreToRecommendations({
      maxRecommendations: maxRecommendations,
      hits: response.results.map(function (result) {
        return result.hits;
      }).flat()
    });
  }).then(function (hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}