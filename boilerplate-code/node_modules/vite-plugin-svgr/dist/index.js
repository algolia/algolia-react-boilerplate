"use strict";
const fs = require("fs");
const vite = require("vite");
const pluginutils = require("@rollup/pluginutils");
const _interopDefaultLegacy = (e) => e && typeof e === "object" && "default" in e ? e : { default: e };
function _interopNamespace(e) {
  if (e && e.__esModule)
    return e;
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const fs__default = /* @__PURE__ */ _interopDefaultLegacy(fs);
function viteSvgr({
  exportAsDefault,
  svgrOptions,
  esbuildOptions,
  include = "**/*.svg",
  exclude
} = {}) {
  const filter = pluginutils.createFilter(include, exclude);
  return {
    name: "vite-plugin-svgr",
    async transform(code, id) {
      if (filter(id)) {
        const { transform } = await Promise.resolve().then(() => /* @__PURE__ */ _interopNamespace(require("@svgr/core")));
        const svgCode = await fs__default.default.promises.readFile(id, "utf8");
        const componentCode = await transform(svgCode, svgrOptions, {
          filePath: id,
          caller: {
            previousExport: exportAsDefault ? null : code
          }
        });
        const res = await vite.transformWithEsbuild(componentCode, id, {
          loader: "jsx",
          ...esbuildOptions
        });
        return {
          code: res.code,
          map: null
        };
      }
    }
  };
}
module.exports = viteSvgr;
