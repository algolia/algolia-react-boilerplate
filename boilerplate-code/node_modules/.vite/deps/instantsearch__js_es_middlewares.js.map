{
  "version": 3,
  "sources": ["../../instantsearch.js/es/middlewares/createInsightsMiddleware.js"],
  "sourcesContent": ["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { getInsightsAnonymousUserTokenInternal } from \"../helpers/index.js\";\nimport { warning, noop, getAppIdAndApiKey, find } from \"../lib/utils/index.js\";\nexport function createInsightsMiddleware(props) {\n  var _ref = props || {},\n      _insightsClient = _ref.insightsClient,\n      insightsInitParams = _ref.insightsInitParams,\n      onEvent = _ref.onEvent;\n\n  if (_insightsClient !== null && !_insightsClient) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"The `insightsClient` option is required if you want userToken to be automatically set in search calls. If you don't want this behaviour, set it to `null`.\");\n    } else {\n      throw new Error('The `insightsClient` option is required. To disable, set it to `null`.');\n    }\n  }\n\n  var hasInsightsClient = Boolean(_insightsClient);\n  var insightsClient = _insightsClient === null ? noop : _insightsClient;\n  return function (_ref2) {\n    var instantSearchInstance = _ref2.instantSearchInstance;\n\n    var _getAppIdAndApiKey = getAppIdAndApiKey(instantSearchInstance.client),\n        _getAppIdAndApiKey2 = _slicedToArray(_getAppIdAndApiKey, 2),\n        appId = _getAppIdAndApiKey2[0],\n        apiKey = _getAppIdAndApiKey2[1]; // search-insights.js also throws an error so dev-only clarification is sufficient\n\n\n    if (process.env.NODE_ENV === 'development' && !(appId && apiKey)) {\n      throw new Error('[insights middleware]: could not extract Algolia credentials from searchClient');\n    }\n\n    var queuedUserToken = undefined;\n    var userTokenBeforeInit = undefined;\n\n    if (Array.isArray(insightsClient.queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      var _ref3 = find(insightsClient.queue.slice().reverse(), function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n            method = _ref6[0];\n\n        return method === 'setUserToken';\n      }) || [];\n\n      var _ref4 = _slicedToArray(_ref3, 2);\n\n      queuedUserToken = _ref4[1];\n    }\n\n    insightsClient('getUserToken', null, function (_error, userToken) {\n      // If user has called `aa('setUserToken', 'my-user-token')` before creating\n      // the `insights` middleware, we store them temporarily and\n      // set it later on.\n      //\n      // Otherwise, the `init` call might override it with anonymous user token.\n      userTokenBeforeInit = userToken;\n    });\n    insightsClient('init', _objectSpread({\n      appId: appId,\n      apiKey: apiKey\n    }, insightsInitParams));\n    var initialParameters;\n    var helper;\n    return {\n      onStateChange: function onStateChange() {},\n      subscribe: function subscribe() {},\n      started: function started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n        helper = instantSearchInstance.helper;\n        initialParameters = {\n          userToken: helper.state.userToken,\n          clickAnalytics: helper.state.clickAnalytics\n        };\n        helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n          clickAnalytics: true\n        }));\n        instantSearchInstance.scheduleSearch();\n\n        var setUserTokenToSearch = function setUserTokenToSearch(userToken) {\n          helper.overrideStateWithoutTriggeringChangeEvent(_objectSpread(_objectSpread({}, helper.state), {}, {\n            userToken: userToken\n          }));\n          instantSearchInstance.scheduleSearch();\n        };\n\n        var anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n\n        if (hasInsightsClient && anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken);\n        } // We consider the `userToken` coming from a `init` call to have a higher\n        // importance than the one coming from the queue.\n\n\n        if (userTokenBeforeInit) {\n          insightsClient('setUserToken', userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          insightsClient('setUserToken', queuedUserToken);\n        } // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n\n\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true\n        });\n\n        instantSearchInstance.sendEventToInsights = function (event) {\n          if (onEvent) {\n            onEvent(event, _insightsClient);\n          } else if (event.insightsMethod) {\n            var hasUserToken = Boolean(helper.state.userToken);\n\n            if (hasUserToken) {\n              insightsClient(event.insightsMethod, event.payload);\n            } else {\n              process.env.NODE_ENV === 'development' ? warning(false, \"\\nCannot send event to Algolia Insights because `userToken` is not set.\\n\\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\\n\") : void 0;\n            }\n          } else {\n            process.env.NODE_ENV === 'development' ? warning(false, 'Cannot send event to Algolia Insights because `insightsMethod` option is missing.') : void 0;\n          }\n        };\n      },\n      unsubscribe: function unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n\n        if (helper && initialParameters) {\n          helper.setState(_objectSpread(_objectSpread({}, helper.state), initialParameters));\n          instantSearchInstance.scheduleSearch();\n        }\n      }\n    };\n  };\n}"],
  "mappings": "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",
  "names": ["setUserTokenToSearch"]
}
