import {
  _toConsumableArray
} from "./chunk-DDHQ73D6.js";
import "./chunk-5W7MSLTM.js";
import {
  dequal
} from "./chunk-4ECGFMV2.js";
import {
  _slicedToArray
} from "./chunk-4OH2SGPV.js";
import "./chunk-ABC7BXC2.js";
import {
  _extends
} from "./chunk-6SGCV3RH.js";
import {
  _defineProperty
} from "./chunk-HKWV5KNA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@algolia/recommend-vdom/dist/esm/utils/cx.js
function cx() {
  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {
    classNames[_key] = arguments[_key];
  }
  return classNames.filter(Boolean).join(" ");
}

// node_modules/@algolia/recommend-vdom/dist/esm/DefaultChildren.js
function createDefaultChildrenComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function DefaultChildren(props) {
    if (props.recommendations.length === 0 && props.status === "idle") {
      return createElement5(props.Fallback, null);
    }
    return createElement5("section", {
      className: cx("auc-Recommend", props.classNames.root)
    }, createElement5(props.Header, {
      classNames: props.classNames,
      recommendations: props.recommendations,
      translations: props.translations,
      createElement: createElement5,
      Fragment: Fragment5
    }), createElement5(props.View, null));
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/DefaultFallback.js
function createDefaultFallbackComponent() {
  return function DefaultFallback() {
    return null;
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/DefaultHeader.js
function createDefaultHeaderComponent(_ref) {
  var createElement5 = _ref.createElement;
  return function DefaultHeader(props) {
    if (!props.recommendations || props.recommendations.length < 1) {
      return null;
    }
    if (!props.translations.title) {
      return null;
    }
    return createElement5("h3", {
      className: cx("auc-Recommend-title", props.classNames.title)
    }, props.translations.title);
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/ListView.js
function createListViewComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function ListView(props) {
    return createElement5("div", {
      className: cx("auc-Recommend-container", props.classNames.container)
    }, createElement5("ol", {
      className: cx("auc-Recommend-list", props.classNames.list)
    }, props.items.map(function(item) {
      return createElement5("li", {
        key: item.objectID,
        className: cx("auc-Recommend-item", props.classNames.item)
      }, createElement5(props.itemComponent, {
        createElement: createElement5,
        Fragment: Fragment5,
        item
      }));
    })));
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/FrequentlyBoughtTogether.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function createFrequentlyBoughtTogetherComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function FrequentlyBoughtTogether2(props) {
    var _props$classNames, _props$children, _props$fallbackCompon, _props$headerComponen, _props$view;
    var translations = _objectSpread({
      title: "Frequently bought together",
      sliderLabel: "Frequently bought together products"
    }, props.translations);
    var classNames = (_props$classNames = props.classNames) !== null && _props$classNames !== void 0 ? _props$classNames : {};
    var children = (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : createDefaultChildrenComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var FallbackComponent = (_props$fallbackCompon = props.fallbackComponent) !== null && _props$fallbackCompon !== void 0 ? _props$fallbackCompon : createDefaultFallbackComponent();
    var Fallback = function Fallback2() {
      return createElement5(FallbackComponent, {
        Fragment: Fragment5,
        createElement: createElement5
      });
    };
    var Header = (_props$headerComponen = props.headerComponent) !== null && _props$headerComponen !== void 0 ? _props$headerComponen : createDefaultHeaderComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var ViewComponent = (_props$view = props.view) !== null && _props$view !== void 0 ? _props$view : createListViewComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var View = function View2(viewProps) {
      return createElement5(ViewComponent, _extends({
        classNames,
        itemComponent: props.itemComponent,
        items: props.items,
        translations,
        Fragment: Fragment5,
        createElement: createElement5
      }, viewProps));
    };
    return children({
      classNames,
      Fallback,
      Header,
      recommendations: props.items,
      status: props.status,
      translations,
      View
    });
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/RelatedProducts.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function createRelatedProductsComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function RelatedProducts2(props) {
    var _props$classNames, _props$children, _props$fallbackCompon, _props$headerComponen, _props$view;
    var translations = _objectSpread2({
      title: "Related products",
      sliderLabel: "Related products"
    }, props.translations);
    var classNames = (_props$classNames = props.classNames) !== null && _props$classNames !== void 0 ? _props$classNames : {};
    var children = (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : createDefaultChildrenComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var FallbackComponent = (_props$fallbackCompon = props.fallbackComponent) !== null && _props$fallbackCompon !== void 0 ? _props$fallbackCompon : createDefaultFallbackComponent();
    var Fallback = function Fallback2() {
      return createElement5(FallbackComponent, {
        Fragment: Fragment5,
        createElement: createElement5
      });
    };
    var Header = (_props$headerComponen = props.headerComponent) !== null && _props$headerComponen !== void 0 ? _props$headerComponen : createDefaultHeaderComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var ViewComponent = (_props$view = props.view) !== null && _props$view !== void 0 ? _props$view : createListViewComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var View = function View2(viewProps) {
      return createElement5(ViewComponent, _extends({
        classNames,
        itemComponent: props.itemComponent,
        items: props.items,
        translations,
        Fragment: Fragment5,
        createElement: createElement5
      }, viewProps));
    };
    return children({
      classNames,
      Fallback,
      Header,
      recommendations: props.items,
      status: props.status,
      translations,
      View
    });
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/FacetsView.js
function createFacetsView(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function FacetsView(props) {
    return createElement5("div", {
      className: cx("auc-Recommend-container", props.classNames.container)
    }, createElement5("ol", {
      className: cx("auc-Recommend-list", props.classNames.list)
    }, props.items.map(function(item) {
      return createElement5("li", {
        key: item.facetValue,
        className: cx("auc-Recommend-item", props.classNames.item)
      }, createElement5(props.itemComponent, {
        createElement: createElement5,
        Fragment: Fragment5,
        item
      }));
    })));
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/TrendingFacets.js
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys3(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys3(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function createTrendingFacetsComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function TrendingFacets2(props) {
    var _props$classNames, _props$children, _props$fallbackCompon, _props$headerComponen, _props$view;
    var translations = _objectSpread3({
      title: "Trending facets",
      sliderLabel: "Trending facets"
    }, props.translations);
    var classNames = (_props$classNames = props.classNames) !== null && _props$classNames !== void 0 ? _props$classNames : {};
    var children = (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : createDefaultChildrenComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var FallbackComponent = (_props$fallbackCompon = props.fallbackComponent) !== null && _props$fallbackCompon !== void 0 ? _props$fallbackCompon : createDefaultFallbackComponent();
    var Fallback = function Fallback2() {
      return createElement5(FallbackComponent, {
        Fragment: Fragment5,
        createElement: createElement5
      });
    };
    var Header = (_props$headerComponen = props.headerComponent) !== null && _props$headerComponen !== void 0 ? _props$headerComponen : createDefaultHeaderComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var ViewComponent = (_props$view = props.view) !== null && _props$view !== void 0 ? _props$view : createFacetsView({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var View = function View2(viewProps) {
      return createElement5(ViewComponent, _extends({
        classNames,
        itemComponent: props.itemComponent,
        items: props.items,
        translations,
        Fragment: Fragment5,
        createElement: createElement5
      }, viewProps));
    };
    return children({
      classNames,
      Fallback,
      Header,
      recommendations: props.items,
      status: props.status,
      translations,
      View
    });
  };
}

// node_modules/@algolia/recommend-vdom/dist/esm/TrendingItems.js
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys4(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys4(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function createTrendingItemsComponent(_ref) {
  var createElement5 = _ref.createElement, Fragment5 = _ref.Fragment;
  return function TrendingItems2(props) {
    var _props$classNames, _props$children, _props$fallbackCompon, _props$headerComponen, _props$view;
    var translations = _objectSpread4({
      title: "Trending items",
      sliderLabel: "Trending items"
    }, props.translations);
    var classNames = (_props$classNames = props.classNames) !== null && _props$classNames !== void 0 ? _props$classNames : {};
    var children = (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : createDefaultChildrenComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var FallbackComponent = (_props$fallbackCompon = props.fallbackComponent) !== null && _props$fallbackCompon !== void 0 ? _props$fallbackCompon : createDefaultFallbackComponent();
    var Fallback = function Fallback2() {
      return createElement5(FallbackComponent, {
        Fragment: Fragment5,
        createElement: createElement5
      });
    };
    var Header = (_props$headerComponen = props.headerComponent) !== null && _props$headerComponen !== void 0 ? _props$headerComponen : createDefaultHeaderComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var ViewComponent = (_props$view = props.view) !== null && _props$view !== void 0 ? _props$view : createListViewComponent({
      createElement: createElement5,
      Fragment: Fragment5
    });
    var View = function View2(viewProps) {
      return createElement5(ViewComponent, _extends({
        classNames,
        itemComponent: props.itemComponent,
        items: props.items,
        translations,
        Fragment: Fragment5,
        createElement: createElement5
      }, viewProps));
    };
    return children({
      classNames,
      Fallback,
      Header,
      recommendations: props.items,
      status: props.status,
      translations,
      View
    });
  };
}

// node_modules/@algolia/recommend-react/dist/esm/FrequentlyBoughtTogether.js
var import_react5 = __toESM(require_react());

// node_modules/@algolia/recommend-core/dist/esm/utils/computeAverageIndices.js
var getAverageIndices = function getAverageIndices2(indexTracker, nrOfObjs) {
  var avgIndices = [];
  for (var _i = 0, _Object$keys = Object.keys(indexTracker); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    if (indexTracker[key].nr < 2) {
      indexTracker[key].indexSum += 100;
    }
    avgIndices.push({
      objectID: key,
      avgOfIndices: indexTracker[key].indexSum / nrOfObjs
    });
  }
  return avgIndices.sort(function(a, b) {
    return a.avgOfIndices > b.avgOfIndices ? 1 : -1;
  });
};

// node_modules/@algolia/recommend-core/dist/esm/utils/mapToRecommendations.js
function mapToRecommendations(_ref) {
  var hits = _ref.hits, maxRecommendations = _ref.maxRecommendations, nrOfObjs = _ref.nrOfObjs;
  var indexTracker = {};
  hits.forEach(function(hitsArray) {
    hitsArray.forEach(function(hit, index) {
      if (!indexTracker[hit.objectID]) {
        indexTracker[hit.objectID] = {
          indexSum: index,
          nr: 1
        };
      } else {
        indexTracker[hit.objectID] = {
          indexSum: indexTracker[hit.objectID].indexSum + index,
          nr: indexTracker[hit.objectID].nr + 1
        };
      }
    });
  });
  var sortedAverageIndices = getAverageIndices(indexTracker, nrOfObjs);
  var finalOrder = sortedAverageIndices.reduce(function(orderedHits, avgIndexRef) {
    var result = hits.flat().find(function(hit) {
      return hit.objectID === avgIndexRef.objectID;
    });
    return result ? orderedHits.concat(result) : orderedHits;
  }, []);
  return finalOrder.slice(
    0,
    maxRecommendations && maxRecommendations > 0 ? maxRecommendations : void 0
  );
}

// node_modules/@algolia/recommend-core/dist/esm/utils/sortBy.js
function sortBy(predicate, items) {
  var itemsCopy = _toConsumableArray(items);
  itemsCopy.sort(predicate);
  return itemsCopy;
}

// node_modules/@algolia/recommend-core/dist/esm/utils/mapByScoreToRecommendations.js
function mapByScoreToRecommendations(_ref) {
  var hits = _ref.hits, maxRecommendations = _ref.maxRecommendations;
  return sortBy(function(a, b) {
    var scoreA = a._score || 0;
    var scoreB = b._score || 0;
    return scoreA > scoreB ? -1 : 1;
  }, hits).slice(
    0,
    maxRecommendations && maxRecommendations > 0 ? maxRecommendations : void 0
  );
}

// node_modules/@algolia/recommend-core/dist/esm/utils/uniqBy.js
function uniqBy(key, items) {
  return _toConsumableArray(new Map(items.map(function(item) {
    return [item[key], item];
  })).values());
}

// node_modules/@algolia/recommend-core/dist/esm/version.js
var version = "1.8.0";

// node_modules/@algolia/recommend-core/dist/esm/getFrequentlyBoughtTogether.js
function getFrequentlyBoughtTogether(_ref) {
  var objectIDs = _ref.objectIDs, recommendClient = _ref.recommendClient, _ref$transformItems = _ref.transformItems, transformItems = _ref$transformItems === void 0 ? function(x) {
    return x;
  } : _ref$transformItems, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, queryParameters = _ref.queryParameters, threshold = _ref.threshold;
  var queries = objectIDs.map(function(objectID) {
    return {
      indexName,
      maxRecommendations,
      objectID,
      queryParameters,
      threshold
    };
  });
  recommendClient.addAlgoliaAgent("recommend-core", version);
  return recommendClient.getFrequentlyBoughtTogether(queries).then(function(response) {
    return mapToRecommendations({
      maxRecommendations,
      hits: response.results.map(function(result) {
        return result.hits;
      }),
      nrOfObjs: objectIDs.length
    });
  }).then(function(hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}

// node_modules/@algolia/recommend-core/dist/esm/getRecommendations.js
function getRecommendations(_ref) {
  var objectIDs = _ref.objectIDs, recommendClient = _ref.recommendClient, _ref$transformItems = _ref.transformItems, transformItems = _ref$transformItems === void 0 ? function(x) {
    return x;
  } : _ref$transformItems, fallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, model = _ref.model, queryParameters = _ref.queryParameters, threshold = _ref.threshold;
  var queries = objectIDs.map(function(objectID) {
    return {
      fallbackParameters,
      indexName,
      maxRecommendations,
      model,
      objectID,
      queryParameters,
      threshold
    };
  });
  recommendClient.addAlgoliaAgent("recommend-core", version);
  return recommendClient.getRecommendations(queries).then(function(response) {
    return mapToRecommendations({
      maxRecommendations,
      hits: response.results.map(function(result) {
        return result.hits;
      }),
      nrOfObjs: objectIDs.length
    });
  }).then(function(hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}

// node_modules/@algolia/recommend-core/dist/esm/getRelatedProducts.js
function getRelatedProducts(_ref) {
  var objectIDs = _ref.objectIDs, recommendClient = _ref.recommendClient, _ref$transformItems = _ref.transformItems, transformItems = _ref$transformItems === void 0 ? function(x) {
    return x;
  } : _ref$transformItems, fallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, queryParameters = _ref.queryParameters, threshold = _ref.threshold;
  var queries = objectIDs.map(function(objectID) {
    return {
      fallbackParameters,
      indexName,
      maxRecommendations,
      objectID,
      queryParameters,
      threshold
    };
  });
  recommendClient.addAlgoliaAgent("recommend-core", version);
  return recommendClient.getRelatedProducts(queries).then(function(response) {
    return mapToRecommendations({
      maxRecommendations,
      hits: response.results.map(function(result) {
        return result.hits;
      }),
      nrOfObjs: objectIDs.length
    });
  }).then(function(hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}

// node_modules/@algolia/recommend-core/dist/esm/getTrendingFacets.js
function getTrendingFacets(_ref) {
  var recommendClient = _ref.recommendClient, _ref$transformItems = _ref.transformItems, transformItems = _ref$transformItems === void 0 ? function(x) {
    return x;
  } : _ref$transformItems, fallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, queryParameters = _ref.queryParameters, threshold = _ref.threshold, facetName = _ref.facetName;
  var query = {
    fallbackParameters,
    indexName,
    maxRecommendations,
    queryParameters,
    threshold,
    facetName
  };
  recommendClient.addAlgoliaAgent("recommend-core", version);
  return recommendClient.getTrendingFacets([query]).then(function(response) {
    return mapByScoreToRecommendations({
      maxRecommendations,
      hits: response.results.map(function(result) {
        return result.hits;
      }).flat()
    });
  }).then(function(hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}

// node_modules/@algolia/recommend-core/dist/esm/getTrendingItems.js
function getTrendingItems(_ref) {
  var recommendClient = _ref.recommendClient, _ref$transformItems = _ref.transformItems, transformItems = _ref$transformItems === void 0 ? function(x) {
    return x;
  } : _ref$transformItems, fallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, queryParameters = _ref.queryParameters, threshold = _ref.threshold, facetName = _ref.facetName, facetValue = _ref.facetValue;
  var query = {
    fallbackParameters,
    indexName,
    maxRecommendations,
    queryParameters,
    threshold,
    facetName,
    facetValue
  };
  recommendClient.addAlgoliaAgent("recommend-core", version);
  return recommendClient.getTrendingItems([query]).then(function(response) {
    return mapByScoreToRecommendations({
      maxRecommendations,
      hits: uniqBy("objectID", response.results.map(function(result) {
        return result.hits;
      }).flat())
    });
  }).then(function(hits) {
    return {
      recommendations: transformItems(hits)
    };
  });
}

// node_modules/@algolia/recommend-react/dist/esm/useFrequentlyBoughtTogether.js
var import_react4 = __toESM(require_react());

// node_modules/@algolia/recommend-react/dist/esm/useAlgoliaAgent.js
var import_react = __toESM(require_react());

// node_modules/@algolia/recommend-react/dist/esm/version.js
var version2 = "1.8.0";

// node_modules/@algolia/recommend-react/dist/esm/useAlgoliaAgent.js
function useAlgoliaAgent(props) {
  (0, import_react.useEffect)(function() {
    props.recommendClient.addAlgoliaAgent("recommend-react", version2);
  }, [props.recommendClient]);
}

// node_modules/@algolia/recommend-react/dist/esm/useStableValue.js
var import_react2 = __toESM(require_react());
function useStableValue(value) {
  var _useState = (0, import_react2.useState)(function() {
    return value;
  }), _useState2 = _slicedToArray(_useState, 2), stableValue = _useState2[0], setStableValue = _useState2[1];
  (0, import_react2.useEffect)(function() {
    if (dequal(stableValue, value) === false) {
      setStableValue(value);
    }
  }, [value]);
  return stableValue;
}

// node_modules/@algolia/recommend-react/dist/esm/useStatus.js
var import_react3 = __toESM(require_react());
function useStatus(initialStatus) {
  var timerId = (0, import_react3.useRef)(void 0);
  var _useState = (0, import_react3.useState)(initialStatus), _useState2 = _slicedToArray(_useState, 2), status = _useState2[0], setStatus = _useState2[1];
  (0, import_react3.useEffect)(function() {
    if (status !== "stalled" && timerId.current) {
      clearTimeout(timerId.current);
    }
    if (status === "loading") {
      timerId.current = setTimeout(function() {
        setStatus("stalled");
      }, 300);
    }
  }, [status]);
  return {
    status,
    setStatus
  };
}

// node_modules/@algolia/recommend-react/dist/esm/useFrequentlyBoughtTogether.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys5(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys5(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function useFrequentlyBoughtTogether(_ref) {
  var indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, userObjectIDs = _ref.objectIDs, userQueryParameters = _ref.queryParameters, recommendClient = _ref.recommendClient, threshold = _ref.threshold, userTransformItems = _ref.transformItems;
  var _useState = (0, import_react4.useState)({
    recommendations: []
  }), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];
  var _useStatus = useStatus("loading"), status = _useStatus.status, setStatus = _useStatus.setStatus;
  var objectIDs = useStableValue(userObjectIDs);
  var queryParameters = useStableValue(userQueryParameters);
  useAlgoliaAgent({
    recommendClient
  });
  var transformItemsRef = (0, import_react4.useRef)(userTransformItems);
  (0, import_react4.useEffect)(function() {
    transformItemsRef.current = userTransformItems;
  }, [userTransformItems]);
  (0, import_react4.useEffect)(function() {
    setStatus("loading");
    getFrequentlyBoughtTogether({
      indexName,
      maxRecommendations,
      objectIDs,
      queryParameters,
      recommendClient,
      threshold,
      transformItems: transformItemsRef.current
    }).then(function(response) {
      setResult(response);
      setStatus("idle");
    });
  }, [indexName, maxRecommendations, objectIDs, queryParameters, recommendClient, setStatus, threshold]);
  return _objectSpread5(_objectSpread5({}, result), {}, {
    status
  });
}

// node_modules/@algolia/recommend-react/dist/esm/FrequentlyBoughtTogether.js
var UncontrolledFrequentlyBoughtTogether = createFrequentlyBoughtTogetherComponent({
  createElement: import_react5.createElement,
  Fragment: import_react5.Fragment
});
function FrequentlyBoughtTogether(props) {
  var _useFrequentlyBoughtT = useFrequentlyBoughtTogether(props), recommendations = _useFrequentlyBoughtT.recommendations, status = _useFrequentlyBoughtT.status;
  return import_react5.default.createElement(UncontrolledFrequentlyBoughtTogether, _extends({}, props, {
    items: recommendations,
    status
  }));
}

// node_modules/@algolia/recommend-react/dist/esm/RelatedProducts.js
var import_react7 = __toESM(require_react());

// node_modules/@algolia/recommend-react/dist/esm/useRelatedProducts.js
var import_react6 = __toESM(require_react());
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys6(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys6(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function useRelatedProducts(_ref) {
  var userFallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, userObjectIDs = _ref.objectIDs, userQueryParameters = _ref.queryParameters, recommendClient = _ref.recommendClient, threshold = _ref.threshold, userTransformItems = _ref.transformItems;
  var _useState = (0, import_react6.useState)({
    recommendations: []
  }), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];
  var _useStatus = useStatus("loading"), status = _useStatus.status, setStatus = _useStatus.setStatus;
  var objectIDs = useStableValue(userObjectIDs);
  var queryParameters = useStableValue(userQueryParameters);
  var fallbackParameters = useStableValue(userFallbackParameters);
  useAlgoliaAgent({
    recommendClient
  });
  var transformItemsRef = (0, import_react6.useRef)(userTransformItems);
  (0, import_react6.useEffect)(function() {
    transformItemsRef.current = userTransformItems;
  }, [userTransformItems]);
  (0, import_react6.useEffect)(function() {
    setStatus("loading");
    getRelatedProducts({
      fallbackParameters,
      indexName,
      maxRecommendations,
      objectIDs,
      queryParameters,
      recommendClient,
      threshold,
      transformItems: transformItemsRef.current
    }).then(function(response) {
      setResult(response);
      setStatus("idle");
    });
  }, [fallbackParameters, indexName, maxRecommendations, objectIDs, queryParameters, recommendClient, setStatus, threshold]);
  return _objectSpread6(_objectSpread6({}, result), {}, {
    status
  });
}

// node_modules/@algolia/recommend-react/dist/esm/RelatedProducts.js
var UncontrolledRelatedProducts = createRelatedProductsComponent({
  createElement: import_react7.createElement,
  Fragment: import_react7.Fragment
});
function RelatedProducts(props) {
  var _useRelatedProducts = useRelatedProducts(props), recommendations = _useRelatedProducts.recommendations, status = _useRelatedProducts.status;
  return import_react7.default.createElement(UncontrolledRelatedProducts, _extends({}, props, {
    items: recommendations,
    status
  }));
}

// node_modules/@algolia/recommend-react/dist/esm/TrendingFacets.js
var import_react9 = __toESM(require_react());

// node_modules/@algolia/recommend-react/dist/esm/useTrendingFacets.js
var import_react8 = __toESM(require_react());
function ownKeys7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys7(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys7(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function useTrendingFacets(_ref) {
  var userFallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, userQueryParameters = _ref.queryParameters, recommendClient = _ref.recommendClient, threshold = _ref.threshold, userTransformItems = _ref.transformItems, facetName = _ref.facetName;
  var _useState = (0, import_react8.useState)({
    recommendations: []
  }), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];
  var _useStatus = useStatus("loading"), status = _useStatus.status, setStatus = _useStatus.setStatus;
  var queryParameters = useStableValue(userQueryParameters);
  var fallbackParameters = useStableValue(userFallbackParameters);
  useAlgoliaAgent({
    recommendClient
  });
  var transformItemsRef = (0, import_react8.useRef)(userTransformItems);
  (0, import_react8.useEffect)(function() {
    transformItemsRef.current = userTransformItems;
  }, [userTransformItems]);
  (0, import_react8.useEffect)(function() {
    setStatus("loading");
    getTrendingFacets({
      recommendClient,
      transformItems: transformItemsRef.current,
      fallbackParameters,
      indexName,
      maxRecommendations,
      queryParameters,
      threshold,
      facetName
    }).then(function(response) {
      setResult(response);
      setStatus("idle");
    });
  }, [fallbackParameters, indexName, maxRecommendations, queryParameters, recommendClient, setStatus, threshold, facetName]);
  return _objectSpread7(_objectSpread7({}, result), {}, {
    status
  });
}

// node_modules/@algolia/recommend-react/dist/esm/TrendingFacets.js
var UncontrolledTrendingFacets = createTrendingFacetsComponent({
  createElement: import_react9.createElement,
  Fragment: import_react9.Fragment
});
function TrendingFacets(props) {
  var _useTrendingFacets = useTrendingFacets(props), recommendations = _useTrendingFacets.recommendations, status = _useTrendingFacets.status;
  return import_react9.default.createElement(UncontrolledTrendingFacets, _extends({}, props, {
    items: recommendations,
    status
  }));
}

// node_modules/@algolia/recommend-react/dist/esm/TrendingItems.js
var import_react11 = __toESM(require_react());

// node_modules/@algolia/recommend-react/dist/esm/useTrendingItems.js
var import_react10 = __toESM(require_react());
function ownKeys8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys8(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys8(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function useTrendingItems(_ref) {
  var userFallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, userQueryParameters = _ref.queryParameters, recommendClient = _ref.recommendClient, threshold = _ref.threshold, userTransformItems = _ref.transformItems, facetName = _ref.facetName, facetValue = _ref.facetValue;
  var _useState = (0, import_react10.useState)({
    recommendations: []
  }), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];
  var _useStatus = useStatus("loading"), status = _useStatus.status, setStatus = _useStatus.setStatus;
  var queryParameters = useStableValue(userQueryParameters);
  var fallbackParameters = useStableValue(userFallbackParameters);
  useAlgoliaAgent({
    recommendClient
  });
  var transformItemsRef = (0, import_react10.useRef)(userTransformItems);
  (0, import_react10.useEffect)(function() {
    transformItemsRef.current = userTransformItems;
  }, [userTransformItems]);
  (0, import_react10.useEffect)(function() {
    setStatus("loading");
    getTrendingItems({
      recommendClient,
      transformItems: transformItemsRef.current,
      fallbackParameters,
      indexName,
      maxRecommendations,
      queryParameters,
      threshold,
      facetName,
      facetValue
    }).then(function(response) {
      setResult(response);
      setStatus("idle");
    });
  }, [fallbackParameters, indexName, maxRecommendations, queryParameters, recommendClient, setStatus, threshold, facetName, facetValue]);
  return _objectSpread8(_objectSpread8({}, result), {}, {
    status
  });
}

// node_modules/@algolia/recommend-react/dist/esm/TrendingItems.js
var UncontrolledTrendingItems = createTrendingItemsComponent({
  createElement: import_react11.createElement,
  Fragment: import_react11.Fragment
});
function TrendingItems(props) {
  var _useTrendingItems = useTrendingItems(props), recommendations = _useTrendingItems.recommendations, status = _useTrendingItems.status;
  return import_react11.default.createElement(UncontrolledTrendingItems, _extends({}, props, {
    items: recommendations,
    status
  }));
}

// node_modules/@algolia/recommend-react/dist/esm/useRecommendations.js
var import_react12 = __toESM(require_react());
function ownKeys9(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys9(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys9(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function useRecommendations(_ref) {
  var userFallbackParameters = _ref.fallbackParameters, indexName = _ref.indexName, maxRecommendations = _ref.maxRecommendations, model = _ref.model, userObjectIDs = _ref.objectIDs, userQueryParameters = _ref.queryParameters, recommendClient = _ref.recommendClient, threshold = _ref.threshold, userTransformItems = _ref.transformItems;
  var _useState = (0, import_react12.useState)({
    recommendations: []
  }), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];
  var _useStatus = useStatus("loading"), status = _useStatus.status, setStatus = _useStatus.setStatus;
  var objectIDs = useStableValue(userObjectIDs);
  var queryParameters = useStableValue(userQueryParameters);
  var fallbackParameters = useStableValue(userFallbackParameters);
  useAlgoliaAgent({
    recommendClient
  });
  var transformItemsRef = (0, import_react12.useRef)(userTransformItems);
  (0, import_react12.useEffect)(function() {
    transformItemsRef.current = userTransformItems;
  }, [userTransformItems]);
  (0, import_react12.useEffect)(function() {
    setStatus("loading");
    getRecommendations({
      fallbackParameters,
      indexName,
      maxRecommendations,
      model,
      objectIDs,
      queryParameters,
      recommendClient,
      threshold,
      transformItems: transformItemsRef.current
    }).then(function(response) {
      setResult(response);
      setStatus("idle");
    });
  }, [fallbackParameters, indexName, maxRecommendations, model, objectIDs, queryParameters, recommendClient, setStatus, threshold]);
  return _objectSpread9(_objectSpread9({}, result), {}, {
    status
  });
}
export {
  FrequentlyBoughtTogether,
  RelatedProducts,
  TrendingFacets,
  TrendingItems,
  useFrequentlyBoughtTogether,
  useRecommendations,
  useRelatedProducts,
  useTrendingFacets,
  useTrendingItems
};
//# sourceMappingURL=@algolia_recommend-react.js.map
