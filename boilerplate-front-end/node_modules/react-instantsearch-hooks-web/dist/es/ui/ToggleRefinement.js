import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["classNames", "checked", "onChange", "label"];
import React from 'react';
import { cx } from "./lib/cx.js";
export function ToggleRefinement(_ref) {
  var _ref$classNames = _ref.classNames,
      classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
      checked = _ref.checked,
      onChange = _ref.onChange,
      label = _ref.label,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    className: cx('ais-ToggleRefinement', classNames.root, props.className)
  }), /*#__PURE__*/React.createElement("label", {
    className: cx('ais-ToggleRefinement-label', classNames.label)
  }, /*#__PURE__*/React.createElement("input", {
    className: cx('ais-ToggleRefinement-checkbox', classNames.checkbox),
    type: "checkbox",
    checked: checked,
    onChange: function (_onChange) {
      function onChange(_x) {
        return _onChange.apply(this, arguments);
      }

      onChange.toString = function () {
        return _onChange.toString();
      };

      return onChange;
    }(function (event) {
      onChange(event.target.checked);
    })
  }), /*#__PURE__*/React.createElement("span", {
    className: cx('ais-ToggleRefinement-labelText', classNames.labelText)
  }, label)));
}