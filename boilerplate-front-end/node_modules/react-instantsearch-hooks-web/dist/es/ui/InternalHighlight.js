import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["parts", "highlightedTagName", "nonHighlightedTagName", "separator", "className", "classNames"];
import React, { Fragment } from 'react';
import { cx } from "./lib/cx.js";

function HighlightPart(_ref) {
  var classNames = _ref.classNames,
      children = _ref.children,
      highlightedTagName = _ref.highlightedTagName,
      isHighlighted = _ref.isHighlighted,
      nonHighlightedTagName = _ref.nonHighlightedTagName;
  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;
  return /*#__PURE__*/React.createElement(TagName, {
    className: isHighlighted ? classNames.highlighted : classNames.nonHighlighted
  }, children);
}

export function InternalHighlight(_ref2) {
  var parts = _ref2.parts,
      _ref2$highlightedTagN = _ref2.highlightedTagName,
      highlightedTagName = _ref2$highlightedTagN === void 0 ? 'mark' : _ref2$highlightedTagN,
      _ref2$nonHighlightedT = _ref2.nonHighlightedTagName,
      nonHighlightedTagName = _ref2$nonHighlightedT === void 0 ? 'span' : _ref2$nonHighlightedT,
      _ref2$separator = _ref2.separator,
      separator = _ref2$separator === void 0 ? ', ' : _ref2$separator,
      className = _ref2.className,
      classNames = _ref2.classNames,
      props = _objectWithoutProperties(_ref2, _excluded);

  return /*#__PURE__*/React.createElement("span", _extends({}, props, {
    className: cx(classNames.root, className)
  }), parts.map(function (part, partIndex) {
    var isLastPart = partIndex === parts.length - 1;
    return /*#__PURE__*/React.createElement(Fragment, {
      key: partIndex
    }, part.map(function (subPart, subPartIndex) {
      return /*#__PURE__*/React.createElement(HighlightPart, {
        key: subPartIndex,
        classNames: classNames,
        highlightedTagName: highlightedTagName,
        nonHighlightedTagName: nonHighlightedTagName,
        isHighlighted: subPart.isHighlighted
      }, subPart.value);
    }), !isLastPart && /*#__PURE__*/React.createElement("span", {
      className: classNames.separator
    }, separator));
  }));
}