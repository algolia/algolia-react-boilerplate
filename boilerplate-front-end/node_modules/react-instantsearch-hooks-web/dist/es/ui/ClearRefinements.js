import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["classNames", "disabled", "onClick", "translations"];
import React from 'react';
import { cx } from "./lib/cx.js";
export function ClearRefinements(_ref) {
  var _ref$classNames = _ref.classNames,
      classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      _ref$onClick = _ref.onClick,
      onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,
      translations = _ref.translations,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    className: cx('ais-ClearRefinements', classNames.root, props.className)
  }), /*#__PURE__*/React.createElement("button", {
    disabled: disabled,
    onClick: onClick,
    className: cx('ais-ClearRefinements-button', classNames.button, disabled && cx('ais-ClearRefinements-button--disabled', classNames.disabledButton))
  }, translations.resetButtonText));
}