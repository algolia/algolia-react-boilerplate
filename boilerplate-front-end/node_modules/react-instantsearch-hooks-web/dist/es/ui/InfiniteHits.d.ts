import React from 'react';
import type { Hit } from 'instantsearch.js';
import type { SendEventForHits } from 'instantsearch.js/es/lib/utils';
export declare type InfiniteHitsProps<THit> = React.ComponentProps<'div'> & {
    hits: THit[];
    sendEvent: SendEventForHits;
    hitComponent?: React.JSXElementConstructor<{
        hit: THit;
        sendEvent: SendEventForHits;
    }>;
    isFirstPage: boolean;
    isLastPage: boolean;
    onShowPrevious?: () => void;
    onShowMore: () => void;
    classNames?: Partial<InfiniteHitsClassNames>;
    translations: InfiniteHitsTranslations;
};
export declare type InfiniteHitsClassNames = {
    /**
     * Class names to apply to the root element
     */
    root: string;
    /**
     * Class names to apply to the root element without results
     */
    emptyRoot: string;
    /**
     * Class names to apply to the "load previous" button
     */
    loadPrevious: string;
    /**
     * Class names to apply to the "load previous" button when it's disabled
     */
    disabledLoadPrevious: string;
    /**
     * Class names to apply to the "load more" button
     */
    loadMore: string;
    /**
     * Class names to apply to the "load more" button when it's disabled
     */
    disabledLoadMore: string;
    /**
     * Class names to apply to the list element
     */
    list: string;
    /**
     * Class names to apply to each item element
     */
    item: string;
};
export declare type InfiniteHitsTranslations = {
    showPreviousButtonText: string;
    showMoreButtonText: string;
};
export declare function InfiniteHits<THit extends Hit>({ hitComponent: HitComponent, hits, sendEvent, isFirstPage, isLastPage, onShowPrevious, onShowMore, classNames, translations, ...props }: InfiniteHitsProps<THit>): JSX.Element;
