import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["attributes", "limit", "rootPath", "separator", "showMore", "showMoreLimit", "showParentLevel", "sortBy", "transformItems", "translations"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React from 'react';
import { useHierarchicalMenu } from 'react-instantsearch-hooks';
import { HierarchicalMenu as HierarchicalMenuUiComponent } from "../ui/HierarchicalMenu.js";
export function HierarchicalMenu(_ref) {
  var attributes = _ref.attributes,
      limit = _ref.limit,
      rootPath = _ref.rootPath,
      separator = _ref.separator,
      showMore = _ref.showMore,
      showMoreLimit = _ref.showMoreLimit,
      showParentLevel = _ref.showParentLevel,
      sortBy = _ref.sortBy,
      transformItems = _ref.transformItems,
      translations = _ref.translations,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useHierarchicalMenu = useHierarchicalMenu({
    attributes: attributes,
    limit: limit,
    rootPath: rootPath,
    separator: separator,
    showMore: showMore,
    showMoreLimit: showMoreLimit,
    showParentLevel: showParentLevel,
    sortBy: sortBy,
    transformItems: transformItems
  }, {
    $$widgetType: 'ais.hierarchicalMenu'
  }),
      items = _useHierarchicalMenu.items,
      canRefine = _useHierarchicalMenu.canRefine,
      canToggleShowMore = _useHierarchicalMenu.canToggleShowMore,
      createURL = _useHierarchicalMenu.createURL,
      isShowingMore = _useHierarchicalMenu.isShowingMore,
      refine = _useHierarchicalMenu.refine,
      toggleShowMore = _useHierarchicalMenu.toggleShowMore;

  var uiProps = {
    items: items,
    hasItems: canRefine,
    createURL: createURL,
    onNavigate: refine,
    canToggleShowMore: canToggleShowMore,
    onToggleShowMore: toggleShowMore,
    isShowingMore: isShowingMore,
    translations: _objectSpread({
      showMoreButtonText: function showMoreButtonText(options) {
        return options.isShowingMore ? 'Show less' : 'Show more';
      }
    }, translations)
  };
  return /*#__PURE__*/React.createElement(HierarchicalMenuUiComponent, _extends({}, props, uiProps, {
    showMore: showMore
  }));
}