import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["attribute", "on", "off"];
import React from 'react';
import { useToggleRefinement } from 'react-instantsearch-hooks';
import { ToggleRefinement as ToggleRefinementUiComponent } from "../ui/ToggleRefinement.js";
export function ToggleRefinement(_ref) {
  var attribute = _ref.attribute,
      on = _ref.on,
      off = _ref.off,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useToggleRefinement = useToggleRefinement({
    attribute: attribute,
    on: on,
    off: off
  }, {
    $$widgetType: 'ais.toggleRefinement'
  }),
      refine = _useToggleRefinement.refine,
      value = _useToggleRefinement.value;

  var uiProps = {
    checked: value.isRefined,
    onChange: function onChange(isChecked) {
      return refine({
        isRefined: !isChecked
      });
    }
  };
  return /*#__PURE__*/React.createElement(ToggleRefinementUiComponent, _extends({
    label: value.name
  }, props, uiProps));
}