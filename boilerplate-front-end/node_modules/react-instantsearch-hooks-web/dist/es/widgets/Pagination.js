import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["showFirst", "showPrevious", "showNext", "showLast", "padding", "totalPages", "translations"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React from 'react';
import { usePagination } from 'react-instantsearch-hooks';
import { Pagination as PaginationUiComponent } from "../ui/Pagination.js";
export function Pagination(_ref) {
  var showFirst = _ref.showFirst,
      showPrevious = _ref.showPrevious,
      showNext = _ref.showNext,
      showLast = _ref.showLast,
      padding = _ref.padding,
      totalPages = _ref.totalPages,
      translations = _ref.translations,
      props = _objectWithoutProperties(_ref, _excluded);

  var _usePagination = usePagination({
    padding: padding,
    totalPages: totalPages
  }, {
    $$widgetType: 'ais.pagination'
  }),
      pages = _usePagination.pages,
      currentRefinement = _usePagination.currentRefinement,
      isFirstPage = _usePagination.isFirstPage,
      isLastPage = _usePagination.isLastPage,
      nbPages = _usePagination.nbPages,
      createURL = _usePagination.createURL,
      refine = _usePagination.refine;

  var uiProps = {
    pages: pages,
    currentPage: currentRefinement,
    isFirstPage: isFirstPage,
    isLastPage: isLastPage,
    nbPages: nbPages,
    createURL: createURL,
    onNavigate: refine,
    translations: _objectSpread({
      firstPageItemText: '‹‹',
      previousPageItemText: '‹',
      nextPageItemText: '›',
      lastPageItemText: '››',
      pageItemText: function pageItemText(_ref2) {
        var currentPage = _ref2.currentPage;
        return String(currentPage);
      },
      firstPageItemAriaLabel: 'First',
      previousPageItemAriaLabel: 'Previous',
      nextPageItemAriaLabel: 'Next',
      lastPageItemAriaLabel: 'Last',
      pageItemAriaLabel: function pageItemAriaLabel(_ref3) {
        var currentPage = _ref3.currentPage;
        return "Page ".concat(currentPage);
      }
    }, translations)
  };
  return /*#__PURE__*/React.createElement(PaginationUiComponent, _extends({}, props, uiProps, {
    showFirst: showFirst,
    showPrevious: showPrevious,
    showNext: showNext,
    showLast: showLast
  }));
}