import type { SearchResultsApi } from '../lib/useSearchResults';
import type { SearchStateApi } from '../lib/useSearchState';
import type { InstantSearch, Middleware, UiState } from 'instantsearch.js';
declare type InstantSearchApi<TUiState extends UiState> = SearchStateApi<TUiState> & SearchResultsApi & {
    use: (...middlewares: Middleware[]) => () => void;
    refresh: InstantSearch['refresh'];
    status: InstantSearch['status'];
    error: InstantSearch['error'];
};
export declare type UseInstantSearchProps = {
    /**
     * catch any error happening in the search lifecycle and handle it with this hook.
     */
    catchError?: boolean;
};
export declare function useInstantSearch<TUiState extends UiState = UiState>({ catchError, }?: UseInstantSearchProps): InstantSearchApi<TUiState>;
export {};
