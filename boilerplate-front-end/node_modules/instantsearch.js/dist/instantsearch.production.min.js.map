{"version":3,"file":"instantsearch.production.min.js","sources":["../../../node_modules/algoliasearch-helper/src/functions/merge.js","../../../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../../../node_modules/algoliasearch-helper/src/functions/intersection.js","../../../node_modules/algoliasearch-helper/src/functions/find.js","../../../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../../../node_modules/algoliasearch-helper/src/functions/omit.js","../../../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../../../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../../../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../../../node_modules/algoliasearch-helper/src/functions/orderBy.js","../../../node_modules/algoliasearch-helper/src/functions/compact.js","../../../node_modules/algoliasearch-helper/src/functions/findIndex.js","../../../node_modules/algoliasearch-helper/src/functions/formatSort.js","../../../node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","../../../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../../../node_modules/algoliasearch-helper/src/SearchResults/index.js","../../../node_modules/@algolia/events/events.js","../../../node_modules/algoliasearch-helper/src/functions/inherits.js","../../../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../../../node_modules/algoliasearch-helper/src/requestBuilder.js","../../../node_modules/algoliasearch-helper/src/version.js","../../../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../../../node_modules/algoliasearch-helper/index.js","../src/lib/utils/noop.ts","../src/lib/utils/logger.ts","../src/lib/utils/checkRendering.ts","../src/lib/utils/getObjectType.ts","../src/lib/utils/clearRefinements.ts","../src/lib/utils/escape-html.ts","../src/lib/utils/isPlainObject.ts","../src/lib/utils/escape-highlight.ts","../src/lib/utils/concatHighlightedParts.ts","../src/lib/utils/createSendEventForFacet.ts","../src/lib/utils/isFacetRefined.ts","../src/lib/utils/serializer.ts","../src/lib/utils/createSendEventForHits.ts","../src/lib/utils/isIndexWidget.ts","../src/lib/utils/setIndexHelperState.ts","../src/lib/utils/debounce.ts","../src/lib/utils/defer.ts","../src/lib/utils/documentation.ts","../src/lib/utils/escapeFacetValue.ts","../src/lib/utils/find.ts","../src/lib/utils/geo-search.ts","../src/lib/utils/getContainerNode.ts","../src/lib/utils/isDomElement.ts","../src/lib/utils/getHighlightedParts.ts","../src/lib/utils/getHighlightFromSiblings.ts","../src/lib/utils/getPropertyByPath.ts","../src/lib/utils/getRefinements.ts","../src/lib/utils/getWidgetAttribute.ts","../src/lib/utils/hits-absolute-position.ts","../src/lib/utils/hits-query-id.ts","../src/lib/utils/isEqual.ts","../src/lib/utils/isFiniteNumber.ts","../src/lib/utils/isSpecialClick.ts","../src/lib/utils/uniq.ts","../src/lib/utils/mergeSearchParameters.ts","../src/lib/utils/findIndex.ts","../src/lib/utils/range.ts","../src/lib/utils/render-args.ts","../src/lib/utils/reverseHighlightedParts.ts","../src/lib/utils/safelyRunOnBrowser.ts","../src/lib/utils/toArray.ts","../src/widgets/index/index.ts","../src/lib/utils/resolveSearchParameters.ts","../src/lib/suit.ts","../src/helpers/highlight.ts","../src/helpers/reverseHighlight.ts","../src/helpers/snippet.ts","../src/helpers/reverseSnippet.ts","../src/helpers/insights.ts","../src/helpers/get-insights-anonymous-user-token.ts","../src/lib/formatNumber.ts","../src/lib/stateMappings/simple.ts","../../../node_modules/qs/lib/utils.js","../../../node_modules/qs/lib/stringify.js","../../../node_modules/qs/lib/parse.js","../src/lib/routers/history.ts","../../../node_modules/qs/lib/formats.js","../../../node_modules/qs/lib/index.js","../src/middlewares/createRouterMiddleware.ts","../src/middlewares/createMetadataMiddleware.ts","../src/lib/InstantSearch.ts","../src/connectors/clear-refinements/connectClearRefinements.ts","../src/lib/version.ts","../src/lib/createHelpers.ts","../src/connectors/current-refinements/connectCurrentRefinements.ts","../src/connectors/hierarchical-menu/connectHierarchicalMenu.ts","../src/connectors/hits/connectHits.ts","../src/lib/insights/client.ts","../../../node_modules/preact/dist/preact.module.js","../src/lib/insights/listener.tsx","../src/connectors/hits-per-page/connectHitsPerPage.ts","../src/connectors/hits/connectHitsWithInsights.ts","../src/connectors/infinite-hits/connectInfiniteHits.ts","../src/connectors/menu/connectMenu.ts","../src/connectors/numeric-menu/connectNumericMenu.ts","../src/connectors/infinite-hits/connectInfiniteHitsWithInsights.ts","../src/connectors/pagination/connectPagination.ts","../src/connectors/pagination/Paginator.ts","../src/connectors/range/connectRange.ts","../src/connectors/refinement-list/connectRefinementList.ts","../src/connectors/search-box/connectSearchBox.ts","../src/connectors/sort-by/connectSortBy.ts","../src/connectors/rating-menu/connectRatingMenu.ts","../src/connectors/stats/connectStats.ts","../src/connectors/toggle-refinement/connectToggleRefinement.ts","../src/connectors/breadcrumb/connectBreadcrumb.ts","../src/connectors/geo-search/connectGeoSearch.ts","../src/connectors/powered-by/connectPoweredBy.ts","../src/connectors/configure/connectConfigure.ts","../src/connectors/configure-related-items/connectConfigureRelatedItems.ts","../src/connectors/autocomplete/connectAutocomplete.ts","../src/connectors/query-rules/connectQueryRules.ts","../src/lib/voiceSearchHelper/index.ts","../src/connectors/voice-search/connectVoiceSearch.ts","../src/connectors/answers/connectAnswers.ts","../src/lib/utils/createConcurrentSafePromise.ts","../src/connectors/relevant-sort/connectRelevantSort.ts","../src/connectors/dynamic-widgets/connectDynamicWidgets.ts","../src/connectors/index.ts","../src/widgets/analytics/analytics.ts","../../../node_modules/@algolia/ui-components-shared/dist/esm/cx.js","../src/lib/templating/prepareTemplateProps.ts","../../../node_modules/hogan.js/lib/compiler.js","../../../node_modules/hogan.js/lib/template.js","../../../node_modules/hogan.js/lib/hogan.js","../../../node_modules/htm/dist/htm.module.js","../../../node_modules/htm/preact/index.module.js","../../../node_modules/@babel/runtime/helpers/extends.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../../node_modules/@algolia/ui-components-highlight-vdom/dist/esm/Highlight.js","../src/components/InternalHighlight/InternalHighlight.tsx","../src/components/Highlight/Highlight.tsx","../src/helpers/components/Highlight.tsx","../src/components/ReverseHighlight/ReverseHighlight.tsx","../src/helpers/components/ReverseHighlight.tsx","../src/components/ReverseSnippet/ReverseSnippet.tsx","../src/helpers/components/ReverseSnippet.tsx","../src/components/Snippet/Snippet.tsx","../src/helpers/components/Snippet.tsx","../src/lib/templating/renderTemplate.ts","../src/components/Template/Template.tsx","../src/components/Breadcrumb/Breadcrumb.tsx","../src/components/ClearRefinements/ClearRefinements.tsx","../src/components/CurrentRefinements/CurrentRefinements.tsx","../src/lib/utils/capitalize.ts","../src/widgets/current-refinements/current-refinements.tsx","../src/components/Answers/Answers.tsx","../src/widgets/breadcrumb/defaultTemplates.ts","../src/widgets/breadcrumb/breadcrumb.tsx","../src/widgets/clear-refinements/defaultTemplates.ts","../src/widgets/clear-refinements/clear-refinements.tsx","../src/widgets/answers/defaultTemplates.ts","../src/widgets/answers/answers.tsx","../src/widgets/dynamic-widgets/dynamic-widgets.ts","../src/components/GeoSearchControls/GeoSearchButton.tsx","../src/components/GeoSearchControls/GeoSearchToggle.tsx","../src/components/GeoSearchControls/GeoSearchControls.tsx","../src/widgets/geo-search/GeoSearchRenderer.js","../src/widgets/geo-search/defaultTemplates.tsx","../src/widgets/geo-search/geo-search.ts","../src/components/RefinementList/RefinementListItem.tsx","../src/components/SearchBox/SearchBox.tsx","../src/components/RefinementList/RefinementList.tsx","../src/widgets/hierarchical-menu/defaultTemplates.tsx","../src/widgets/hierarchical-menu/hierarchical-menu.tsx","../src/widgets/hits/defaultTemplates.ts","../src/widgets/hits/hits.tsx","../src/components/Hits/Hits.tsx","../src/components/Selector/Selector.tsx","../src/widgets/hits-per-page/hits-per-page.tsx","../src/widgets/infinite-hits/defaultTemplates.ts","../src/widgets/infinite-hits/infinite-hits.tsx","../src/components/InfiniteHits/InfiniteHits.tsx","../src/widgets/menu/defaultTemplates.tsx","../src/widgets/menu/menu.tsx","../src/components/MenuSelect/MenuSelect.tsx","../src/widgets/menu-select/defaultTemplates.ts","../src/widgets/menu-select/menu-select.tsx","../src/widgets/numeric-menu/defaultTemplates.tsx","../src/widgets/numeric-menu/numeric-menu.tsx","../src/components/Pagination/Pagination.tsx","../src/widgets/pagination/pagination.tsx","../../../node_modules/preact/hooks/dist/hooks.module.js","../src/components/Panel/Panel.tsx","../src/components/PoweredBy/PoweredBy.tsx","../src/components/QueryRuleCustomData/QueryRuleCustomData.tsx","../src/widgets/panel/panel.tsx","../src/widgets/powered-by/powered-by.tsx","../src/widgets/query-rule-context/query-rule-context.tsx","../src/widgets/query-rule-custom-data/query-rule-custom-data.tsx","../src/components/RangeInput/RangeInput.tsx","../src/widgets/range-input/range-input.tsx","../src/components/Slider/Rheostat.tsx","../src/components/Slider/Pit.tsx","../src/components/Slider/Slider.tsx","../src/widgets/range-slider/range-slider.tsx","../src/widgets/rating-menu/defaultTemplates.tsx","../src/components/RelevantSort/RelevantSort.tsx","../src/components/Stats/Stats.tsx","../src/widgets/rating-menu/rating-menu.tsx","../src/widgets/search-box/defaultTemplates.tsx","../src/widgets/refinement-list/defaultTemplates.tsx","../src/widgets/refinement-list/refinement-list.tsx","../src/widgets/relevant-sort/defaultTemplates.ts","../src/widgets/relevant-sort/relevant-sort.tsx","../src/widgets/search-box/search-box.tsx","../src/widgets/sort-by/sort-by.tsx","../src/widgets/stats/stats.tsx","../src/components/ToggleRefinement/ToggleRefinement.tsx","../src/components/VoiceSearch/VoiceSearch.tsx","../src/widgets/voice-search/defaultTemplates.tsx","../src/widgets/toggle-refinement/defaultTemplates.ts","../src/widgets/toggle-refinement/toggle-refinement.tsx","../src/widgets/voice-search/voice-search.tsx","../src/widgets/index.ts","../src/widgets/configure/configure.ts","../src/widgets/configure-related-items/configure-related-items.ts","../src/widgets/geo-search/createHTMLMarker.ts","../src/widgets/places/places.ts","../src/middlewares/createInsightsMiddleware.ts","../src/lib/utils/getAppIdAndApiKey.ts","../src/lib/stateMappings/singleIndex.ts","../src/lib/infiniteHitsCache/sessionStorage.ts","../src/index.ts"],"sourcesContent":["'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__'\n    ) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns any\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns any\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function(key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function(result) {\n      var facets = result && result.facets\n        ? result.facets\n        : {};\n\n      Object.keys(facets).forEach(function(dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({data: sortedChildren}, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array}\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function(acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function(item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function(facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering=}\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(function(data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (Boolean(facetOrdering)) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error(\n      'options.sortBy is optional but if defined it must be ' +\n        'either an array of string (predicates) or a sorting function'\n    );\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort(function(a, b) {\n      return a.localeCompare(b);\n    })\n    .reduce(function(acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0].split(separator).slice(0, -1).reduce(\n          function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value: level === 0\n                ? segment\n                : [map[map.length - 1].value, segment].join(separator)\n            });\n          }\n        , []);\n\n        filtersMap.forEach(function(filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function(attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n\n          var filteredFacetFilters = (params.facetFilters || []).reduce(function(acc, facetFilter) {\n            if (Array.isArray(facetFilter)) {\n              var filtered = facetFilter.filter(function(filterValue) {\n                return !hasHierarchicalFacetFilter(filterValue);\n              });\n\n              if (filtered.length > 0) {\n                acc.push(filtered);\n              }\n            }\n\n            if (typeof facetFilter === 'string' && !hasHierarchicalFacetFilter(facetFilter)) {\n              acc.push(facetFilter);\n            }\n\n            return acc;\n          }, []);\n\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(parent.attribute + ':' + parent.value);\n          } else {\n            params.facetFilters = filteredFacetFilters.length > 0 ? filteredFacetFilters : undefined;\n          }\n\n          queries.push({indexName: index, params: params});\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    ));\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = '3.11.1';\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      {indexName: state.index, params: algoliaQuery}\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery\n        }\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.escapedValue = escapeFacetValue(f.value);\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n        : state.isFacetRefined(facet, f.escapedValue);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","export function noop(..._args: any[]): void {}\n","import { noop } from './noop';\n\ntype Warn = (message: string) => void;\n\ntype Warning = {\n  (condition: boolean, message: string): void;\n  cache: { [message: string]: boolean };\n};\n\n/**\n * Logs a warning when this function is called, in development environment only.\n */\nlet deprecate = <TCallback extends (...args: any[]) => any>(\n  fn: TCallback,\n  // @ts-ignore this parameter is used in the __DEV__ branch\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  message: string\n) => fn;\n\n/**\n * Logs a warning\n * This is used to log issues in development environment only.\n */\nlet warn: Warn = noop;\n\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\nlet warning = noop as Warning;\n\nif (__DEV__) {\n  warn = (message) => {\n    // eslint-disable-next-line no-console\n    console.warn(`[InstantSearch.js]: ${message.trim()}`);\n  };\n\n  deprecate = (fn, message) => {\n    let hasAlreadyPrinted = false;\n\n    return function (...args) {\n      if (!hasAlreadyPrinted) {\n        hasAlreadyPrinted = true;\n\n        warn(message);\n      }\n\n      return fn(...args);\n    } as typeof fn;\n  };\n\n  warning = ((condition, message) => {\n    if (condition) {\n      return;\n    }\n\n    const hasAlreadyPrinted = warning.cache[message];\n\n    if (!hasAlreadyPrinted) {\n      warning.cache[message] = true;\n\n      warn(message);\n    }\n  }) as Warning;\n\n  warning.cache = {};\n}\n\nexport { warn, deprecate, warning };\n","import type { Renderer } from '../../types/connector';\nimport { getObjectType } from './getObjectType';\n\nexport function checkRendering<TRenderOptions, TWidgetParams>(\n  rendering: Renderer<TRenderOptions, TWidgetParams>,\n  usage: string\n): void {\n  if (rendering === undefined || typeof rendering !== 'function') {\n    throw new Error(`The render function is not valid (received type ${getObjectType(\n      rendering\n    )}).\n\n${usage}`);\n  }\n}\n","export function getObjectType(object: unknown): string {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\n\n/**\n * Clears the refinements of a SearchParameters object based on rules provided.\n * The included attributes list is applied before the excluded attributes list. If the list\n * is not provided, this list of all the currently refined attributes is used as included attributes.\n * @returns search parameters with refinements cleared\n */\nexport function clearRefinements({\n  helper,\n  attributesToClear = [],\n}: {\n  helper: AlgoliaSearchHelper;\n  attributesToClear?: string[];\n}): SearchParameters {\n  let finalState = helper.state.setPage(0);\n\n  finalState = attributesToClear.reduce((state, attribute) => {\n    if (finalState.isNumericRefined(attribute)) {\n      return state.removeNumericRefinement(attribute);\n    }\n    if (finalState.isHierarchicalFacet(attribute)) {\n      return state.removeHierarchicalFacetRefinement(attribute);\n    }\n    if (finalState.isDisjunctiveFacet(attribute)) {\n      return state.removeDisjunctiveFacetRefinement(attribute);\n    }\n    if (finalState.isConjunctiveFacet(attribute)) {\n      return state.removeFacetRefinement(attribute);\n    }\n\n    return state;\n  }, finalState);\n\n  if (attributesToClear.indexOf('query') !== -1) {\n    finalState = finalState.setQuery('');\n  }\n\n  return finalState;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/escape.js\n */\n\n// Used to map characters to HTML entities.\nconst htmlEntities = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexUnescapedHtml = /[&<>\"']/g;\nconst regexHasUnescapedHtml = RegExp(regexUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n */\nexport function escape(value: string): string {\n  return value && regexHasUnescapedHtml.test(value)\n    ? value.replace(\n        regexUnescapedHtml,\n        (character) => htmlEntities[character as keyof typeof htmlEntities]\n      )\n    : value;\n}\n\n/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n// Used to map HTML entities to characters.\nconst htmlCharacters = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n// Used to match HTML entities and HTML characters.\nconst regexEscapedHtml = /&(amp|quot|lt|gt|#39);/g;\nconst regexHasEscapedHtml = RegExp(regexEscapedHtml.source);\n\n/**\n * Converts the HTML entities \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * characters.\n */\nexport function unescape(value: string): string {\n  return value && regexHasEscapedHtml.test(value)\n    ? value.replace(\n        regexEscapedHtml,\n        (character) => htmlCharacters[character as keyof typeof htmlCharacters]\n      )\n    : value;\n}\n","/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/master/isPlainObject.js\n */\n\nfunction getTag(value: any): string {\n  if (value === null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObjectLike(value: any): boolean {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks if `value` is a plain object.\n *\n * A plain object is an object created by the `Object`\n * constructor or with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value: any): boolean {\n  if (!isObjectLike(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n","import { escape } from './escape-html';\nimport { isPlainObject } from './isPlainObject';\nimport type { Hit, FacetHit, EscapedHits } from '../../types';\n\nexport const TAG_PLACEHOLDER = {\n  highlightPreTag: '__ais-highlight__',\n  highlightPostTag: '__/ais-highlight__',\n};\n\nexport const TAG_REPLACEMENT = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nfunction replaceTagsAndEscape(value: string): string {\n  return escape(value)\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPreTag, 'g'),\n      TAG_REPLACEMENT.highlightPreTag\n    )\n    .replace(\n      new RegExp(TAG_PLACEHOLDER.highlightPostTag, 'g'),\n      TAG_REPLACEMENT.highlightPostTag\n    );\n}\n\nfunction recursiveEscape(input: any): any {\n  if (isPlainObject(input) && typeof input.value !== 'string') {\n    return Object.keys(input).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: recursiveEscape(input[key]),\n      }),\n      {}\n    );\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(recursiveEscape);\n  }\n\n  return {\n    ...input,\n    value: replaceTagsAndEscape(input.value),\n  };\n}\n\nexport function escapeHits<THit extends Hit>(\n  hits: THit[] | EscapedHits<THit>\n): EscapedHits<THit> {\n  if ((hits as EscapedHits).__escaped === undefined) {\n    // We don't override the value on hit because it will mutate the raw results\n    // instead we make a shallow copy and we assign the escaped values on it.\n    hits = hits.map(({ ...hit }) => {\n      if (hit._highlightResult) {\n        hit._highlightResult = recursiveEscape(hit._highlightResult);\n      }\n\n      if (hit._snippetResult) {\n        hit._snippetResult = recursiveEscape(hit._snippetResult);\n      }\n\n      return hit;\n    });\n\n    (hits as EscapedHits).__escaped = true;\n  }\n\n  return hits as EscapedHits<THit>;\n}\n\nexport function escapeFacets(facetHits: FacetHit[]): FacetHit[] {\n  return facetHits.map((h) => ({\n    ...h,\n    highlighted: replaceTagsAndEscape(h.highlighted),\n  }));\n}\n","import type { HighlightedParts } from '../../types';\nimport { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function concatHighlightedParts(parts: HighlightedParts[]) {\n  const { highlightPreTag, highlightPostTag } = TAG_REPLACEMENT;\n\n  return parts\n    .map((part) =>\n      part.isHighlighted\n        ? highlightPreTag + part.value + highlightPostTag\n        : part.value\n    )\n    .join('');\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport type { InstantSearch } from '../../types';\nimport { isFacetRefined } from './isFacetRefined';\n\ntype BuiltInSendEventForFacet = (\n  eventType: string,\n  facetValue: string,\n  eventName?: string\n) => void;\ntype CustomSendEventForFacet = (customPayload: any) => void;\n\nexport type SendEventForFacet = BuiltInSendEventForFacet &\n  CustomSendEventForFacet;\n\ntype CreateSendEventForFacetOptions = {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string | ((facetValue: string) => string);\n  widgetType: string;\n};\n\nexport function createSendEventForFacet({\n  instantSearchInstance,\n  helper,\n  attribute: attr,\n  widgetType,\n}: CreateSendEventForFacetOptions): SendEventForFacet {\n  const sendEventForFacet: SendEventForFacet = (...args: any[]) => {\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    const attribute = typeof attr === 'string' ? attr : attr(facetValue);\n\n    if (args.length === 1 && typeof args[0] === 'object') {\n      instantSearchInstance.sendEventToInsights(args[0]);\n    } else if (\n      eventType === 'click' &&\n      (args.length === 2 || args.length === 3)\n    ) {\n      if (!isFacetRefined(helper, attribute, facetValue)) {\n        // send event only when the facet is being checked \"ON\"\n        instantSearchInstance.sendEventToInsights({\n          insightsMethod: 'clickedFilters',\n          widgetType,\n          eventType,\n          payload: {\n            eventName,\n            index: helper.getIndex(),\n            filters: [`${attribute}:${facetValue}`],\n          },\n          attribute,\n        });\n      }\n    } else if (__DEV__) {\n      throw new Error(\n        `You need to pass two arguments like:\n  sendEvent('click', facetValue);\n\nIf you want to send a custom payload, you can pass one object: sendEvent(customPayload);\n`\n      );\n    }\n  };\n\n  return sendEventForFacet;\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nexport function isFacetRefined(\n  helper: AlgoliaSearchHelper,\n  facet: string,\n  value: string\n) {\n  if (helper.state.isHierarchicalFacet(facet)) {\n    return helper.state.isHierarchicalFacetRefined(facet, value);\n  } else if (helper.state.isConjunctiveFacet(facet)) {\n    return helper.state.isFacetRefined(facet, value);\n  } else {\n    return helper.state.isDisjunctiveFacetRefined(facet, value);\n  }\n}\n","export function serializePayload<TPayload>(payload: TPayload): string {\n  return btoa(encodeURIComponent(JSON.stringify(payload)));\n}\n\nexport function deserializePayload<TPayload>(serialized: string): TPayload {\n  return JSON.parse(decodeURIComponent(atob(serialized)));\n}\n","import type { InstantSearch, Hit, EscapedHits } from '../../types';\nimport { serializePayload } from './serializer';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype BuiltInSendEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => void;\ntype CustomSendEventForHits = (customPayload: any) => void;\nexport type SendEventForHits = BuiltInSendEventForHits & CustomSendEventForHits;\n\ntype BuiltInBindEventForHits = (\n  eventType: string,\n  hits: Hit | Hit[],\n  eventName?: string\n) => string;\ntype CustomBindEventForHits = (customPayload: any) => string;\nexport type BindEventForHits = BuiltInBindEventForHits & CustomBindEventForHits;\n\nfunction chunk<TItem>(arr: TItem[], chunkSize: number = 20): TItem[][] {\n  const chunks: TItem[][] = [];\n  for (let i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n  return chunks;\n}\n\nconst buildPayloads = ({\n  index,\n  widgetType,\n  methodName,\n  args,\n  isSearchStalled,\n}: {\n  widgetType: string;\n  index: string;\n  methodName: 'sendEvent' | 'bindEvent';\n  args: any[];\n  isSearchStalled: boolean;\n}): InsightsEvent[] => {\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && typeof args[0] === 'object') {\n    return [args[0]];\n  }\n  const eventType: string = args[0];\n  const hits: Hit | Hit[] | EscapedHits = args[1];\n  const eventName: string | undefined = args[2];\n  if (!hits) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass hit or hits as the second argument like:\n  ${methodName}(eventType, hit);\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (__DEV__) {\n      throw new Error(\n        `You need to pass eventName as the third argument for 'click' or 'conversion' events like:\n  ${methodName}('click', hit, 'Product Purchased');\n\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\n  `\n      );\n    } else {\n      return [];\n    }\n  }\n  const hitsArray: Hit[] = Array.isArray(hits)\n    ? removeEscapedFromHits(hits)\n    : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n  const queryID = hitsArray[0].__queryID;\n  const hitsChunks = chunk(hitsArray);\n  const objectIDsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.objectID)\n  );\n  const positionsByChunk = hitsChunks.map((batch) =>\n    batch.map((hit) => hit.__position)\n  );\n\n  if (eventType === 'view') {\n    if (isSearchStalled) {\n      return [];\n    }\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType,\n        eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map((batch, i) => {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType,\n        eventType,\n        payload: {\n          eventName,\n          index,\n          queryID,\n          objectIDs: objectIDsByChunk[i],\n        },\n        hits: batch,\n      };\n    });\n  } else if (__DEV__) {\n    throw new Error(`eventType(\"${eventType}\") is not supported.\n    If you want to send a custom payload, you can pass one object: ${methodName}(customPayload);\n    `);\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits: Hit[] | EscapedHits): Hit[] {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits({\n  instantSearchInstance,\n  index,\n  widgetType,\n}: {\n  instantSearchInstance: InstantSearch;\n  index: string;\n  widgetType: string;\n}): SendEventForHits {\n  const sendEventForHits: SendEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'sendEvent',\n      args,\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    });\n\n    payloads.forEach((payload) =>\n      instantSearchInstance.sendEventToInsights(payload)\n    );\n  };\n  return sendEventForHits;\n}\n\nexport function createBindEventForHits({\n  index,\n  widgetType,\n}: {\n  index: string;\n  widgetType: string;\n}): BindEventForHits {\n  const bindEventForHits: BindEventForHits = (...args: any[]) => {\n    const payloads = buildPayloads({\n      widgetType,\n      index,\n      methodName: 'bindEvent',\n      args,\n      isSearchStalled: false,\n    });\n\n    return payloads.length\n      ? `data-insights-event=${serializePayload(payloads)}`\n      : '';\n  };\n  return bindEventForHits;\n}\n","import type { Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function isIndexWidget(\n  widget: Widget | IndexWidget\n): widget is IndexWidget {\n  return widget.$$type === 'ais.index';\n}\n","import type { UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\nimport { isIndexWidget } from './isIndexWidget';\nimport { checkIndexUiState } from './checkIndexUiState';\n\nexport function setIndexHelperState<TUiState extends UiState>(\n  finalUiState: TUiState,\n  indexWidget: IndexWidget\n) {\n  const nextIndexUiState = finalUiState[indexWidget.getIndexId()] || {};\n\n  if (__DEV__) {\n    checkIndexUiState({\n      index: indexWidget,\n      indexUiState: nextIndexUiState,\n    });\n  }\n\n  indexWidget.getHelper()!.setState(\n    indexWidget.getWidgetSearchParameters(indexWidget.getHelper()!.state, {\n      uiState: nextIndexUiState,\n    })\n  );\n\n  indexWidget\n    .getWidgets()\n    .filter(isIndexWidget)\n    .forEach((widget) => setIndexHelperState(finalUiState, widget));\n}\n","import type { Awaited } from '../../types';\n\ntype Func = (...args: any[]) => any;\n\nexport type DebouncedFunction<TFunction extends Func> = (\n  this: ThisParameterType<TFunction>,\n  ...args: Parameters<TFunction>\n) => Promise<Awaited<ReturnType<TFunction>>>;\n\n// Debounce a function call to the trailing edge.\n// The debounced function returns a promise.\nexport function debounce<TFunction extends Func>(\n  func: TFunction,\n  wait: number\n): DebouncedFunction<TFunction> {\n  let lastTimeout: ReturnType<typeof setTimeout> | null = null;\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      if (lastTimeout) {\n        clearTimeout(lastTimeout);\n      }\n      lastTimeout = setTimeout(() => {\n        lastTimeout = null;\n        Promise.resolve(func(...args))\n          .then(resolve)\n          .catch(reject);\n      }, wait);\n    });\n  };\n}\n","const nextMicroTask = Promise.resolve();\n\ntype Callback = (...args: any[]) => void;\ntype Defer = {\n  wait(): Promise<void>;\n  cancel(): void;\n};\n\nexport function defer<TCallback extends Callback>(\n  callback: TCallback\n): TCallback & Defer {\n  let progress: Promise<void> | null = null;\n  let cancelled = false;\n\n  const fn = ((...args: Parameters<TCallback>) => {\n    if (progress !== null) {\n      return;\n    }\n\n    progress = nextMicroTask.then(() => {\n      progress = null;\n\n      if (cancelled) {\n        cancelled = false;\n        return;\n      }\n\n      callback(...args);\n    });\n  }) as TCallback & Defer;\n\n  fn.wait = () => {\n    if (progress === null) {\n      throw new Error(\n        'The deferred function should be called before calling `wait()`'\n      );\n    }\n\n    return progress;\n  };\n\n  fn.cancel = () => {\n    if (progress === null) {\n      return;\n    }\n\n    cancelled = true;\n  };\n\n  return fn;\n}\n","type WidgetParam = {\n  name: string;\n  connector?: boolean;\n};\n\nexport function createDocumentationLink({\n  name,\n  connector = false,\n}: WidgetParam): string {\n  return [\n    'https://www.algolia.com/doc/api-reference/widgets/',\n    name,\n    '/js/',\n    connector ? '#connector' : '',\n  ].join('');\n}\n\ntype DocumentationMessageGenerator = (message?: string) => string;\n\nexport function createDocumentationMessageGenerator(\n  ...widgets: WidgetParam[]\n): DocumentationMessageGenerator {\n  const links = widgets\n    .map((widget) => createDocumentationLink(widget))\n    .join(', ');\n\n  return (message?: string) =>\n    [message, `See documentation: ${links}`].filter(Boolean).join('\\n\\n');\n}\n","type FacetValue = string | number | boolean | undefined;\n\nexport function unescapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if (typeof value === 'string') {\n    return value.replace(/^\\\\-/, '-') as TFacetValue;\n  }\n\n  return value;\n}\n\nexport function escapeFacetValue<TFacetValue extends FacetValue>(\n  value: TFacetValue\n): TFacetValue {\n  if ((typeof value === 'number' && value < 0) || typeof value === 'string') {\n    return String(value).replace(/^-/, '\\\\-') as TFacetValue;\n  }\n\n  return value;\n}\n","// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nexport function find<TItem>(\n  items: TItem[],\n  predicate: (value: TItem, index: number, obj: TItem[]) => boolean\n): TItem | undefined {\n  let value: TItem;\n  for (let i = 0; i < items.length; i++) {\n    value = items[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n","const latLngRegExp = /^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)$/;\n\nexport function aroundLatLngToPosition(value: string) {\n  const pattern = value.match(latLngRegExp);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!pattern) {\n    throw new Error(`Invalid value for \"aroundLatLng\" parameter: \"${value}\"`);\n  }\n\n  return {\n    lat: parseFloat(pattern[1]),\n    lng: parseFloat(pattern[2]),\n  };\n}\n\nexport type LatLng = Array<[number, number, number, number]>;\n\nfunction insideBoundingBoxArrayToBoundingBox(value: LatLng) {\n  const [\n    [neLat, neLng, swLat, swLng] = [undefined, undefined, undefined, undefined],\n  ] = value;\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: [${value}]`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nfunction insideBoundingBoxStringToBoundingBox(value: string) {\n  const [neLat, neLng, swLat, swLng] = value.split(',').map(parseFloat);\n\n  // Since the value provided is the one send with the request, the API should\n  // throw an error due to the wrong format. So throw an error should be safe.\n  if (!neLat || !neLng || !swLat || !swLng) {\n    throw new Error(\n      `Invalid value for \"insideBoundingBox\" parameter: \"${value}\"`\n    );\n  }\n\n  return {\n    northEast: {\n      lat: neLat,\n      lng: neLng,\n    },\n    southWest: {\n      lat: swLat,\n      lng: swLng,\n    },\n  };\n}\n\nexport function insideBoundingBoxToBoundingBox(value: string | LatLng) {\n  if (Array.isArray(value)) {\n    return insideBoundingBoxArrayToBoundingBox(value);\n  }\n\n  return insideBoundingBoxStringToBoundingBox(value);\n}\n","import { isDomElement } from './isDomElement';\n\n/**\n * Return the container. If it's a string, it is considered a\n * css selector and retrieves the first matching element. Otherwise\n * test if it validates that it's a correct DOMElement.\n *\n * @param {string|HTMLElement} selectorOrHTMLElement CSS Selector or container node.\n * @return {HTMLElement} Container node\n * @throws Error when the type is not correct\n */\nexport function getContainerNode(\n  selectorOrHTMLElement: string | HTMLElement\n): HTMLElement {\n  const isSelectorString = typeof selectorOrHTMLElement === 'string';\n  const domElement = isSelectorString\n    ? document.querySelector(selectorOrHTMLElement as string)\n    : selectorOrHTMLElement;\n\n  if (!isDomElement(domElement)) {\n    let errorMessage = 'Container must be `string` or `HTMLElement`.';\n\n    if (isSelectorString) {\n      errorMessage += ` Unable to find ${selectorOrHTMLElement}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  return domElement;\n}\n","export function isDomElement(object: any): object is HTMLElement {\n  return (\n    object instanceof HTMLElement || (Boolean(object) && object.nodeType > 0)\n  );\n}\n","import { TAG_REPLACEMENT } from './escape-highlight';\n\nexport function getHighlightedParts(highlightedValue: string) {\n  const { highlightPostTag, highlightPreTag } = TAG_REPLACEMENT;\n\n  const splitByPreTag = highlightedValue.split(highlightPreTag);\n  const firstValue = splitByPreTag.shift();\n  const elements = !firstValue\n    ? []\n    : [{ value: firstValue, isHighlighted: false }];\n\n  splitByPreTag.forEach((split) => {\n    const splitByPostTag = split.split(highlightPostTag);\n\n    elements.push({\n      value: splitByPostTag[0],\n      isHighlighted: true,\n    });\n\n    if (splitByPostTag[1] !== '') {\n      elements.push({\n        value: splitByPostTag[1],\n        isHighlighted: false,\n      });\n    }\n  });\n\n  return elements;\n}\n","import { unescape } from './escape-html';\nimport type { HighlightedParts } from '../../types';\n\nconst hasAlphanumeric = new RegExp(/\\w/i);\n\nexport function getHighlightFromSiblings(parts: HighlightedParts[], i: number) {\n  const current = parts[i];\n  const isNextHighlighted = parts[i + 1]?.isHighlighted || true;\n  const isPreviousHighlighted = parts[i - 1]?.isHighlighted || true;\n\n  if (\n    !hasAlphanumeric.test(unescape(current.value)) &&\n    isPreviousHighlighted === isNextHighlighted\n  ) {\n    return isPreviousHighlighted;\n  }\n\n  return current.isHighlighted;\n}\n","export function getPropertyByPath(\n  object: Record<string, any> | undefined,\n  path: string | string[]\n): any {\n  const parts = Array.isArray(path) ? path : path.split('.');\n\n  return parts.reduce((current, key) => current && current[key], object);\n}\n","import type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport { find } from './find';\nimport { unescapeFacetValue, escapeFacetValue } from './escapeFacetValue';\n\nexport type FacetRefinement = {\n  type: 'facet' | 'disjunctive' | 'hierarchical';\n  attribute: string;\n  name: string;\n  escapedValue: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type TagRefinement = {\n  type: 'tag';\n  attribute: string;\n  name: string;\n};\n\nexport type QueryRefinement = {\n  type: 'query';\n  attribute: 'query';\n  query: string;\n  name: string;\n};\n\nexport type NumericRefinement = {\n  type: 'numeric';\n  numericValue: number;\n  operator: '<' | '<=' | '=' | '!=' | '>=' | '>';\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type FacetExcludeRefinement = {\n  type: 'exclude';\n  exclude: boolean;\n  attribute: string;\n  name: string;\n  count?: number;\n  exhaustive?: boolean;\n};\n\nexport type Refinement =\n  | FacetRefinement\n  | QueryRefinement\n  | NumericRefinement\n  | FacetExcludeRefinement\n  | TagRefinement;\n\nfunction getRefinement(\n  state: SearchParameters,\n  type: FacetRefinement['type'],\n  attribute: FacetRefinement['attribute'],\n  name: FacetRefinement['name'],\n  resultsFacets: SearchResults['facets' | 'hierarchicalFacets'] = []\n): FacetRefinement {\n  const res: FacetRefinement = {\n    type,\n    attribute,\n    name,\n    escapedValue: escapeFacetValue(name),\n  };\n  let facet: any = find(\n    resultsFacets,\n    (resultsFacet) => resultsFacet.name === attribute\n  );\n  let count: number;\n\n  if (type === 'hierarchical') {\n    const facetDeclaration = state.getHierarchicalFacetByName(attribute);\n    const nameParts = name.split(facetDeclaration.separator);\n\n    const getFacetRefinement =\n      (facetData: any): ((refinementKey: string) => any) =>\n      (refinementKey: string): any =>\n        facetData[refinementKey];\n\n    for (let i = 0; facet !== undefined && i < nameParts.length; ++i) {\n      facet =\n        facet &&\n        facet.data &&\n        find(\n          Object.keys(facet.data).map(getFacetRefinement(facet.data)),\n          (refinement) => refinement.name === nameParts[i]\n        );\n    }\n\n    count = facet && facet.count;\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport function getRefinements(\n  results: SearchResults | Record<string, never>,\n  state: SearchParameters,\n  includesQuery: boolean = false\n): Refinement[] {\n  const refinements: Refinement[] = [];\n  const {\n    facetsRefinements = {},\n    facetsExcludes = {},\n    disjunctiveFacetsRefinements = {},\n    hierarchicalFacetsRefinements = {},\n    numericRefinements = {},\n    tagRefinements = [],\n  } = state;\n\n  Object.keys(facetsRefinements).forEach((attribute) => {\n    const refinementNames = facetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(state, 'facet', attribute, refinementName, results.facets)\n      );\n    });\n  });\n\n  Object.keys(facetsExcludes).forEach((attribute) => {\n    const refinementNames = facetsExcludes[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push({\n        type: 'exclude',\n        attribute,\n        name: refinementName,\n        exclude: true,\n      });\n    });\n  });\n\n  Object.keys(disjunctiveFacetsRefinements).forEach((attribute) => {\n    const refinementNames = disjunctiveFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinementName) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'disjunctive',\n          attribute,\n          // We unescape any disjunctive refined values with `unescapeFacetValue` because\n          // they can be escaped on negative numeric values with `escapeFacetValue`.\n          unescapeFacetValue(refinementName),\n          results.disjunctiveFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(hierarchicalFacetsRefinements).forEach((attribute) => {\n    const refinementNames = hierarchicalFacetsRefinements[attribute];\n\n    refinementNames.forEach((refinement) => {\n      refinements.push(\n        getRefinement(\n          state,\n          'hierarchical',\n          attribute,\n          refinement,\n          results.hierarchicalFacets\n        )\n      );\n    });\n  });\n\n  Object.keys(numericRefinements).forEach((attribute) => {\n    const operators = numericRefinements[attribute];\n\n    Object.keys(operators).forEach((operatorOriginal) => {\n      const operator = operatorOriginal as SearchParameters.Operator;\n      const valueOrValues = operators[operator];\n      const refinementNames = Array.isArray(valueOrValues)\n        ? valueOrValues\n        : [valueOrValues];\n\n      refinementNames.forEach((refinementName: any) => {\n        refinements.push({\n          type: 'numeric',\n          attribute,\n          name: `${refinementName}`,\n          numericValue: refinementName,\n          operator: operator as NumericRefinement['operator'],\n        });\n      });\n    });\n  });\n\n  tagRefinements.forEach((refinementName) => {\n    refinements.push({ type: 'tag', attribute: '_tags', name: refinementName });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query,\n    });\n  }\n\n  return refinements;\n}\n","import type { InitOptions, Widget } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function getWidgetAttribute(\n  widget: Widget | IndexWidget,\n  initOptions: InitOptions\n): string {\n  const renderState = widget.getWidgetRenderState?.(initOptions);\n\n  let attribute = null;\n\n  if (renderState && renderState.widgetParams) {\n    // casting as widgetParams is checked just before\n    const widgetParams = renderState.widgetParams as Record<string, unknown>;\n\n    if (widgetParams.attribute) {\n      attribute = widgetParams.attribute;\n    } else if (Array.isArray(widgetParams.attributes)) {\n      attribute = widgetParams.attributes[0];\n    }\n  }\n\n  if (typeof attribute !== 'string') {\n    throw new Error(`Could not find the attribute of the widget:\n\n${JSON.stringify(widget)}\n\nPlease check whether the widget's getWidgetRenderState returns widgetParams.attribute correctly.`);\n  }\n\n  return attribute;\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addAbsolutePosition<THit extends AlgoliaHit>(\n  hits: THit[],\n  page: number,\n  hitsPerPage: number\n): Array<THit & { __position: number }> {\n  return hits.map((hit, idx) => ({\n    ...hit,\n    __position: hitsPerPage * page + idx + 1,\n  }));\n}\n","import type { AlgoliaHit } from '../../types';\n\nexport function addQueryID<THit extends AlgoliaHit>(\n  hits: THit[],\n  queryID?: string\n): Array<THit & { __queryID?: string }> {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map((hit) => ({\n    ...hit,\n    __queryID: queryID,\n  }));\n}\n","function isPrimitive(obj: any): boolean {\n  return obj !== Object(obj);\n}\n\nexport function isEqual(first: any, second: any): boolean {\n  if (first === second) {\n    return true;\n  }\n\n  if (\n    isPrimitive(first) ||\n    isPrimitive(second) ||\n    typeof first === 'function' ||\n    typeof second === 'function'\n  ) {\n    return first === second;\n  }\n\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n\n  for (const key of Object.keys(first)) {\n    if (!(key in second)) {\n      return false;\n    }\n\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This is the `Number.isFinite()` polyfill recommended by MDN.\n// We do not provide any tests for this function.\n// See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n// @MAJOR Replace with the native `Number.isFinite` method\nexport function isFiniteNumber(value: any): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n","export function isSpecialClick(event: MouseEvent): boolean {\n  const isMiddleClick = event.button === 1;\n\n  return (\n    isMiddleClick ||\n    event.altKey ||\n    event.ctrlKey ||\n    event.metaKey ||\n    event.shiftKey\n  );\n}\n","export function uniq<TItem>(array: TItem[]): TItem[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index);\n}\n","import type { SearchParameters } from 'algoliasearch-helper';\nimport { findIndex } from './findIndex';\nimport { uniq } from './uniq';\n\ntype Merger = (\n  left: SearchParameters,\n  right: SearchParameters\n) => SearchParameters;\n\nconst mergeWithRest: Merger = (left, right) => {\n  const {\n    facets,\n    disjunctiveFacets,\n    facetsRefinements,\n    facetsExcludes,\n    disjunctiveFacetsRefinements,\n    numericRefinements,\n    tagRefinements,\n    hierarchicalFacets,\n    hierarchicalFacetsRefinements,\n    ruleContexts,\n    ...rest\n  } = right;\n\n  return left.setQueryParameters(rest);\n};\n\n// Merge facets\nconst mergeFacets: Merger = (left, right) =>\n  right.facets!.reduce((_, name) => _.addFacet(name), left);\n\nconst mergeDisjunctiveFacets: Merger = (left, right) =>\n  right.disjunctiveFacets.reduce(\n    (_, name) => _.addDisjunctiveFacet(name),\n    left\n  );\n\nconst mergeHierarchicalFacets: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacets: right.hierarchicalFacets.reduce((facets, facet) => {\n      const index = findIndex(facets, (_) => _.name === facet.name);\n\n      if (index === -1) {\n        return facets.concat(facet);\n      }\n\n      const nextFacets = facets.slice();\n      nextFacets.splice(index, 1, facet);\n\n      return nextFacets;\n    }, left.hierarchicalFacets),\n  });\n\n// Merge facet refinements\nconst mergeTagRefinements: Merger = (left, right) =>\n  right.tagRefinements.reduce((_, value) => _.addTagRefinement(value), left);\n\nconst mergeFacetRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsRefinements: {\n      ...left.facetsRefinements,\n      ...right.facetsRefinements,\n    },\n  });\n\nconst mergeFacetsExcludes: Merger = (left, right) =>\n  left.setQueryParameters({\n    facetsExcludes: {\n      ...left.facetsExcludes,\n      ...right.facetsExcludes,\n    },\n  });\n\nconst mergeDisjunctiveFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    disjunctiveFacetsRefinements: {\n      ...left.disjunctiveFacetsRefinements,\n      ...right.disjunctiveFacetsRefinements,\n    },\n  });\n\nconst mergeNumericRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    numericRefinements: {\n      ...left.numericRefinements,\n      ...right.numericRefinements,\n    },\n  });\n\nconst mergeHierarchicalFacetsRefinements: Merger = (left, right) =>\n  left.setQueryParameters({\n    hierarchicalFacetsRefinements: {\n      ...left.hierarchicalFacetsRefinements,\n      ...right.hierarchicalFacetsRefinements,\n    },\n  });\n\nconst mergeRuleContexts: Merger = (left, right) => {\n  const ruleContexts: string[] = uniq(\n    ([] as any)\n      .concat(left.ruleContexts)\n      .concat(right.ruleContexts)\n      .filter(Boolean)\n  );\n\n  if (ruleContexts.length > 0) {\n    return left.setQueryParameters({\n      ruleContexts,\n    });\n  }\n\n  return left;\n};\n\nexport const mergeSearchParameters = (\n  ...parameters: SearchParameters[]\n): SearchParameters =>\n  parameters.reduce((left, right) => {\n    const hierarchicalFacetsRefinementsMerged =\n      mergeHierarchicalFacetsRefinements(left, right);\n    const hierarchicalFacetsMerged = mergeHierarchicalFacets(\n      hierarchicalFacetsRefinementsMerged,\n      right\n    );\n    const tagRefinementsMerged = mergeTagRefinements(\n      hierarchicalFacetsMerged,\n      right\n    );\n    const numericRefinementsMerged = mergeNumericRefinements(\n      tagRefinementsMerged,\n      right\n    );\n    const disjunctiveFacetsRefinementsMerged =\n      mergeDisjunctiveFacetsRefinements(numericRefinementsMerged, right);\n    const facetsExcludesMerged = mergeFacetsExcludes(\n      disjunctiveFacetsRefinementsMerged,\n      right\n    );\n    const facetRefinementsMerged = mergeFacetRefinements(\n      facetsExcludesMerged,\n      right\n    );\n    const disjunctiveFacetsMerged = mergeDisjunctiveFacets(\n      facetRefinementsMerged,\n      right\n    );\n    const ruleContextsMerged = mergeRuleContexts(\n      disjunctiveFacetsMerged,\n      right\n    );\n    const facetsMerged = mergeFacets(ruleContextsMerged, right);\n\n    return mergeWithRest(facetsMerged, right);\n  });\n","// We aren't using the native `Array.prototype.findIndex` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `findIndex` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.findIndex` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\nexport function findIndex<TItem>(\n  array: TItem[],\n  comparator: (value: TItem) => boolean\n): number {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n","type RangeOptions = {\n  start?: number;\n  end: number;\n  step?: number;\n};\n\nexport function range({ start = 0, end, step = 1 }: RangeOptions): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n","import type { InstantSearch, UiState } from '../../types';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function createInitArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget,\n  uiState: UiState\n) {\n  const helper = parent.getHelper()!;\n  return {\n    uiState,\n    helper,\n    parent,\n    instantSearchInstance,\n    state: helper.state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    scopedResults: [],\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n\nexport function createRenderArgs(\n  instantSearchInstance: InstantSearch,\n  parent: IndexWidget\n) {\n  const results = parent.getResults()!;\n\n  return {\n    helper: parent.getHelper()!,\n    parent,\n    instantSearchInstance,\n    results,\n    scopedResults: parent.getScopedResults(),\n    state: results._state,\n    renderState: instantSearchInstance.renderState,\n    templatesConfig: instantSearchInstance.templatesConfig,\n    createURL: parent.createURL,\n    searchMetadata: {\n      isSearchStalled: instantSearchInstance.status === 'stalled',\n    },\n    status: instantSearchInstance.status,\n    error: instantSearchInstance.error,\n  };\n}\n","import type { HighlightedParts } from '../../types';\nimport { getHighlightFromSiblings } from './getHighlightFromSiblings';\n\nexport function reverseHighlightedParts(parts: HighlightedParts[]) {\n  if (!parts.some((part) => part.isHighlighted)) {\n    return parts.map((part) => ({ ...part, isHighlighted: false }));\n  }\n\n  return parts.map((part, i) => ({\n    ...part,\n    isHighlighted: !getHighlightFromSiblings(parts, i),\n  }));\n}\n","// eslint-disable-next-line no-restricted-globals\ntype BrowserCallback<TReturn> = (params: { window: typeof window }) => TReturn;\ntype SafelyRunOnBrowserOptions<TReturn> = {\n  /**\n   * Fallback to run on server environments.\n   */\n  fallback: () => TReturn;\n};\n\n/**\n * Runs code on browser environments safely.\n */\nexport function safelyRunOnBrowser<TReturn>(\n  callback: BrowserCallback<TReturn>,\n  { fallback }: SafelyRunOnBrowserOptions<TReturn> = {\n    fallback: () => undefined as unknown as TReturn,\n  }\n): TReturn {\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof window === 'undefined') {\n    return fallback();\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  return callback({ window });\n}\n","type ToArray<T> = T extends unknown[] ? T : T[];\n\nexport function toArray<T>(value: T): ToArray<T> {\n  return (Array.isArray(value) ? value : [value]) as ToArray<T>;\n}\n","import type {\n  AlgoliaSearchHelper as Helper,\n  DerivedHelper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type {\n  InstantSearch,\n  UiState,\n  IndexUiState,\n  Widget,\n  ScopedResult,\n  SearchClient,\n  IndexRenderState,\n} from '../../types';\nimport {\n  checkIndexUiState,\n  createDocumentationMessageGenerator,\n  resolveSearchParameters,\n  mergeSearchParameters,\n  warning,\n  isIndexWidget,\n  createInitArgs,\n  createRenderArgs,\n} from '../../lib/utils';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'index-widget',\n});\n\nexport type IndexWidgetParams = {\n  indexName: string;\n  indexId?: string;\n};\n\nexport type IndexInitOptions = {\n  instantSearchInstance: InstantSearch;\n  parent: IndexWidget | null;\n  uiState: UiState;\n};\n\nexport type IndexRenderOptions = {\n  instantSearchInstance: InstantSearch;\n};\n\ntype WidgetSearchParametersOptions = Parameters<\n  NonNullable<Widget['getWidgetSearchParameters']>\n>[1];\ntype LocalWidgetSearchParametersOptions = WidgetSearchParametersOptions & {\n  initialSearchParameters: SearchParameters;\n};\n\nexport type IndexWidgetDescription = {\n  $$type: 'ais.index';\n  $$widgetType: 'ais.index';\n};\n\nexport type IndexWidget = Omit<\n  Widget<IndexWidgetDescription & { widgetParams: IndexWidgetParams }>,\n  'getWidgetUiState' | 'getWidgetState'\n> & {\n  getIndexName(): string;\n  getIndexId(): string;\n  getHelper(): Helper | null;\n  getResults(): SearchResults | null;\n  getScopedResults(): ScopedResult[];\n  getParent(): IndexWidget | null;\n  getWidgets(): Array<Widget | IndexWidget>;\n  createURL(state: SearchParameters): string;\n\n  addWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n  removeWidgets(widgets: Array<Widget | IndexWidget>): IndexWidget;\n\n  init(options: IndexInitOptions): void;\n  render(options: IndexRenderOptions): void;\n  dispose(): void;\n  /**\n   * @deprecated\n   */\n  getWidgetState(uiState: UiState): UiState;\n  getWidgetUiState<TUiState extends UiState = UiState>(\n    uiState: TUiState\n  ): TUiState;\n  getWidgetSearchParameters(\n    searchParameters: SearchParameters,\n    searchParametersOptions: { uiState: IndexUiState }\n  ): SearchParameters;\n  refreshUiState(): void;\n};\n\n/**\n * This is the same content as helper._change / setState, but allowing for extra\n * UiState to be synchronized.\n * see: https://github.com/algolia/algoliasearch-helper-js/blob/6b835ffd07742f2d6b314022cce6848f5cfecd4a/src/algoliasearch.helper.js#L1311-L1324\n */\nfunction privateHelperSetState(\n  helper: AlgoliaSearchHelper,\n  {\n    state,\n    isPageReset,\n    _uiState,\n  }: {\n    state: SearchParameters;\n    isPageReset?: boolean;\n    _uiState?: IndexUiState;\n  }\n) {\n  if (state !== helper.state) {\n    helper.state = state;\n\n    helper.emit('change', {\n      state: helper.state,\n      results: helper.lastResults,\n      isPageReset,\n      _uiState,\n    });\n  }\n}\n\ntype WidgetUiStateOptions = Parameters<\n  NonNullable<Widget['getWidgetUiState']>\n>[1];\n\nfunction getLocalWidgetsUiState(\n  widgets: Array<Widget | IndexWidget>,\n  widgetStateOptions: WidgetUiStateOptions,\n  initialUiState: IndexUiState = {}\n) {\n  return widgets.reduce((uiState, widget) => {\n    if (isIndexWidget(widget)) {\n      return uiState;\n    }\n\n    if (!widget.getWidgetUiState && !widget.getWidgetState) {\n      return uiState;\n    }\n\n    if (widget.getWidgetUiState) {\n      return widget.getWidgetUiState(uiState, widgetStateOptions);\n    }\n\n    return widget.getWidgetState!(uiState, widgetStateOptions);\n  }, initialUiState);\n}\n\nfunction getLocalWidgetsSearchParameters(\n  widgets: Array<Widget | IndexWidget>,\n  widgetSearchParametersOptions: LocalWidgetSearchParametersOptions\n): SearchParameters {\n  const { initialSearchParameters, ...rest } = widgetSearchParametersOptions;\n\n  return widgets\n    .filter((widget) => !isIndexWidget(widget))\n    .reduce<SearchParameters>((state, widget) => {\n      if (!widget.getWidgetSearchParameters) {\n        return state;\n      }\n\n      return widget.getWidgetSearchParameters(state, rest);\n    }, initialSearchParameters);\n}\n\nfunction resetPageFromWidgets(widgets: Array<Widget | IndexWidget>): void {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  if (indexWidgets.length === 0) {\n    return;\n  }\n\n  indexWidgets.forEach((widget) => {\n    const widgetHelper = widget.getHelper()!;\n\n    privateHelperSetState(widgetHelper, {\n      state: widgetHelper.state.resetPage(),\n      isPageReset: true,\n    });\n\n    resetPageFromWidgets(widget.getWidgets());\n  });\n}\n\nfunction resolveScopedResultsFromWidgets(\n  widgets: Array<Widget | IndexWidget>\n): ScopedResult[] {\n  const indexWidgets = widgets.filter(isIndexWidget);\n\n  return indexWidgets.reduce<ScopedResult[]>((scopedResults, current) => {\n    return scopedResults.concat(\n      {\n        indexId: current.getIndexId(),\n        results: current.getResults()!,\n        helper: current.getHelper()!,\n      },\n      ...resolveScopedResultsFromWidgets(current.getWidgets())\n    );\n  }, []);\n}\n\nconst index = (widgetParams: IndexWidgetParams): IndexWidget => {\n  if (widgetParams === undefined || widgetParams.indexName === undefined) {\n    throw new Error(withUsage('The `indexName` option is required.'));\n  }\n\n  const { indexName, indexId = indexName } = widgetParams;\n\n  let localWidgets: Array<Widget | IndexWidget> = [];\n  let localUiState: IndexUiState = {};\n  let localInstantSearchInstance: InstantSearch | null = null;\n  let localParent: IndexWidget | null = null;\n  let helper: Helper | null = null;\n  let derivedHelper: DerivedHelper | null = null;\n\n  return {\n    $$type: 'ais.index',\n    $$widgetType: 'ais.index',\n\n    getIndexName() {\n      return indexName;\n    },\n\n    getIndexId() {\n      return indexId;\n    },\n\n    getHelper() {\n      return helper;\n    },\n\n    getResults() {\n      return derivedHelper && derivedHelper.lastResults;\n    },\n\n    getScopedResults() {\n      const widgetParent = this.getParent();\n\n      // If the widget is the root, we consider itself as the only sibling.\n      const widgetSiblings = widgetParent ? widgetParent.getWidgets() : [this];\n\n      return resolveScopedResultsFromWidgets(widgetSiblings);\n    },\n\n    getParent() {\n      return localParent;\n    },\n\n    createURL(nextState: SearchParameters) {\n      return localInstantSearchInstance!._createURL({\n        [indexId]: getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        }),\n      });\n    },\n\n    getWidgets() {\n      return localWidgets;\n    },\n\n    addWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `addWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (\n        widgets.some(\n          (widget) =>\n            typeof widget.init !== 'function' &&\n            typeof widget.render !== 'function'\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            'The widget definition expects a `render` and/or an `init` method.'\n          )\n        );\n      }\n\n      localWidgets = localWidgets.concat(widgets);\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        privateHelperSetState(helper!, {\n          state: getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: helper!.state,\n          }),\n          _uiState: localUiState,\n        });\n\n        // We compute the render state before calling `init` in a separate loop\n        // to construct the whole render state object that is then passed to\n        // `init`.\n        widgets.forEach((widget) => {\n          if (widget.getRenderState) {\n            const renderState = widget.getRenderState(\n              localInstantSearchInstance!.renderState[this.getIndexId()] || {},\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n\n            storeRenderState({\n              renderState,\n              instantSearchInstance: localInstantSearchInstance!,\n              parent: this,\n            });\n          }\n        });\n\n        widgets.forEach((widget) => {\n          if (widget.init) {\n            widget.init(\n              createInitArgs(\n                localInstantSearchInstance!,\n                this,\n                localInstantSearchInstance!._initialUiState\n              )\n            );\n          }\n        });\n\n        localInstantSearchInstance.scheduleSearch();\n      }\n\n      return this;\n    },\n\n    removeWidgets(widgets) {\n      if (!Array.isArray(widgets)) {\n        throw new Error(\n          withUsage('The `removeWidgets` method expects an array of widgets.')\n        );\n      }\n\n      if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n        throw new Error(\n          withUsage('The widget definition expects a `dispose` method.')\n        );\n      }\n\n      localWidgets = localWidgets.filter(\n        (widget) => widgets.indexOf(widget) === -1\n      );\n\n      if (localInstantSearchInstance && Boolean(widgets.length)) {\n        const nextState = widgets.reduce((state, widget) => {\n          // the `dispose` method exists at this point we already assert it\n          const next = widget.dispose!({\n            helper: helper!,\n            state,\n            parent: this,\n          });\n\n          return next || state;\n        }, helper!.state);\n\n        localUiState = getLocalWidgetsUiState(localWidgets, {\n          searchParameters: nextState,\n          helper: helper!,\n        });\n\n        helper!.setState(\n          getLocalWidgetsSearchParameters(localWidgets, {\n            uiState: localUiState,\n            initialSearchParameters: nextState,\n          })\n        );\n\n        if (localWidgets.length) {\n          localInstantSearchInstance.scheduleSearch();\n        }\n      }\n\n      return this;\n    },\n\n    init({ instantSearchInstance, parent, uiState }: IndexInitOptions) {\n      if (helper !== null) {\n        // helper is already initialized, therefore we do not need to set up\n        // any listeners\n        return;\n      }\n\n      localInstantSearchInstance = instantSearchInstance;\n      localParent = parent;\n      localUiState = uiState[indexId] || {};\n\n      // The `mainHelper` is already defined at this point. The instance is created\n      // inside InstantSearch at the `start` method, which occurs before the `init`\n      // step.\n      const mainHelper = instantSearchInstance.mainHelper!;\n      const parameters = getLocalWidgetsSearchParameters(localWidgets, {\n        uiState: localUiState,\n        initialSearchParameters: new algoliasearchHelper.SearchParameters({\n          index: indexName,\n        }),\n      });\n\n      // This Helper is only used for state management we do not care about the\n      // `searchClient`. Only the \"main\" Helper created at the `InstantSearch`\n      // level is aware of the client.\n      helper = algoliasearchHelper(\n        {} as SearchClient,\n        parameters.index,\n        parameters\n      );\n\n      // We forward the call to `search` to the \"main\" instance of the Helper\n      // which is responsible for managing the queries (it's the only one that is\n      // aware of the `searchClient`).\n      helper.search = () => {\n        if (instantSearchInstance.onStateChange) {\n          instantSearchInstance.onStateChange({\n            uiState: instantSearchInstance.mainIndex.getWidgetUiState({}),\n            setUiState: (nextState) =>\n              instantSearchInstance.setUiState(nextState, false),\n          });\n\n          // We don't trigger a search when controlled because it becomes the\n          // responsibility of `setUiState`.\n          return mainHelper;\n        }\n\n        return mainHelper.search();\n      };\n\n      helper.searchWithoutTriggeringOnStateChange = () => {\n        return mainHelper.search();\n      };\n\n      // We use the same pattern for the `searchForFacetValues`.\n      helper.searchForFacetValues = (\n        facetName,\n        facetValue,\n        maxFacetHits,\n        userState: PlainSearchParameters\n      ) => {\n        const state = helper!.state.setQueryParameters(userState);\n\n        return mainHelper.searchForFacetValues(\n          facetName,\n          facetValue,\n          maxFacetHits,\n          state\n        );\n      };\n\n      derivedHelper = mainHelper.derive(() =>\n        mergeSearchParameters(...resolveSearchParameters(this))\n      );\n\n      const indexInitialResults =\n        instantSearchInstance._initialResults?.[this.getIndexId()];\n\n      if (indexInitialResults) {\n        // We restore the shape of the results provided to the instance to respect\n        // the helper's structure.\n        const results = new algoliasearchHelper.SearchResults(\n          new algoliasearchHelper.SearchParameters(indexInitialResults.state),\n          indexInitialResults.results\n        );\n\n        derivedHelper.lastResults = results;\n        helper.lastResults = results;\n      }\n\n      // Subscribe to the Helper state changes for the page before widgets\n      // are initialized. This behavior mimics the original one of the Helper.\n      // It makes sense to replicate it at the `init` step. We have another\n      // listener on `change` below, once `init` is done.\n      helper.on('change', ({ isPageReset }) => {\n        if (isPageReset) {\n          resetPageFromWidgets(localWidgets);\n        }\n      });\n\n      derivedHelper.on('search', () => {\n        // The index does not manage the \"staleness\" of the search. This is the\n        // responsibility of the main instance. It does not make sense to manage\n        // it at the index level because it's either: all of them or none of them\n        // that are stalled. The queries are performed into a single network request.\n        instantSearchInstance.scheduleStalledRender();\n\n        if (__DEV__) {\n          checkIndexUiState({ index: this, indexUiState: localUiState });\n        }\n      });\n\n      derivedHelper.on('result', ({ results }) => {\n        // The index does not render the results it schedules a new render\n        // to let all the other indices emit their own results. It allows us to\n        // run the render process in one pass.\n        instantSearchInstance.scheduleRender();\n\n        // the derived helper is the one which actually searches, but the helper\n        // which is exposed e.g. via instance.helper, doesn't search, and thus\n        // does not have access to lastResults, which it used to in pre-federated\n        // search behavior.\n        helper!.lastResults = results;\n      });\n\n      // We compute the render state before calling `init` in a separate loop\n      // to construct the whole render state object that is then passed to\n      // `init`.\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createInitArgs(instantSearchInstance, this, uiState)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        warning(\n          // if it has NO getWidgetState or if it has getWidgetUiState, we don't warn\n          // aka we warn if there's _only_ getWidgetState\n          !widget.getWidgetState || Boolean(widget.getWidgetUiState),\n          'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n        );\n\n        if (widget.init) {\n          widget.init(createInitArgs(instantSearchInstance, this, uiState));\n        }\n      });\n\n      // Subscribe to the Helper state changes for the `uiState` once widgets\n      // are initialized. Until the first render, state changes are part of the\n      // configuration step. This is mainly for backward compatibility with custom\n      // widgets. When the subscription happens before the `init` step, the (static)\n      // configuration of the widget is pushed in the URL. That's what we want to avoid.\n      // https://github.com/algolia/instantsearch.js/pull/994/commits/4a672ae3fd78809e213de0368549ef12e9dc9454\n      helper.on('change', (event) => {\n        const { state } = event;\n\n        const _uiState = (event as any)._uiState;\n\n        localUiState = getLocalWidgetsUiState(\n          localWidgets,\n          {\n            searchParameters: state,\n            helper: helper!,\n          },\n          _uiState || {}\n        );\n\n        // We don't trigger an internal change when controlled because it\n        // becomes the responsibility of `setUiState`.\n        if (!instantSearchInstance.onStateChange) {\n          instantSearchInstance.onInternalStateChange();\n        }\n      });\n\n      if (indexInitialResults) {\n        // If there are initial results, we're not notified of the next results\n        // because we don't trigger an initial search. We therefore need to directly\n        // schedule a render that will render the results injected on the helper.\n        instantSearchInstance.scheduleRender();\n      }\n    },\n\n    render({ instantSearchInstance }: IndexRenderOptions) {\n      if (!this.getResults()) {\n        return;\n      }\n\n      localWidgets.forEach((widget) => {\n        if (widget.getRenderState) {\n          const renderState = widget.getRenderState(\n            instantSearchInstance.renderState[this.getIndexId()] || {},\n            createRenderArgs(instantSearchInstance, this)\n          );\n\n          storeRenderState({\n            renderState,\n            instantSearchInstance,\n            parent: this,\n          });\n        }\n      });\n\n      localWidgets.forEach((widget) => {\n        // At this point, all the variables used below are set. Both `helper`\n        // and `derivedHelper` have been created at the `init` step. The attribute\n        // `lastResults` might be `null` though. It's possible that a stalled render\n        // happens before the result e.g with a dynamically added index the request might\n        // be delayed. The render is triggered for the complete tree but some parts do\n        // not have results yet.\n\n        if (widget.render) {\n          widget.render(createRenderArgs(instantSearchInstance, this));\n        }\n      });\n    },\n\n    dispose() {\n      localWidgets.forEach((widget) => {\n        if (widget.dispose) {\n          // The dispose function is always called once the instance is started\n          // (it's an effect of `removeWidgets`). The index is initialized and\n          // the Helper is available. We don't care about the return value of\n          // `dispose` because the index is removed. We can't call `removeWidgets`\n          // because we want to keep the widgets on the instance, to allow idempotent\n          // operations on `add` & `remove`.\n          widget.dispose({\n            helper: helper!,\n            state: helper!.state,\n            parent: this,\n          });\n        }\n      });\n\n      localInstantSearchInstance = null;\n      localParent = null;\n      helper!.removeAllListeners();\n      helper = null;\n\n      derivedHelper!.detach();\n      derivedHelper = null;\n    },\n\n    getWidgetUiState<TUiState extends UiState = UiState>(uiState: TUiState) {\n      return localWidgets\n        .filter(isIndexWidget)\n        .reduce<TUiState>(\n          (previousUiState, innerIndex) =>\n            innerIndex.getWidgetUiState(previousUiState),\n          {\n            ...uiState,\n            [indexId]: {\n              ...uiState[indexId],\n              ...localUiState,\n            },\n          }\n        );\n    },\n\n    getWidgetState(uiState: UiState) {\n      warning(\n        false,\n        'The `getWidgetState` method is renamed `getWidgetUiState` and will no longer exist under that name in InstantSearch.js 5.x. Please use `getWidgetUiState` instead.'\n      );\n\n      return this.getWidgetUiState(uiState);\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      return getLocalWidgetsSearchParameters(localWidgets, {\n        uiState,\n        initialSearchParameters: searchParameters,\n      });\n    },\n\n    refreshUiState() {\n      localUiState = getLocalWidgetsUiState(\n        localWidgets,\n        {\n          searchParameters: this.getHelper()!.state,\n          helper: this.getHelper()!,\n        },\n        localUiState\n      );\n    },\n  };\n};\n\nexport default index;\n\nfunction storeRenderState({\n  renderState,\n  instantSearchInstance,\n  parent,\n}: {\n  renderState: IndexRenderState;\n  instantSearchInstance: InstantSearch;\n  parent?: IndexWidget;\n}) {\n  const parentIndexName = parent\n    ? parent.getIndexId()\n    : instantSearchInstance.mainIndex.getIndexId();\n\n  instantSearchInstance.renderState = {\n    ...instantSearchInstance.renderState,\n    [parentIndexName]: {\n      ...instantSearchInstance.renderState[parentIndexName],\n      ...renderState,\n    },\n  };\n}\n","import type { SearchParameters } from 'algoliasearch-helper';\nimport type { IndexWidget } from '../../widgets/index/index';\n\nexport function resolveSearchParameters(\n  current: IndexWidget\n): SearchParameters[] {\n  let parent = current.getParent();\n  let states = [current.getHelper()!.state];\n\n  while (parent !== null) {\n    states = [parent.getHelper()!.state].concat(states);\n    parent = parent.getParent();\n  }\n\n  return states;\n}\n","const NAMESPACE = 'ais';\n\ntype SuitOptions = {\n  descendantName?: string;\n  modifierName?: string;\n};\n\ntype SuitSelector = (names?: SuitOptions) => string;\n\nexport const component =\n  (componentName: string): SuitSelector =>\n  ({ descendantName, modifierName }: SuitOptions = {}) => {\n    const descendent = descendantName ? `-${descendantName}` : '';\n    const modifier = modifierName ? `--${modifierName}` : '';\n\n    return `${NAMESPACE}-${componentName}${descendent}${modifier}`;\n  };\n","import type { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { getPropertyByPath, TAG_REPLACEMENT, warning } from '../lib/utils';\n\nexport type HighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('Highlight');\n\nexport default function highlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: HighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseHighlightOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseHighlight');\n\nexport default function reverseHighlight({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseHighlightOptions): string {\n  const highlightAttributeResult = getPropertyByPath(\n    hit._highlightResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if highlight is not found\n  warning(\n    highlightAttributeResult,\n    `Could not enable reverse highlight for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = highlightAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport { component } from '../lib/suit';\nimport { TAG_REPLACEMENT, getPropertyByPath, warning } from '../lib/utils';\n\nexport type SnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: {\n    highlighted?: string;\n  };\n};\n\nconst suit = component('Snippet');\n\nexport default function snippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: SnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  return attributeValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { Hit } from '../types';\nimport {\n  TAG_REPLACEMENT,\n  getPropertyByPath,\n  getHighlightedParts,\n  reverseHighlightedParts,\n  concatHighlightedParts,\n  warning,\n} from '../lib/utils';\nimport { component } from '../lib/suit';\n\nexport type ReverseSnippetOptions = {\n  // @MAJOR string should no longer be allowed to be a path, only array can be a path\n  attribute: string | string[];\n  highlightedTagName?: string;\n  hit: Partial<Hit>;\n  cssClasses?: Partial<{\n    highlighted: string;\n  }>;\n};\n\nconst suit = component('ReverseSnippet');\n\nexport default function reverseSnippet({\n  attribute,\n  highlightedTagName = 'mark',\n  hit,\n  cssClasses = {},\n}: ReverseSnippetOptions): string {\n  const snippetAttributeResult = getPropertyByPath(\n    hit._snippetResult,\n    attribute\n  );\n\n  // @MAJOR fallback to attribute value if snippet is not found\n  warning(\n    snippetAttributeResult,\n    `Could not enable reverse snippet for \"${attribute}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const { value: attributeValue = '' } = snippetAttributeResult || {};\n\n  // cx is not used, since it would be bundled as a dependency for Vue & Angular\n  const className =\n    suit({\n      descendantName: 'highlighted',\n    }) + (cssClasses.highlighted ? ` ${cssClasses.highlighted}` : '');\n\n  const reverseHighlightedValue = concatHighlightedParts(\n    reverseHighlightedParts(getHighlightedParts(attributeValue))\n  );\n\n  return reverseHighlightedValue\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPreTag, 'g'),\n      `<${highlightedTagName} class=\"${className}\">`\n    )\n    .replace(\n      new RegExp(TAG_REPLACEMENT.highlightPostTag, 'g'),\n      `</${highlightedTagName}>`\n    );\n}\n","import type { InsightsClientMethod, InsightsClientPayload } from '../types';\nimport { warning, serializePayload, deserializePayload } from '../lib/utils';\n\nexport function readDataAttributes(domElement: HTMLElement): {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n} {\n  const method = domElement.getAttribute(\n    'data-insights-method'\n  ) as InsightsClientMethod;\n\n  const serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    const payload =\n      deserializePayload<Partial<InsightsClientPayload>>(serializedPayload);\n    return { method, payload };\n  } catch (error) {\n    throw new Error(\n      'The insights helper was unable to parse `data-insights-payload`.'\n    );\n  }\n}\n\nexport function hasDataAttributes(domElement: HTMLElement): boolean {\n  return domElement.hasAttribute('data-insights-method');\n}\n\nexport function writeDataAttributes({\n  method,\n  payload,\n}: {\n  method: InsightsClientMethod;\n  payload: Partial<InsightsClientPayload>;\n}): string {\n  if (typeof payload !== 'object') {\n    throw new Error(`The insights helper expects the payload to be an object.`);\n  }\n\n  let serializedPayload: string;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(`Could not JSON serialize the payload object.`);\n  }\n\n  return `data-insights-method=\"${method}\" data-insights-payload=\"${serializedPayload}\"`;\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function insights(\n  method: InsightsClientMethod,\n  payload: Partial<InsightsClientPayload>\n): string {\n  warning(\n    false,\n    `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return writeDataAttributes({ method, payload });\n}\n","import { warning } from '../lib/utils';\n\nexport const ANONYMOUS_TOKEN_COOKIE_KEY = '_ALGOLIA';\n\nfunction getCookie(name: string): string | undefined {\n  if (typeof document !== 'object' || typeof document.cookie !== 'string') {\n    return undefined;\n  }\n\n  const prefix = `${name}=`;\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    let cookie = cookies[i];\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length, cookie.length);\n    }\n  }\n  return undefined;\n}\n\nexport function getInsightsAnonymousUserTokenInternal(): string | undefined {\n  return getCookie(ANONYMOUS_TOKEN_COOKIE_KEY);\n}\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\nexport default function getInsightsAnonymousUserToken(): string | undefined {\n  warning(\n    false,\n    `\\`getInsightsAnonymousUserToken\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n  );\n  return getInsightsAnonymousUserTokenInternal();\n}\n","export function formatNumber(value: number, numberLocale?: string) {\n  return value.toLocaleString(numberLocale);\n}\n","import type { UiState, IndexUiState, StateMapping } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): Omit<TIndexUiState, 'configure'> {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState;\n}\n\n// technically a URL could contain any key, since users provide it,\n// which is why the input to this function is UiState, not something\n// which excludes \"configure\" as this function does.\nexport default function simpleStateMapping<\n  TUiState extends UiState = UiState\n>(): StateMapping<TUiState, TUiState> {\n  return {\n    stateToRoute(uiState) {\n      return Object.keys(uiState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(uiState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n\n    routeToState(routeState = {} as TUiState) {\n      return Object.keys(routeState).reduce(\n        (state, indexId) => ({\n          ...state,\n          [indexId]: getIndexStateWithoutConfigure(routeState[indexId]),\n        }),\n        {} as TUiState\n      );\n    },\n  };\n}\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","import qs from 'qs';\nimport type { Router, UiState } from '../../types';\nimport { safelyRunOnBrowser } from '../utils';\n\ntype CreateURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  routeState: TRouteState;\n  location: Location;\n}) => string;\n\ntype ParseURL<TRouteState> = (args: {\n  qsModule: typeof qs;\n  location: Location;\n}) => TRouteState;\n\ntype BrowserHistoryArgs<TRouteState> = {\n  windowTitle?: (routeState: TRouteState) => string;\n  writeDelay: number;\n  createURL: CreateURL<TRouteState>;\n  parseURL: ParseURL<TRouteState>;\n  // @MAJOR: The `Location` type is hard to simulate in non-browser environments\n  // so we should accept a subset of it that is easier to work with in any\n  // environments.\n  getLocation(): Location;\n};\n\nconst setWindowTitle = (title?: string): void => {\n  if (title) {\n    // This function is only executed on browsers so we can disable this check.\n    // eslint-disable-next-line no-restricted-globals\n    window.document.title = title;\n  }\n};\n\nclass BrowserHistory<TRouteState> implements Router<TRouteState> {\n  /**\n   * Transforms a UI state into a title for the page.\n   */\n  private readonly windowTitle?: BrowserHistoryArgs<TRouteState>['windowTitle'];\n  /**\n   * Time in milliseconds before performing a write in the history.\n   * It prevents from adding too many entries in the history and\n   * makes the back button more usable.\n   *\n   * @default 400\n   */\n  private readonly writeDelay: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['writeDelay'];\n  /**\n   * Creates a full URL based on the route state.\n   * The storage adaptor maps all syncable keys to the query string of the URL.\n   */\n  private readonly _createURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['createURL'];\n  /**\n   * Parses the URL into a route state.\n   * It should be symmetrical to `createURL`.\n   */\n  private readonly parseURL: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['parseURL'];\n  /**\n   * Returns the location to store in the history.\n   * @default () => window.location\n   */\n  private readonly getLocation: Required<\n    BrowserHistoryArgs<TRouteState>\n  >['getLocation'];\n\n  private writeTimer?: ReturnType<typeof setTimeout>;\n  private _onPopState?(event: PopStateEvent): void;\n\n  /**\n   * Indicates if last action was back/forward in the browser.\n   */\n  private inPopState: boolean = false;\n\n  /**\n   * Indicates whether the history router is disposed or not.\n   */\n  private isDisposed: boolean = false;\n\n  /**\n   * Indicates the window.history.length before the last call to\n   * window.history.pushState (called in `write`).\n   * It allows to determine if a `pushState` has been triggered elsewhere,\n   * and thus to prevent the `write` method from calling `pushState`.\n   */\n  private latestAcknowledgedHistory: number = 0;\n\n  /**\n   * Initializes a new storage provider that syncs the search state to the URL\n   * using web APIs (`window.location.pushState` and `onpopstate` event).\n   */\n  public constructor({\n    windowTitle,\n    writeDelay = 400,\n    createURL,\n    parseURL,\n    getLocation,\n  }: BrowserHistoryArgs<TRouteState>) {\n    this.windowTitle = windowTitle;\n    this.writeTimer = undefined;\n    this.writeDelay = writeDelay;\n    this._createURL = createURL;\n    this.parseURL = parseURL;\n    this.getLocation = getLocation;\n\n    safelyRunOnBrowser(({ window }) => {\n      const title = this.windowTitle && this.windowTitle(this.read());\n      setWindowTitle(title);\n\n      this.latestAcknowledgedHistory = window.history.length;\n    });\n  }\n\n  /**\n   * Reads the URL and returns a syncable UI search state.\n   */\n  public read(): TRouteState {\n    return this.parseURL({ qsModule: qs, location: this.getLocation() });\n  }\n\n  /**\n   * Pushes a search state into the URL.\n   */\n  public write(routeState: TRouteState): void {\n    safelyRunOnBrowser(({ window }) => {\n      const url = this.createURL(routeState);\n      const title = this.windowTitle && this.windowTitle(routeState);\n\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n      }\n\n      this.writeTimer = setTimeout(() => {\n        setWindowTitle(title);\n\n        if (this.shouldWrite(url)) {\n          window.history.pushState(routeState, title || '', url);\n          this.latestAcknowledgedHistory = window.history.length;\n        }\n        this.inPopState = false;\n        this.writeTimer = undefined;\n      }, this.writeDelay);\n    });\n  }\n\n  /**\n   * Sets a callback on the `onpopstate` event of the history API of the current page.\n   * It enables the URL sync to keep track of the changes.\n   */\n  public onUpdate(callback: (routeState: TRouteState) => void): void {\n    this._onPopState = (event) => {\n      if (this.writeTimer) {\n        clearTimeout(this.writeTimer);\n        this.writeTimer = undefined;\n      }\n\n      this.inPopState = true;\n      const routeState = event.state;\n\n      // At initial load, the state is read from the URL without update.\n      // Therefore the state object is not available.\n      // In this case, we fallback and read the URL.\n      if (!routeState) {\n        callback(this.read());\n      } else {\n        callback(routeState);\n      }\n    };\n\n    safelyRunOnBrowser(({ window }) => {\n      window.addEventListener('popstate', this._onPopState!);\n    });\n  }\n\n  /**\n   * Creates a complete URL from a given syncable UI state.\n   *\n   * It always generates the full URL, not a relative one.\n   * This allows to handle cases like using a <base href>.\n   * See: https://github.com/algolia/instantsearch.js/issues/790\n   */\n  public createURL(routeState: TRouteState): string {\n    return this._createURL({\n      qsModule: qs,\n      routeState,\n      location: this.getLocation(),\n    });\n  }\n\n  /**\n   * Removes the event listener and cleans up the URL.\n   */\n  public dispose(): void {\n    this.isDisposed = true;\n\n    safelyRunOnBrowser(({ window }) => {\n      if (this._onPopState) {\n        window.removeEventListener('popstate', this._onPopState);\n      }\n    });\n\n    if (this.writeTimer) {\n      clearTimeout(this.writeTimer);\n    }\n\n    this.write({} as TRouteState);\n  }\n\n  private shouldWrite(url: string): boolean {\n    return safelyRunOnBrowser(({ window }) => {\n      // We do want to `pushState` if:\n      // - the router is not disposed, IS.js needs to update the URL\n      // OR\n      // - the last write was from InstantSearch.js\n      // (unlike a SPA, where it would have last written)\n      const lastPushWasByISAfterDispose = !(\n        this.isDisposed &&\n        this.latestAcknowledgedHistory !== window.history.length\n      );\n\n      return (\n        // When the last state change was through popstate, the IS.js state changes,\n        // but that should not write the URL.\n        !this.inPopState &&\n        // When the previous pushState after dispose was by IS.js, we want to write the URL.\n        lastPushWasByISAfterDispose &&\n        // When the URL is the same as the current one, we do not want to write it.\n        url !== window.location.href\n      );\n    });\n  }\n}\n\nexport default function historyRouter<TRouteState = UiState>({\n  createURL = ({ qsModule, routeState, location }) => {\n    const { protocol, hostname, port = '', pathname, hash } = location;\n    const queryString = qsModule.stringify(routeState);\n    const portWithPrefix = port === '' ? '' : `:${port}`;\n\n    // IE <= 11 has no proper `location.origin` so we cannot rely on it.\n    if (!queryString) {\n      return `${protocol}//${hostname}${portWithPrefix}${pathname}${hash}`;\n    }\n\n    return `${protocol}//${hostname}${portWithPrefix}${pathname}?${queryString}${hash}`;\n  },\n  parseURL = ({ qsModule, location }) => {\n    // `qs` by default converts arrays with more than 20 items to an object.\n    // We want to avoid this because the data structure manipulated can therefore vary.\n    // Setting the limit to `100` seems a good number because the engine's default is 100\n    // (it can go up to 1000 but it is very unlikely to select more than 100 items in the UI).\n    //\n    // Using an `arrayLimit` of `n` allows `n + 1` items.\n    //\n    // See:\n    //   - https://github.com/ljharb/qs#parsing-arrays\n    //   - https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/\n    return qsModule.parse(location.search.slice(1), { arrayLimit: 99 });\n  },\n  writeDelay = 400,\n  windowTitle,\n  getLocation = () => {\n    return safelyRunOnBrowser<Location>(({ window }) => window.location, {\n      fallback: () => {\n        throw new Error(\n          'You need to provide `getLocation` to the `history` router in environments where `window` does not exist.'\n        );\n      },\n    });\n  },\n}: Partial<BrowserHistoryArgs<TRouteState>> = {}): BrowserHistory<TRouteState> {\n  return new BrowserHistory({\n    createURL,\n    parseURL,\n    writeDelay,\n    windowTitle,\n    getLocation,\n  });\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import simpleStateMapping from '../lib/stateMappings/simple';\nimport historyRouter from '../lib/routers/history';\nimport type {\n  Router,\n  StateMapping,\n  UiState,\n  InternalMiddleware,\n  CreateURL,\n} from '../types';\nimport { isEqual } from '../lib/utils';\n\nexport type RouterProps<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  router?: Router<TRouteState>;\n  // ideally stateMapping should be required if TRouteState is given,\n  // but there's no way to check if a generic is provided or the default value.\n  stateMapping?: StateMapping<TUiState, TRouteState>;\n};\n\nexport const createRouterMiddleware = <\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n>(\n  props: RouterProps<TUiState, TRouteState> = {}\n): InternalMiddleware<TUiState> => {\n  const {\n    router = historyRouter<TRouteState>(),\n    // We have to cast simpleStateMapping as a StateMapping<TUiState, TRouteState>.\n    // this is needed because simpleStateMapping is StateMapping<TUiState, TUiState>.\n    // While it's only used when UiState and RouteState are the same, unfortunately\n    // TypeScript still considers them separate types.\n    stateMapping = simpleStateMapping<TUiState>() as unknown as StateMapping<\n      TUiState,\n      TRouteState\n    >,\n  } = props;\n\n  return ({ instantSearchInstance }) => {\n    function topLevelCreateURL(nextState: TUiState) {\n      const uiState: TUiState = Object.keys(nextState).reduce(\n        (acc, indexId) => ({\n          ...acc,\n          [indexId]: nextState[indexId],\n        }),\n        instantSearchInstance.mainIndex.getWidgetUiState<TUiState>(\n          {} as TUiState\n        )\n      );\n\n      const route = stateMapping.stateToRoute(uiState);\n\n      return router.createURL(route);\n    }\n\n    // casting to UiState here to keep createURL unaware of custom UiState\n    // (as long as it's an object, it's ok)\n    instantSearchInstance._createURL = topLevelCreateURL as CreateURL<UiState>;\n\n    let lastRouteState: TRouteState | undefined = undefined;\n\n    const initialUiState = instantSearchInstance._initialUiState;\n\n    return {\n      onStateChange({ uiState }) {\n        const routeState = stateMapping.stateToRoute(uiState);\n\n        if (\n          lastRouteState === undefined ||\n          !isEqual(lastRouteState, routeState)\n        ) {\n          router.write(routeState);\n          lastRouteState = routeState;\n        }\n      },\n\n      subscribe() {\n        instantSearchInstance._initialUiState = {\n          ...initialUiState,\n          ...stateMapping.routeToState(router.read()),\n        };\n\n        router.onUpdate((route) => {\n          instantSearchInstance.setUiState(stateMapping.routeToState(route));\n        });\n      },\n\n      started() {},\n\n      unsubscribe() {\n        router.dispose();\n      },\n    };\n  };\n};\n","import { createInitArgs, safelyRunOnBrowser } from '../lib/utils';\nimport type { InstantSearch, InternalMiddleware, Widget } from '../types';\nimport type { IndexWidget } from '../widgets/index/index';\n\ntype WidgetMetaData = {\n  type: string | undefined;\n  widgetType: string | undefined;\n  params: string[];\n};\n\ntype Payload = {\n  widgets: WidgetMetaData[];\n  ua?: string;\n};\n\nfunction extractPayload(\n  widgets: Array<Widget | IndexWidget>,\n  instantSearchInstance: InstantSearch,\n  payload: Payload\n) {\n  const initOptions = createInitArgs(\n    instantSearchInstance,\n    instantSearchInstance.mainIndex,\n    instantSearchInstance._initialUiState\n  );\n\n  widgets.forEach((widget) => {\n    let widgetParams: Record<string, unknown> = {};\n\n    if (widget.getWidgetRenderState) {\n      const renderState = widget.getWidgetRenderState(initOptions);\n\n      if (renderState && renderState.widgetParams) {\n        // casting, as we just earlier checked widgetParams exists, and thus an object\n        widgetParams = renderState.widgetParams as Record<string, unknown>;\n      }\n    }\n\n    // since we destructure in all widgets, the parameters with defaults are set to \"undefined\"\n    const params = Object.keys(widgetParams).filter(\n      (key) => widgetParams[key] !== undefined\n    );\n\n    payload.widgets.push({\n      type: widget.$$type,\n      widgetType: widget.$$widgetType,\n      params,\n    });\n\n    if (widget.$$type === 'ais.index') {\n      extractPayload(\n        (widget as IndexWidget).getWidgets(),\n        instantSearchInstance,\n        payload\n      );\n    }\n  });\n}\n\nexport function isMetadataEnabled() {\n  return safelyRunOnBrowser(\n    ({ window }) =>\n      window.navigator?.userAgent?.indexOf('Algolia Crawler') > -1,\n    { fallback: () => false }\n  );\n}\n\n/**\n * Exposes the metadata of mounted widgets in a custom\n * `<meta name=\"instantsearch:widgets\" />` tag. The metadata per widget is:\n * - applied parameters\n * - widget name\n * - connector name\n */\nexport function createMetadataMiddleware(): InternalMiddleware {\n  return ({ instantSearchInstance }) => {\n    const payload: Payload = {\n      widgets: [],\n    };\n    const payloadContainer = document.createElement('meta');\n    const refNode = document.querySelector('head')!;\n    payloadContainer.name = 'instantsearch:widgets';\n\n    return {\n      onStateChange() {},\n      subscribe() {\n        // using setTimeout here to delay extraction until widgets have been added in a tick (e.g. Vue)\n        setTimeout(() => {\n          const client = instantSearchInstance.client as any;\n          payload.ua =\n            client.transporter && client.transporter.userAgent\n              ? client.transporter.userAgent.value\n              : client._ua;\n\n          extractPayload(\n            instantSearchInstance.mainIndex.getWidgets(),\n            instantSearchInstance,\n            payload\n          );\n\n          payloadContainer.content = JSON.stringify(payload);\n          refNode.appendChild(payloadContainer);\n        }, 0);\n      },\n\n      started() {},\n\n      unsubscribe() {\n        payloadContainer.remove();\n      },\n    };\n  };\n}\n","import type { AlgoliaSearchHelper } from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport EventEmitter from '@algolia/events';\n\nimport type { IndexWidget } from '../widgets/index/index';\nimport index from '../widgets/index/index';\nimport version from './version';\nimport createHelpers from './createHelpers';\nimport {\n  createDocumentationMessageGenerator,\n  createDocumentationLink,\n  defer,\n  noop,\n  warning,\n  setIndexHelperState,\n} from './utils';\nimport type {\n  InsightsClient as AlgoliaInsightsClient,\n  SearchClient,\n  Widget,\n  UiState,\n  CreateURL,\n  Middleware,\n  MiddlewareDefinition,\n  RenderState,\n  InitialResults,\n} from '../types';\nimport type { RouterProps } from '../middlewares/createRouterMiddleware';\nimport { createRouterMiddleware } from '../middlewares/createRouterMiddleware';\nimport type { InsightsEvent } from '../middlewares/createInsightsMiddleware';\nimport {\n  createMetadataMiddleware,\n  isMetadataEnabled,\n} from '../middlewares/createMetadataMiddleware';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'instantsearch',\n});\n\nfunction defaultCreateURL() {\n  return '#';\n}\n\n// this purposely breaks typescript's type inference to ensure it's not used\n// as it's used for a default parameter for example\n// source: https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-504042546\ntype NoInfer<T> = [T][T extends any ? 0 : never];\n\n/**\n * Global options for an InstantSearch instance.\n */\nexport type InstantSearchOptions<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> = {\n  /**\n   * The name of the main index\n   */\n  indexName: string;\n\n  /**\n   * The search client to plug to InstantSearch.js\n   *\n   * Usage:\n   * ```javascript\n   * // Using the default Algolia search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: algoliasearch('appId', 'apiKey')\n   * });\n   *\n   * // Using a custom search client\n   * instantsearch({\n   *   indexName: 'indexName',\n   *   searchClient: {\n   *     search(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     },\n   *     searchForFacetValues(requests) {\n   *       // fetch response based on requests\n   *       return response;\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  searchClient: SearchClient;\n\n  /**\n   * The locale used to display numbers. This will be passed\n   * to `Number.prototype.toLocaleString()`\n   */\n  numberLocale?: string;\n\n  /**\n   * A hook that will be called each time a search needs to be done, with the\n   * helper as a parameter. It's your responsibility to call `helper.search()`.\n   * This option allows you to avoid doing searches at page load for example.\n   */\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n\n  /**\n   * Function called when the state changes.\n   *\n   * Using this function makes the instance controlled. This means that you\n   * become in charge of updating the UI state with the `setUiState` function.\n   */\n  onStateChange?: (params: {\n    uiState: TUiState;\n    setUiState(\n      uiState: TUiState | ((previousUiState: TUiState) => TUiState)\n    ): void;\n  }) => void;\n\n  /**\n   * Injects a `uiState` to the `instantsearch` instance. You can use this option\n   * to provide an initial state to a widget. Note that the state is only used\n   * for the first search. To unconditionally pass additional parameters to the\n   * Algolia API, take a look at the `configure` widget.\n   */\n  initialUiState?: NoInfer<TUiState>;\n\n  /**\n   * Time before a search is considered stalled. The default is 200ms\n   */\n  stalledSearchDelay?: number;\n\n  /**\n   * Router configuration used to save the UI State into the URL or any other\n   * client side persistence. Passing `true` will use the default URL options.\n   */\n  routing?: RouterProps<TUiState, TRouteState> | boolean;\n\n  /**\n   * the instance of search-insights to use for sending insights events inside\n   * widgets like `hits`.\n   *\n   * @deprecated This property will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n   */\n  insightsClient?: AlgoliaInsightsClient;\n};\n\nexport type InstantSearchStatus = 'idle' | 'loading' | 'stalled' | 'error';\n\n/**\n * The actual implementation of the InstantSearch. This is\n * created using the `instantsearch` factory function.\n * It emits the 'render' event every time a search is done\n */\nclass InstantSearch<\n  TUiState extends UiState = UiState,\n  TRouteState = TUiState\n> extends EventEmitter {\n  public client: InstantSearchOptions['searchClient'];\n  public indexName: string;\n  public insightsClient: AlgoliaInsightsClient | null;\n  public onStateChange: InstantSearchOptions<TUiState>['onStateChange'] | null =\n    null;\n  public helper: AlgoliaSearchHelper | null;\n  public mainHelper: AlgoliaSearchHelper | null;\n  public mainIndex: IndexWidget;\n  public started: boolean;\n  public templatesConfig: Record<string, unknown>;\n  public renderState: RenderState = {};\n  public _stalledSearchDelay: number;\n  public _searchStalledTimer: any;\n  public _initialUiState: TUiState;\n  public _initialResults: InitialResults | null;\n  public _createURL: CreateURL<TUiState>;\n  public _searchFunction?: InstantSearchOptions['searchFunction'];\n  public _mainHelperSearch?: AlgoliaSearchHelper['search'];\n  public middleware: Array<{\n    creator: Middleware;\n    instance: MiddlewareDefinition;\n  }> = [];\n  public sendEventToInsights: (event: InsightsEvent) => void;\n  /**\n   * The status of the search. Can be \"idle\", \"loading\", \"stalled\", or \"error\".\n   */\n  public status: InstantSearchStatus = 'idle';\n  /**\n   * The last returned error from the Search API.\n   * The error gets cleared when the next valid search response is rendered.\n   */\n  public error: Error | undefined = undefined;\n\n  /**\n   * @deprecated use `status === 'stalled'` instead\n   */\n  public get _isSearchStalled(): boolean {\n    warning(\n      false,\n      `\\`InstantSearch._isSearchStalled\\` is deprecated and will be removed in InstantSearch.js 5.0.\n\nUse \\`InstantSearch.status === \"stalled\"\\` instead.`\n    );\n\n    return this.status === 'stalled';\n  }\n\n  public constructor(options: InstantSearchOptions<TUiState, TRouteState>) {\n    super();\n\n    // prevent `render` event listening from causing a warning\n    this.setMaxListeners(100);\n\n    const {\n      indexName = null,\n      numberLocale,\n      initialUiState = {} as TUiState,\n      routing = null,\n      searchFunction,\n      stalledSearchDelay = 200,\n      searchClient = null,\n      insightsClient = null,\n      onStateChange = null,\n    } = options;\n\n    if (indexName === null) {\n      throw new Error(withUsage('The `indexName` option is required.'));\n    }\n\n    if (searchClient === null) {\n      throw new Error(withUsage('The `searchClient` option is required.'));\n    }\n\n    if (typeof searchClient.search !== 'function') {\n      throw new Error(\n        `The \\`searchClient\\` must implement a \\`search\\` method.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/backend-instantsearch/js/`\n      );\n    }\n\n    if (typeof searchClient.addAlgoliaAgent === 'function') {\n      searchClient.addAlgoliaAgent(`instantsearch.js (${version})`);\n    }\n\n    warning(\n      insightsClient === null,\n      `\\`insightsClient\\` property has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n\n    if (insightsClient && typeof insightsClient !== 'function') {\n      throw new Error(\n        withUsage('The `insightsClient` option should be a function.')\n      );\n    }\n\n    warning(\n      !(options as any).searchParameters,\n      `The \\`searchParameters\\` option is deprecated and will not be supported in InstantSearch.js 4.x.\n\nYou can replace it with the \\`configure\\` widget:\n\n\\`\\`\\`\nsearch.addWidgets([\n  configure(${JSON.stringify((options as any).searchParameters, null, 2)})\n]);\n\\`\\`\\`\n\nSee ${createDocumentationLink({\n        name: 'configure',\n      })}`\n    );\n\n    this.client = searchClient;\n    this.insightsClient = insightsClient;\n    this.indexName = indexName;\n    this.helper = null;\n    this.mainHelper = null;\n    this.mainIndex = index({\n      indexName,\n    });\n    this.onStateChange = onStateChange;\n\n    this.started = false;\n    this.templatesConfig = {\n      helpers: createHelpers({ numberLocale }),\n      compileOptions: {},\n    };\n\n    this._stalledSearchDelay = stalledSearchDelay;\n    this._searchStalledTimer = null;\n\n    this._createURL = defaultCreateURL;\n    this._initialUiState = initialUiState;\n    this._initialResults = null;\n\n    if (searchFunction) {\n      this._searchFunction = searchFunction;\n    }\n\n    this.sendEventToInsights = noop;\n\n    if (routing) {\n      const routerOptions = typeof routing === 'boolean' ? undefined : routing;\n      this.use(createRouterMiddleware(routerOptions));\n    }\n\n    if (isMetadataEnabled()) {\n      this.use(createMetadataMiddleware());\n    }\n  }\n\n  /**\n   * Hooks a middleware into the InstantSearch lifecycle.\n   */\n  public use(...middleware: Middleware[]): this {\n    const newMiddlewareList = middleware.map((fn) => {\n      const newMiddleware = {\n        subscribe: noop,\n        started: noop,\n        unsubscribe: noop,\n        onStateChange: noop,\n        ...fn({\n          instantSearchInstance: this as unknown as InstantSearch<\n            UiState,\n            UiState\n          >,\n        }),\n      };\n      this.middleware.push({\n        creator: fn,\n        instance: newMiddleware,\n      });\n      return newMiddleware;\n    });\n\n    // If the instance has already started, we directly subscribe the\n    // middleware so they're notified of changes.\n    if (this.started) {\n      newMiddlewareList.forEach((m) => {\n        m.subscribe();\n        m.started();\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes a middleware from the InstantSearch lifecycle.\n   */\n  public unuse(...middlewareToUnuse: Middleware[]): this {\n    this.middleware\n      .filter((m) => middlewareToUnuse.includes(m.creator))\n      .forEach((m) => m.instance.unsubscribe());\n\n    this.middleware = this.middleware.filter(\n      (m) => !middlewareToUnuse.includes(m.creator)\n    );\n\n    return this;\n  }\n\n  // @major we shipped with EXPERIMENTAL_use, but have changed that to just `use` now\n  public EXPERIMENTAL_use(...middleware: Middleware[]): this {\n    warning(\n      false,\n      'The middleware API is now considered stable, so we recommend replacing `EXPERIMENTAL_use` with `use` before upgrading to the next major version.'\n    );\n\n    return this.use(...middleware);\n  }\n\n  /**\n   * Adds a widget to the search instance.\n   * A widget can be added either before or after InstantSearch has started.\n   * @param widget The widget to add to InstantSearch.\n   *\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`.\n   */\n  public addWidget(widget: Widget) {\n    warning(\n      false,\n      'addWidget will still be supported in 4.x releases, but not further. It is replaced by `addWidgets([widget])`'\n    );\n\n    return this.addWidgets([widget]);\n  }\n\n  /**\n   * Adds multiple widgets to the search instance.\n   * Widgets can be added either before or after InstantSearch has started.\n   * @param widgets The array of widgets to add to InstantSearch.\n   */\n  public addWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `addWidgets` method expects an array of widgets. Please use `addWidget`.'\n        )\n      );\n    }\n\n    if (\n      widgets.some(\n        (widget) =>\n          typeof widget.init !== 'function' &&\n          typeof widget.render !== 'function'\n      )\n    ) {\n      throw new Error(\n        withUsage(\n          'The widget definition expects a `render` and/or an `init` method.'\n        )\n      );\n    }\n\n    this.mainIndex.addWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Removes a widget from the search instance.\n   * @deprecated This method will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`\n   * @param widget The widget instance to remove from InstantSearch.\n   *\n   * The widget must implement a `dispose()` method to clear its state.\n   */\n  public removeWidget(widget: Widget | IndexWidget) {\n    warning(\n      false,\n      'removeWidget will still be supported in 4.x releases, but not further. It is replaced by `removeWidgets([widget])`'\n    );\n\n    return this.removeWidgets([widget]);\n  }\n\n  /**\n   * Removes multiple widgets from the search instance.\n   * @param widgets Array of widgets instances to remove from InstantSearch.\n   *\n   * The widgets must implement a `dispose()` method to clear their states.\n   */\n  public removeWidgets(widgets: Array<Widget | IndexWidget>) {\n    if (!Array.isArray(widgets)) {\n      throw new Error(\n        withUsage(\n          'The `removeWidgets` method expects an array of widgets. Please use `removeWidget`.'\n        )\n      );\n    }\n\n    if (widgets.some((widget) => typeof widget.dispose !== 'function')) {\n      throw new Error(\n        withUsage('The widget definition expects a `dispose` method.')\n      );\n    }\n\n    this.mainIndex.removeWidgets(widgets);\n\n    return this;\n  }\n\n  /**\n   * Ends the initialization of InstantSearch.js and triggers the\n   * first search. This method should be called after all widgets have been added\n   * to the instance of InstantSearch.js. InstantSearch.js also supports adding and removing\n   * widgets after the start as an **EXPERIMENTAL** feature.\n   */\n  public start() {\n    if (this.started) {\n      throw new Error(\n        withUsage('The `start` method has already been called once.')\n      );\n    }\n\n    // This Helper is used for the queries, we don't care about its state. The\n    // states are managed at the `index` level. We use this Helper to create\n    // DerivedHelper scoped into the `index` widgets.\n    // In Vue InstantSearch' hydrate, a main helper gets set before start, so\n    // we need to respect this helper as a way to keep all listeners correct.\n    const mainHelper =\n      this.mainHelper || algoliasearchHelper(this.client, this.indexName);\n\n    mainHelper.search = () => {\n      this.status = 'loading';\n      // @MAJOR: use scheduleRender here\n      // For now, widgets don't expect to be rendered at the start of `loading`,\n      // so it would be a breaking change to add an extra render. We don't have\n      // these guarantees about the render event, thus emitting it once more\n      // isn't a breaking change.\n      this.emit('render');\n\n      // This solution allows us to keep the exact same API for the users but\n      // under the hood, we have a different implementation. It should be\n      // completely transparent for the rest of the codebase. Only this module\n      // is impacted.\n      return mainHelper.searchOnlyWithDerivedHelpers();\n    };\n\n    if (this._searchFunction) {\n      // this client isn't used to actually search, but required for the helper\n      // to not throw errors\n      const fakeClient = {\n        search: () => new Promise(noop),\n      } as any as SearchClient;\n\n      this._mainHelperSearch = mainHelper.search.bind(mainHelper);\n      mainHelper.search = () => {\n        const mainIndexHelper = this.mainIndex.getHelper();\n        const searchFunctionHelper = algoliasearchHelper(\n          fakeClient,\n          mainIndexHelper!.state.index,\n          mainIndexHelper!.state\n        );\n        searchFunctionHelper.once('search', ({ state }) => {\n          mainIndexHelper!.overrideStateWithoutTriggeringChangeEvent(state);\n          this._mainHelperSearch!();\n        });\n        // Forward state changes from `searchFunctionHelper` to `mainIndexHelper`\n        searchFunctionHelper.on('change', ({ state }) => {\n          mainIndexHelper!.setState(state);\n        });\n        this._searchFunction!(searchFunctionHelper);\n        return mainHelper;\n      };\n    }\n\n    // Only the \"main\" Helper emits the `error` event vs the one for `search`\n    // and `results` that are also emitted on the derived one.\n    mainHelper.on('error', ({ error }) => {\n      if (!(error instanceof Error)) {\n        // typescript lies here, error is in some cases { name: string, message: string }\n        const err = error as Record<string, any>;\n        error = Object.keys(err).reduce((acc, key) => {\n          (acc as any)[key] = err[key];\n          return acc;\n        }, new Error(err.message));\n      }\n      // If an error is emitted, it is re-thrown by events. In previous versions\n      // we emitted {error}, which is thrown as:\n      // \"Uncaught, unspecified \\\"error\\\" event. ([object Object])\"\n      // To avoid breaking changes, we make the error available in both\n      // `error` and `error.error`\n      // @MAJOR emit only error\n      (error as any).error = error;\n      this.error = error;\n      this.status = 'error';\n      this.scheduleRender(false);\n\n      // This needs to execute last because it throws the error.\n      this.emit('error', error);\n    });\n\n    this.mainHelper = mainHelper;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.subscribe();\n    });\n\n    this.mainIndex.init({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n      parent: null,\n      uiState: this._initialUiState,\n    });\n\n    if (this._initialResults) {\n      const originalScheduleSearch = this.scheduleSearch;\n      // We don't schedule a first search when initial results are provided\n      // because we already have the results to render. This skips the initial\n      // network request on the browser on `start`.\n      this.scheduleSearch = defer(noop);\n      // We also skip the initial network request when widgets are dynamically\n      // added in the first tick (that's the case in all the framework-based flavors).\n      // When we add a widget to `index`, it calls `scheduleSearch`. We can rely\n      // on our `defer` util to restore the original `scheduleSearch` value once\n      // widgets are added to hook back to the regular lifecycle.\n      defer(() => {\n        this.scheduleSearch = originalScheduleSearch;\n      })();\n    }\n    // We only schedule a search when widgets have been added before `start()`\n    // because there are listeners that can use these results.\n    // This is especially useful in framework-based flavors that wait for\n    // dynamically-added widgets to trigger a network request. It avoids\n    // having to batch this initial network request with the one coming from\n    // `addWidgets()`.\n    // Later, we could also skip `index()` widgets and widgets that don't read\n    // the results, but this is an optimization that has a very low impact for now.\n    else if (this.mainIndex.getWidgets().length > 0) {\n      this.scheduleSearch();\n    }\n\n    // Keep the previous reference for legacy purpose, some pattern use\n    // the direct Helper access `search.helper` (e.g multi-index).\n    this.helper = this.mainIndex.getHelper();\n\n    // track we started the search if we add more widgets,\n    // to init them directly after add\n    this.started = true;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.started();\n    });\n  }\n\n  /**\n   * Removes all widgets without triggering a search afterwards. This is an **EXPERIMENTAL** feature,\n   * if you find an issue with it, please\n   * [open an issue](https://github.com/algolia/instantsearch.js/issues/new?title=Problem%20with%20dispose).\n   * @return {undefined} This method does not return anything\n   */\n  public dispose(): void {\n    this.scheduleSearch.cancel();\n    this.scheduleRender.cancel();\n    clearTimeout(this._searchStalledTimer);\n\n    this.removeWidgets(this.mainIndex.getWidgets());\n    this.mainIndex.dispose();\n\n    // You can not start an instance two times, therefore a disposed instance\n    // needs to set started as false otherwise this can not be restarted at a\n    // later point.\n    this.started = false;\n\n    // The helper needs to be reset to perform the next search from a fresh state.\n    // If not reset, it would use the state stored before calling `dispose()`.\n    this.removeAllListeners();\n    this.mainHelper!.removeAllListeners();\n    this.mainHelper = null;\n    this.helper = null;\n\n    this.middleware.forEach(({ instance }) => {\n      instance.unsubscribe();\n    });\n  }\n\n  public scheduleSearch = defer(() => {\n    if (this.started) {\n      this.mainHelper!.search();\n    }\n  });\n\n  public scheduleRender = defer((shouldResetStatus: boolean = true) => {\n    if (!this.mainHelper!.hasPendingRequests()) {\n      clearTimeout(this._searchStalledTimer);\n      this._searchStalledTimer = null;\n\n      if (shouldResetStatus) {\n        this.status = 'idle';\n        this.error = undefined;\n      }\n    }\n\n    this.mainIndex.render({\n      instantSearchInstance: this as unknown as InstantSearch<UiState, UiState>,\n    });\n\n    this.emit('render');\n  });\n\n  public scheduleStalledRender() {\n    if (!this._searchStalledTimer) {\n      this._searchStalledTimer = setTimeout(() => {\n        this.status = 'stalled';\n        this.scheduleRender();\n      }, this._stalledSearchDelay);\n    }\n  }\n\n  /**\n   * Set the UI state and trigger a search.\n   * @param uiState The next UI state or a function computing it from the current state\n   * @param callOnStateChange private parameter used to know if the method is called from a state change\n   */\n  public setUiState(\n    uiState: TUiState | ((previousUiState: TUiState) => TUiState),\n    callOnStateChange: boolean = true\n  ): void {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `setUiState`.')\n      );\n    }\n\n    // We refresh the index UI state to update the local UI state that the\n    // main index passes to the function form of `setUiState`.\n    this.mainIndex.refreshUiState();\n    const nextUiState =\n      typeof uiState === 'function'\n        ? uiState(this.mainIndex.getWidgetUiState({}) as TUiState)\n        : uiState;\n\n    if (this.onStateChange && callOnStateChange) {\n      this.onStateChange({\n        uiState: nextUiState,\n        setUiState: (finalUiState) => {\n          setIndexHelperState(\n            typeof finalUiState === 'function'\n              ? finalUiState(nextUiState)\n              : finalUiState,\n            this.mainIndex\n          );\n\n          this.scheduleSearch();\n          this.onInternalStateChange();\n        },\n      });\n    } else {\n      setIndexHelperState(nextUiState, this.mainIndex);\n\n      this.scheduleSearch();\n      this.onInternalStateChange();\n    }\n  }\n\n  public getUiState(): TUiState {\n    if (this.started) {\n      // We refresh the index UI state to make sure changes from `refine` are taken in account\n      this.mainIndex.refreshUiState();\n    }\n\n    return this.mainIndex.getWidgetUiState({}) as TUiState;\n  }\n\n  public onInternalStateChange = defer(() => {\n    const nextUiState = this.mainIndex.getWidgetUiState({});\n\n    this.middleware.forEach(({ instance }) => {\n      instance.onStateChange({\n        uiState: nextUiState,\n      });\n    });\n  });\n\n  public createURL(nextState: TUiState = {} as TUiState): string {\n    if (!this.started) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `createURL`.')\n      );\n    }\n\n    return this._createURL(nextState);\n  }\n\n  public refresh() {\n    if (!this.mainHelper) {\n      throw new Error(\n        withUsage('The `start` method needs to be called before `refresh`.')\n      );\n    }\n\n    this.mainHelper.clearCache().search();\n  }\n}\n\nexport default InstantSearch;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  clearRefinements,\n  getRefinements,\n  createDocumentationMessageGenerator,\n  noop,\n  uniq,\n  mergeSearchParameters,\n} from '../../lib/utils';\nimport type {\n  TransformItems,\n  CreateURL,\n  Connector,\n  WidgetRenderState,\n  ScopedResult,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n  connector: true,\n});\n\nexport type ClearRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the refinements to clear (all by default). Cannot be used with `excludedAttributes`.\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the refinements to clear. Cannot be used with `includedAttributes`.\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<string>;\n};\n\nexport type ClearRefinementsRenderState = {\n  /**\n   * Triggers the clear of all the currently refined values.\n   */\n  refine: () => void;\n\n  /**\n   * Indicates if search state is refined.\n   * @deprecated prefer reading canRefine\n   */\n  hasRefinements: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Creates a url for the next state when refinements are cleared.\n   */\n  createURL: CreateURL<void>;\n};\n\nexport type ClearRefinementsWidgetDescription = {\n  $$type: 'ais.clearRefinements';\n  renderState: ClearRefinementsRenderState;\n  indexRenderState: {\n    clearRefinements: WidgetRenderState<\n      ClearRefinementsRenderState,\n      ClearRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type ClearRefinementsConnector = Connector<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n>;\n\ntype AttributesToClear = {\n  helper: AlgoliaSearchHelper;\n  items: string[];\n};\n\nconst connectClearRefinements: ClearRefinementsConnector =\n  function connectClearRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        includedAttributes = [],\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          ClearRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        widgetParams &&\n        widgetParams.includedAttributes &&\n        widgetParams.excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      type ConnectorState = {\n        refine(): void;\n        createURL(): string;\n        attributesToClear: AttributesToClear[];\n      };\n\n      const connectorState: ConnectorState = {\n        refine: noop,\n        createURL: () => '',\n        attributesToClear: [],\n      };\n\n      const cachedRefine = () => connectorState.refine();\n      const cachedCreateURL = () => connectorState.createURL();\n\n      return {\n        $$type: 'ais.clearRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            clearRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ createURL, scopedResults, results }) {\n          connectorState.attributesToClear = scopedResults.reduce<\n            Array<ReturnType<typeof getAttributesToClear>>\n          >((attributesToClear, scopedResult) => {\n            return attributesToClear.concat(\n              getAttributesToClear({\n                scopedResult,\n                includedAttributes,\n                excludedAttributes,\n                transformItems,\n                results,\n              })\n            );\n          }, []);\n\n          connectorState.refine = () => {\n            connectorState.attributesToClear.forEach(\n              ({ helper: indexHelper, items }) => {\n                indexHelper\n                  .setState(\n                    clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    })\n                  )\n                  .search();\n              }\n            );\n          };\n\n          connectorState.createURL = () =>\n            createURL(\n              mergeSearchParameters(\n                ...connectorState.attributesToClear.map(\n                  ({ helper: indexHelper, items }) => {\n                    return clearRefinements({\n                      helper: indexHelper,\n                      attributesToClear: items,\n                    });\n                  }\n                )\n              )\n            );\n\n          const canRefine = connectorState.attributesToClear.some(\n            (attributeToClear) => attributeToClear.items.length > 0\n          );\n\n          return {\n            canRefine,\n            hasRefinements: canRefine,\n            refine: cachedRefine,\n            createURL: cachedCreateURL,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getAttributesToClear({\n  scopedResult,\n  includedAttributes,\n  excludedAttributes,\n  transformItems,\n  results,\n}: {\n  scopedResult: ScopedResult;\n  includedAttributes: string[];\n  excludedAttributes: string[];\n  transformItems: TransformItems<string>;\n  results: SearchResults | undefined;\n}): AttributesToClear {\n  const includesQuery =\n    includedAttributes.indexOf('query') !== -1 ||\n    excludedAttributes.indexOf('query') === -1;\n\n  return {\n    helper: scopedResult.helper,\n    items: transformItems(\n      uniq(\n        getRefinements(\n          scopedResult.results,\n          scopedResult.helper.state,\n          includesQuery\n        )\n          .map((refinement) => refinement.attribute)\n          .filter(\n            (attribute) =>\n              // If the array is empty (default case), we keep all the attributes\n              includedAttributes.length === 0 ||\n              // Otherwise, only add the specified attributes\n              includedAttributes.indexOf(attribute) !== -1\n          )\n          .filter(\n            (attribute) =>\n              // If the query is included, we ignore the default `excludedAttributes = ['query']`\n              (attribute === 'query' && includesQuery) ||\n              // Otherwise, ignore the excluded attributes\n              excludedAttributes.indexOf(attribute) === -1\n          )\n      ),\n      { results }\n    ),\n  };\n}\n\nexport default connectClearRefinements;\n","export default '4.49.2';\n","import type {\n  HighlightOptions,\n  ReverseHighlightOptions,\n  SnippetOptions,\n  ReverseSnippetOptions,\n} from '../helpers';\nimport {\n  highlight,\n  reverseHighlight,\n  snippet,\n  reverseSnippet,\n  insights,\n} from '../helpers';\nimport type {\n  Hit,\n  HoganHelpers,\n  InsightsClientMethod,\n  InsightsClientPayload,\n} from '../types';\nimport { formatNumber } from './formatNumber';\n\ntype DefaultHoganHelpers = HoganHelpers<\n  | 'formatNumber'\n  | 'highlight'\n  | 'reverseHighlight'\n  | 'snippet'\n  | 'reverseSnippet'\n  | 'insights'\n>;\n\nexport default function hoganHelpers({\n  numberLocale,\n}: {\n  numberLocale?: string;\n}): DefaultHoganHelpers {\n  return {\n    formatNumber(value, render) {\n      return formatNumber(Number(render(value)), numberLocale);\n    },\n    highlight(options, render) {\n      try {\n        const highlightOptions: Omit<HighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          highlight({\n            ...highlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe highlight helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseHighlight(options, render) {\n      try {\n        const reverseHighlightOptions: Omit<ReverseHighlightOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseHighlight({\n            ...reverseHighlightOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseHighlight helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    snippet(options, render) {\n      try {\n        const snippetOptions: Omit<SnippetOptions, 'hit'> = JSON.parse(options);\n\n        return render(\n          snippet({\n            ...snippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\nThe snippet helper expects a JSON object of the format:\n{ \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    reverseSnippet(options, render) {\n      try {\n        const reverseSnippetOptions: Omit<ReverseSnippetOptions, 'hit'> =\n          JSON.parse(options);\n\n        return render(\n          reverseSnippet({\n            ...reverseSnippetOptions,\n            hit: this,\n          })\n        );\n      } catch (error) {\n        throw new Error(`\n  The reverseSnippet helper expects a JSON object of the format:\n  { \"attribute\": \"name\", \"highlightedTagName\": \"mark\" }`);\n      }\n    },\n    insights(this: Hit, options, render) {\n      try {\n        type InsightsHelperOptions = {\n          method: InsightsClientMethod;\n          payload: Partial<InsightsClientPayload>;\n        };\n        const { method, payload }: InsightsHelperOptions = JSON.parse(options);\n\n        return render(\n          insights(method, { objectIDs: [this.objectID], ...payload })\n        );\n      } catch (error) {\n        throw new Error(`\nThe insights helper expects a JSON object of the format:\n{ \"method\": \"method-name\", \"payload\": { \"eventName\": \"name of the event\" } }`);\n      }\n    },\n  };\n}\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  getRefinements,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Refinement,\n  FacetRefinement,\n  NumericRefinement,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nexport type CurrentRefinementsConnectorParamsRefinement = {\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The type of the refinement.\n   */\n  type:\n    | 'facet'\n    | 'exclude'\n    | 'disjunctive'\n    | 'hierarchical'\n    | 'numeric'\n    | 'query'\n    | 'tag';\n\n  /**\n   * The raw value of the refinement.\n   */\n  value: string | number;\n\n  /**\n   * The label of the refinement to display.\n   */\n  label: string;\n\n  /**\n   * The value of the operator (only if applicable).\n   */\n  operator?: string;\n\n  /**\n   * The number of found items (only if applicable).\n   */\n  count?: number;\n\n  /**\n   * Whether the count is exhaustive (only if applicable).\n   */\n  exhaustive?: boolean;\n};\n\nexport type CurrentRefinementsConnectorParamsItem = {\n  /**\n   * The index name.\n   */\n  indexName: string;\n\n  /**\n   * The attribute on which the refinement is applied.\n   */\n  attribute: string;\n\n  /**\n   * The textual representation of this attribute.\n   */\n  label: string;\n\n  /**\n   * Currently applied refinements.\n   */\n  refinements: CurrentRefinementsConnectorParamsRefinement[];\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n};\n\nexport type CurrentRefinementsConnectorParams = {\n  /**\n   * The attributes to include in the widget (all by default).\n   * Cannot be used with `excludedAttributes`.\n   *\n   * @default `[]`\n   */\n  includedAttributes?: string[];\n\n  /**\n   * The attributes to exclude from the widget.\n   * Cannot be used with `includedAttributes`.\n   *\n   * @default `['query']`\n   */\n  excludedAttributes?: string[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<CurrentRefinementsConnectorParamsItem>;\n};\n\nexport type CurrentRefinementsRenderState = {\n  /**\n   * All the currently refined items, grouped by attribute.\n   */\n  items: CurrentRefinementsConnectorParamsItem[];\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Removes the given refinement and triggers a new search.\n   */\n  refine(refinement: CurrentRefinementsConnectorParamsRefinement): void;\n\n  /**\n   * Generates a URL for the next state.\n   */\n  createURL: CreateURL<CurrentRefinementsConnectorParamsRefinement>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n  connector: true,\n});\n\nexport type CurrentRefinementsWidgetDescription = {\n  $$type: 'ais.currentRefinements';\n  renderState: CurrentRefinementsRenderState;\n  indexRenderState: {\n    currentRefinements: WidgetRenderState<\n      CurrentRefinementsRenderState,\n      CurrentRefinementsConnectorParams\n    >;\n  };\n};\n\nexport type CurrentRefinementsConnector = Connector<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n>;\n\nconst connectCurrentRefinements: CurrentRefinementsConnector =\n  function connectCurrentRefinements(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      if (\n        (widgetParams || {}).includedAttributes &&\n        (widgetParams || {}).excludedAttributes\n      ) {\n        throw new Error(\n          withUsage(\n            'The options `includedAttributes` and `excludedAttributes` cannot be used together.'\n          )\n        );\n      }\n\n      const {\n        includedAttributes,\n        excludedAttributes = ['query'],\n        transformItems = ((items) => items) as NonNullable<\n          CurrentRefinementsConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      return {\n        $$type: 'ais.currentRefinements',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose() {\n          unmountFn();\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            currentRefinements: this.getWidgetRenderState(renderOptions),\n          };\n        },\n\n        getWidgetRenderState({ results, scopedResults, createURL, helper }) {\n          function getItems() {\n            if (!results) {\n              return transformItems(\n                getRefinementsItems({\n                  results: {},\n                  helper,\n                  includedAttributes,\n                  excludedAttributes,\n                }),\n                { results }\n              );\n            }\n\n            return scopedResults.reduce<\n              CurrentRefinementsConnectorParamsItem[]\n            >((accResults, scopedResult) => {\n              return accResults.concat(\n                transformItems(\n                  getRefinementsItems({\n                    results: scopedResult.results,\n                    helper: scopedResult.helper,\n                    includedAttributes,\n                    excludedAttributes,\n                  }),\n                  { results }\n                )\n              );\n            }, []);\n          }\n\n          const items = getItems();\n\n          return {\n            items,\n            canRefine: items.length > 0,\n            refine: (refinement) => clearRefinement(helper, refinement),\n            createURL: (refinement) =>\n              createURL(clearRefinementFromState(helper.state, refinement)),\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nfunction getRefinementsItems({\n  results,\n  helper,\n  includedAttributes,\n  excludedAttributes,\n}: {\n  results: SearchResults | Record<string, never>;\n  helper: AlgoliaSearchHelper;\n  includedAttributes: CurrentRefinementsConnectorParams['includedAttributes'];\n  excludedAttributes: CurrentRefinementsConnectorParams['excludedAttributes'];\n}): CurrentRefinementsConnectorParamsItem[] {\n  const includesQuery =\n    (includedAttributes || []).indexOf('query') !== -1 ||\n    (excludedAttributes || []).indexOf('query') === -1;\n\n  const filterFunction = includedAttributes\n    ? (item: CurrentRefinementsConnectorParamsRefinement) =>\n        includedAttributes.indexOf(item.attribute) !== -1\n    : (item: CurrentRefinementsConnectorParamsRefinement) =>\n        excludedAttributes!.indexOf(item.attribute) === -1;\n\n  const items = getRefinements(results, helper.state, includesQuery)\n    .map(normalizeRefinement)\n    .filter(filterFunction);\n\n  return items.reduce<CurrentRefinementsConnectorParamsItem[]>(\n    (allItems, currentItem) => [\n      ...allItems.filter((item) => item.attribute !== currentItem.attribute),\n      {\n        indexName: helper.state.index,\n        attribute: currentItem.attribute,\n        label: currentItem.attribute,\n        refinements: items\n          .filter((result) => result.attribute === currentItem.attribute)\n          // We want to keep the order of refinements except the numeric ones.\n          .sort((a, b) =>\n            a.type === 'numeric' ? (a.value as number) - (b.value as number) : 0\n          ),\n        refine: (refinement) => clearRefinement(helper, refinement),\n      },\n    ],\n    []\n  );\n}\n\nfunction clearRefinementFromState(\n  state: SearchParameters,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): SearchParameters {\n  state = state.resetPage();\n  switch (refinement.type) {\n    case 'facet':\n      return state.removeFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'disjunctive':\n      return state.removeDisjunctiveFacetRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'hierarchical':\n      return state.removeHierarchicalFacetRefinement(refinement.attribute);\n    case 'exclude':\n      return state.removeExcludeRefinement(\n        refinement.attribute,\n        String(refinement.value)\n      );\n    case 'numeric':\n      return state.removeNumericRefinement(\n        refinement.attribute,\n        refinement.operator,\n        String(refinement.value)\n      );\n    case 'tag':\n      return state.removeTagRefinement(String(refinement.value));\n    case 'query':\n      return state.setQueryParameter('query', '');\n    default:\n      warning(\n        false,\n        `The refinement type \"${refinement.type}\" does not exist and cannot be cleared from the current refinements.`\n      );\n      return state;\n  }\n}\n\nfunction clearRefinement(\n  helper: AlgoliaSearchHelper,\n  refinement: CurrentRefinementsConnectorParamsRefinement\n): void {\n  helper.setState(clearRefinementFromState(helper.state, refinement)).search();\n}\n\nfunction getOperatorSymbol(operator: SearchParameters.Operator): string {\n  switch (operator) {\n    case '>=':\n      return '≥';\n    case '<=':\n      return '≤';\n    default:\n      return operator;\n  }\n}\n\nfunction normalizeRefinement(\n  refinement: Refinement\n): CurrentRefinementsConnectorParamsRefinement {\n  const value = getValue(refinement);\n  const label = (refinement as NumericRefinement).operator\n    ? `${getOperatorSymbol(\n        (refinement as NumericRefinement).operator as SearchParameters.Operator\n      )} ${refinement.name}`\n    : refinement.name;\n\n  const normalizedRefinement: CurrentRefinementsConnectorParamsRefinement = {\n    attribute: refinement.attribute,\n    type: refinement.type,\n    value,\n    label,\n  };\n\n  if ((refinement as NumericRefinement).operator !== undefined) {\n    normalizedRefinement.operator = (refinement as NumericRefinement).operator;\n  }\n  if ((refinement as FacetRefinement).count !== undefined) {\n    normalizedRefinement.count = (refinement as FacetRefinement).count;\n  }\n  if ((refinement as FacetRefinement).exhaustive !== undefined) {\n    normalizedRefinement.exhaustive = (\n      refinement as FacetRefinement\n    ).exhaustive;\n  }\n\n  return normalizedRefinement;\n}\n\nfunction getValue(refinement: Refinement) {\n  if (refinement.type === 'numeric') {\n    return Number(refinement.name);\n  }\n\n  if ('escapedValue' in refinement) {\n    return refinement.escapedValue;\n  }\n\n  return refinement.name;\n}\n\nexport default connectCurrentRefinements;\n","import type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type {\n  Connector,\n  CreateURL,\n  TransformItems,\n  RenderOptions,\n  Widget,\n  SortBy,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['name:asc'];\n\nexport type HierarchicalMenuItem = {\n  /**\n   * Value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n  /**\n   * n+1 level of items, same structure HierarchicalMenuItem\n   */\n  data: HierarchicalMenuItem[] | null;\n};\n\nexport type HierarchicalMenuConnectorParams = {\n  /**\n   *  Attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string | null;\n  /**\n   * Show the siblings of the selected parent levels of the current refined value. This\n   * does not impact the root level.\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n};\n\nexport type HierarchicalMenuRenderState = {\n  /**\n   * Creates an url for the next state for a clicked item.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Values to be rendered.\n   */\n  items: HierarchicalMenuItem[];\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore: () => void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type HierarchicalMenuWidgetDescription = {\n  $$type: 'ais.hierarchicalMenu';\n  renderState: HierarchicalMenuRenderState;\n  indexRenderState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: WidgetRenderState<\n        HierarchicalMenuRenderState,\n        HierarchicalMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    hierarchicalMenu: {\n      [rootAttribute: string]: string[];\n    };\n  };\n};\n\nexport type HierarchicalMenuConnector = Connector<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n>;\n\n/**\n * **HierarchicalMenu** connector provides the logic to build a custom widget\n * that will give the user the ability to explore facets in a tree-like structure.\n *\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two\n * levels deep.\n *\n * @type {Connector}\n * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.\n * @param {function} unmountFn Unmount function called when the widget is disposed.\n * @return {function(CustomHierarchicalMenuWidgetParams)} Re-usable widget factory for a custom **HierarchicalMenu** widget.\n */\nconst connectHierarchicalMenu: HierarchicalMenuConnector =\n  function connectHierarchicalMenu(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attributes,\n        separator = ' > ',\n        rootPath = null,\n        showParentLevel = true,\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        transformItems = ((items) => items) as NonNullable<\n          HierarchicalMenuConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      if (\n        !attributes ||\n        !Array.isArray(attributes) ||\n        attributes.length === 0\n      ) {\n        throw new Error(\n          withUsage('The `attributes` option expects an array of strings.')\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('The `showMoreLimit` option must be greater than `limit`.')\n        );\n      }\n\n      type ThisWidget = Widget<\n        HierarchicalMenuWidgetDescription & {\n          widgetParams: typeof widgetParams;\n        }\n      >;\n\n      // we need to provide a hierarchicalFacet name for the search state\n      // so that we can always map $hierarchicalFacetName => real attributes\n      // we use the first attribute name\n      const [hierarchicalFacetName] = attributes;\n\n      let sendEvent: HierarchicalMenuRenderState['sendEvent'];\n\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      let _refine: HierarchicalMenuRenderState['refine'] | undefined;\n\n      let isShowingMore = false;\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      function _prepareFacetValues(\n        facetValues: SearchResults.HierarchicalFacet[]\n      ): HierarchicalMenuItem[] {\n        return facetValues\n          .slice(0, getLimit())\n          .map(\n            ({ name: label, escapedValue: value, data, path, ...subValue }) => {\n              const item: HierarchicalMenuItem = {\n                ...subValue,\n                value,\n                label,\n                data: null,\n              };\n              if (Array.isArray(data)) {\n                item.data = _prepareFacetValues(data);\n              }\n              return item;\n            }\n          );\n      }\n\n      return {\n        $$type: 'ais.hierarchicalMenu',\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .setQueryParameter('maxValuesPerFacet', undefined);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            hierarchicalMenu: {\n              ...renderState.hierarchicalMenu,\n              [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          results,\n          state,\n          createURL,\n          instantSearchInstance,\n          helper,\n        }) {\n          let items: HierarchicalMenuRenderState['items'] = [];\n          let canToggleShowMore = false;\n\n          // Bind createURL to this specific attribute\n          function _createURL(facetValue: string) {\n            return createURL(\n              state\n                .resetPage()\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n            );\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute(facetValue) {\n                const index = facetValue.split(separator).length - 1;\n\n                return attributes[index];\n              },\n              widgetType: this.$$type,\n            });\n          }\n\n          if (!_refine) {\n            _refine = function (facetValue) {\n              sendEvent('click', facetValue);\n              helper\n                .toggleFacetRefinement(hierarchicalFacetName, facetValue)\n                .search();\n            };\n          }\n\n          if (results) {\n            const facetValues = results.getFacetValues(hierarchicalFacetName, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            const facetItems =\n              facetValues && !Array.isArray(facetValues) && facetValues.data\n                ? facetValues.data\n                : [];\n\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            const hasExhaustiveItems =\n              (state.maxValuesPerFacet || 0) > getLimit()\n                ? facetItems.length <= getLimit()\n                : facetItems.length < getLimit();\n\n            canToggleShowMore =\n              showMore && (isShowingMore || !hasExhaustiveItems);\n\n            items = transformItems(_prepareFacetValues(facetItems), {\n              results,\n            });\n          }\n\n          return {\n            items,\n            refine: _refine,\n            canRefine: items.length > 0,\n            createURL: _createURL,\n            sendEvent,\n            widgetParams,\n            isShowingMore,\n            toggleShowMore: cachedToggleShowMore,\n            canToggleShowMore,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const path = searchParameters.getHierarchicalFacetBreadcrumb(\n            hierarchicalFacetName\n          );\n\n          if (!path.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            hierarchicalMenu: {\n              ...uiState.hierarchicalMenu,\n              [hierarchicalFacetName]: path,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const values =\n            uiState.hierarchicalMenu &&\n            uiState.hierarchicalMenu[hierarchicalFacetName];\n\n          if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n            const facet = searchParameters.getHierarchicalFacetByName(\n              hierarchicalFacetName\n            );\n\n            warning(\n              isEqual(facet.attributes, attributes) &&\n                facet.separator === separator &&\n                facet.rootPath === rootPath,\n              'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n            );\n          }\n\n          const withFacetConfiguration = searchParameters\n            .removeHierarchicalFacet(hierarchicalFacetName)\n            .addHierarchicalFacet({\n              name: hierarchicalFacetName,\n              attributes,\n              separator,\n              rootPath,\n              showParentLevel,\n            });\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            return withMaxValuesPerFacet.setQueryParameters({\n              hierarchicalFacetsRefinements: {\n                ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n                [hierarchicalFacetName]: [],\n              },\n            });\n          }\n\n          return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n            hierarchicalFacetName,\n            values.join(separator)\n          );\n        },\n      };\n    };\n  };\n\nexport default connectHierarchicalMenu;\n","import type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  addAbsolutePosition,\n  addQueryID,\n  createSendEventForHits,\n  createBindEventForHits,\n  noop,\n} from '../../lib/utils';\nimport type {\n  TransformItems,\n  Connector,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits',\n  connector: true,\n});\n\nexport type HitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n\n  /**\n   * Sends an event to the Insights middleware.\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string for the `data-insights-event` attribute for the Insights middleware\n   */\n  bindEvent: BindEventForHits;\n};\n\nexport type HitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n};\n\nexport type HitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.hits';\n  renderState: HitsRenderState<THit>;\n  indexRenderState: {\n    hits: WidgetRenderState<HitsRenderState<THit>, HitsConnectorParams<THit>>;\n  };\n};\n\nexport type HitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  HitsWidgetDescription<THit>,\n  HitsConnectorParams<THit>\n>;\n\nconst connectHits: HitsConnector = function connectHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        HitsConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n\n    return {\n      $$type: 'ais.hits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        renderState.sendEvent('view', renderState.hits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!bindEvent) {\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!results) {\n          return {\n            hits: [],\n            results: undefined,\n            sendEvent,\n            bindEvent,\n            widgetParams,\n          };\n        }\n\n        if (escapeHTML && results.hits.length > 0) {\n          results.hits = escapeHits(results.hits);\n        }\n\n        const hitsWithAbsolutePosition = addAbsolutePosition(\n          results.hits,\n          results.page,\n          results.hitsPerPage\n        );\n\n        const hitsWithAbsolutePositionAndQueryID = addQueryID(\n          hitsWithAbsolutePosition,\n          results.queryID\n        );\n\n        const transformedHits = transformItems(\n          hitsWithAbsolutePositionAndQueryID,\n          { results }\n        );\n\n        return {\n          hits: transformedHits,\n          results,\n          sendEvent,\n          bindEvent,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetSearchParameters(state) {\n        if (!escapeHTML) {\n          return state;\n        }\n\n        return state.setQueryParameters(TAG_PLACEHOLDER);\n      },\n    };\n  };\n};\n\nexport default connectHits;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport {\n  uniq,\n  find,\n  createDocumentationMessageGenerator,\n  warning,\n} from '../utils';\nimport type {\n  Hit,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsClientPayload,\n  Connector,\n} from '../../types';\n\nconst getSelectedHits = (hits: Hit[], selectedObjectIDs: string[]): Hit[] => {\n  return selectedObjectIDs.map((objectID) => {\n    const hit = find(hits, (h) => h.objectID === objectID);\n    if (typeof hit === 'undefined') {\n      throw new Error(\n        `Could not find objectID \"${objectID}\" passed to \\`clickedObjectIDsAfterSearch\\` in the returned hits. This is necessary to infer the absolute position and the query ID.`\n      );\n    }\n    return hit;\n  });\n};\n\nconst getQueryID = (selectedHits: Hit[]): string => {\n  const queryIDs = uniq(selectedHits.map((hit) => hit.__queryID));\n  if (queryIDs.length > 1) {\n    throw new Error(\n      'Insights currently allows a single `queryID`. The `objectIDs` provided map to multiple `queryID`s.'\n    );\n  }\n  const queryID = queryIDs[0];\n  if (typeof queryID !== 'string') {\n    throw new Error(\n      `Could not infer \\`queryID\\`. Ensure InstantSearch \\`clickAnalytics: true\\` was added with the Configure widget.\n\nSee: https://alg.li/lNiZZ7`\n    );\n  }\n  return queryID;\n};\n\nconst getPositions = (selectedHits: Hit[]): number[] =>\n  selectedHits.map((hit) => hit.__position);\n\nexport const inferPayload = ({\n  method,\n  results,\n  hits,\n  objectIDs,\n}: {\n  method: InsightsClientMethod;\n  results: SearchResults;\n  hits: Hit[];\n  objectIDs: string[];\n}): Omit<InsightsClientPayload, 'eventName'> => {\n  const { index } = results;\n  const selectedHits = getSelectedHits(hits, objectIDs);\n  const queryID = getQueryID(selectedHits);\n\n  switch (method) {\n    case 'clickedObjectIDsAfterSearch': {\n      const positions = getPositions(selectedHits);\n      return { index, queryID, objectIDs, positions };\n    }\n\n    case 'convertedObjectIDsAfterSearch':\n      return { index, queryID, objectIDs };\n\n    default:\n      throw new Error(`Unsupported method passed to insights: \"${method}\".`);\n  }\n};\n\nconst wrapInsightsClient =\n  (\n    aa: InsightsClient | null,\n    results: SearchResults,\n    hits: Hit[]\n  ): InsightsClient =>\n  (method, ...payloads) => {\n    const [payload] = payloads;\n    warning(\n      false,\n      `\\`insights\\` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/`\n    );\n    if (!aa) {\n      const withInstantSearchUsage = createDocumentationMessageGenerator({\n        name: 'instantsearch',\n      });\n      throw new Error(\n        withInstantSearchUsage(\n          'The `insightsClient` option has not been provided to `instantsearch`.'\n        )\n      );\n    }\n    if (!Array.isArray(payload.objectIDs)) {\n      throw new TypeError('Expected `objectIDs` to be an array.');\n    }\n    const inferredPayload = inferPayload({\n      method,\n      results,\n      hits,\n      objectIDs: payload.objectIDs,\n    });\n    aa(method, { ...inferredPayload, ...payload });\n  };\n\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n * It passes `insights` to `HitsWithInsightsListener` and `InfiniteHitsWithInsightsListener`.\n */\nexport default function withInsights<TConnector extends Connector<any, any>>(\n  connector: TConnector\n): TConnector {\n  return ((renderFn, unmountFn) =>\n    connector((renderOptions, isFirstRender) => {\n      const { results, hits, instantSearchInstance } = renderOptions;\n      if (results && hits && instantSearchInstance) {\n        const insights = wrapInsightsClient(\n          instantSearchInstance.insightsClient,\n          results,\n          hits\n        );\n        return renderFn({ ...renderOptions, insights }, isFirstRender);\n      }\n      return renderFn(renderOptions, isFirstRender);\n    }, unmountFn)) as TConnector;\n}\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{P as render,S as hydrate,h as createElement,h,p as Fragment,y as createRef,i as isValidElement,d as Component,q as cloneElement,B as createContext,x as toChildArray,l as options};\n//# sourceMappingURL=preact.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { deserializePayload } from '../utils';\nimport { readDataAttributes, hasDataAttributes } from '../../helpers/insights';\nimport type { InsightsClient } from '../../types';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\n\ntype WithInsightsListenerProps = {\n  [key: string]: unknown;\n  insights: InsightsClient;\n  sendEvent?: (event: InsightsEvent) => void;\n};\n\nconst findInsightsTarget = (\n  startElement: HTMLElement | null,\n  endElement: HTMLElement | null,\n  validator: (element: HTMLElement) => boolean\n): HTMLElement | null => {\n  let element: HTMLElement | null = startElement;\n  while (element && !validator(element)) {\n    if (element === endElement) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  return element;\n};\n\nconst parseInsightsEvent = (element: HTMLElement): InsightsEvent[] => {\n  const serializedPayload = element.getAttribute('data-insights-event');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error(\n      'The insights middleware expects `data-insights-event` to be a base64-encoded JSON string.'\n    );\n  }\n\n  try {\n    return deserializePayload(serializedPayload);\n  } catch (error) {\n    throw new Error(\n      'The insights middleware was unable to parse `data-insights-event`.'\n    );\n  }\n};\n\nconst insightsListener = (BaseComponent: any) => {\n  function WithInsightsListener(props: WithInsightsListenerProps) {\n    const handleClick = (event: MouseEvent): void => {\n      if (props.sendEvent) {\n        // new way with insights middleware\n        const targetWithEvent = findInsightsTarget(\n          event.target as HTMLElement | null,\n          event.currentTarget as HTMLElement | null,\n          (element) => element.hasAttribute('data-insights-event')\n        );\n        if (targetWithEvent) {\n          const payload = parseInsightsEvent(targetWithEvent);\n\n          payload.forEach((single) => props.sendEvent!(single));\n        }\n      }\n\n      // old way, e.g. instantsearch.insights(\"clickedObjectIDsAfterSearch\", { .. })\n      const insightsTarget = findInsightsTarget(\n        event.target as HTMLElement | null,\n        event.currentTarget as HTMLElement | null,\n        (element) => hasDataAttributes(element)\n      );\n      if (insightsTarget) {\n        const { method, payload } = readDataAttributes(insightsTarget);\n        props.insights(method, payload);\n      }\n    };\n\n    return (\n      <div onClick={handleClick}>\n        <BaseComponent {...props} />\n      </div>\n    );\n  }\n\n  return WithInsightsListener;\n};\n\nexport default insightsListener;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  InitOptions,\n  RenderOptions,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n  connector: true,\n});\n\nexport type HitsPerPageRenderStateItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * Indicates if it's the current refined value.\n   */\n  isRefined: boolean;\n};\n\nexport type HitsPerPageConnectorParamsItem = {\n  /**\n   * Label to display in the option.\n   */\n  label: string;\n\n  /**\n   * Number of hits to display per page.\n   */\n  value: number;\n\n  /**\n   * The default hits per page on first search.\n   *\n   * @default false\n   */\n  default?: boolean;\n};\n\nexport type HitsPerPageConnectorParams = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HitsPerPageRenderStateItem>;\n};\n\nexport type HitsPerPageRenderState = {\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: HitsPerPageRenderStateItem[];\n\n  /**\n   * Creates the URL for a single item name in the list.\n   *\n   * @internal\n   */\n  createURL: CreateURL<HitsPerPageConnectorParamsItem['value']>;\n\n  /**\n   * Sets the number of hits per page and triggers a search.\n   */\n  refine: (value: number) => void;\n\n  /**\n   * Indicates whether or not the search has results.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n};\n\nexport type HitsPerPageWidgetDescription = {\n  $$type: 'ais.hitsPerPage';\n  renderState: HitsPerPageRenderState;\n  indexRenderState: {\n    hitsPerPage: WidgetRenderState<\n      HitsPerPageRenderState,\n      HitsPerPageConnectorParams\n    >;\n  };\n  indexUiState: {\n    hitsPerPage: number;\n  };\n};\n\nexport type HitsPerPageConnector = Connector<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n>;\n\nconst connectHitsPerPage: HitsPerPageConnector = function connectHitsPerPage(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      items: userItems,\n      transformItems = ((items) => items) as NonNullable<\n        HitsPerPageConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(userItems)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    let items = userItems;\n\n    const defaultItems = items.filter((item) => item.default === true);\n\n    if (defaultItems.length === 0) {\n      throw new Error(\n        withUsage(`A default value must be specified in \\`items\\`.`)\n      );\n    }\n\n    if (defaultItems.length > 1) {\n      throw new Error(\n        withUsage('More than one default value is specified in `items`.')\n      );\n    }\n\n    const defaultItem = defaultItems[0];\n\n    const normalizeItems = ({ hitsPerPage }: SearchParameters) => {\n      return items.map((item) => ({\n        ...item,\n        isRefined: Number(item.value) === Number(hitsPerPage),\n      }));\n    };\n\n    type ConnectorState = {\n      getRefine: (\n        helper: AlgoliaSearchHelper\n      ) => (value: HitsPerPageConnectorParamsItem['value']) => any;\n      createURLFactory: (props: {\n        state: SearchParameters;\n        createURL: (InitOptions | RenderOptions)['createURL'];\n      }) => HitsPerPageRenderState['createURL'];\n    };\n\n    const connectorState: ConnectorState = {\n      getRefine: (helper) => (value) => {\n        return !value && value !== 0\n          ? helper.setQueryParameter('hitsPerPage', undefined).search()\n          : helper.setQueryParameter('hitsPerPage', value).search();\n      },\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(\n            state\n              .resetPage()\n              .setQueryParameter(\n                'hitsPerPage',\n                !value && value !== 0 ? undefined : value\n              )\n          ),\n    };\n\n    return {\n      $$type: 'ais.hitsPerPage',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n\n        const isCurrentInOptions = items.some(\n          (item) => Number(state.hitsPerPage) === Number(item.value)\n        );\n\n        if (!isCurrentInOptions) {\n          warning(\n            state.hitsPerPage !== undefined,\n            `\n\\`hitsPerPage\\` is not defined.\nThe option \\`hitsPerPage\\` needs to be set using the \\`configure\\` widget.\n\nLearn more: https://www.algolia.com/doc/api-reference/widgets/hits-per-page/js/\n            `\n          );\n\n          warning(\n            false,\n            `\nThe \\`items\\` option of \\`hitsPerPage\\` does not contain the \"hits per page\" value coming from the state: ${state.hitsPerPage}.\n\nYou may want to add another entry to the \\`items\\` option with this value.`\n          );\n\n          items = [\n            // The helper will convert the empty string to `undefined`.\n            { value: '' as unknown as number, label: '' },\n            ...items,\n          ];\n        }\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('hitsPerPage', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          hitsPerPage: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ state, results, createURL, helper }) {\n        const canRefine = results ? results.nbHits > 0 : false;\n\n        return {\n          items: transformItems(normalizeItems(state), { results }),\n          refine: connectorState.getRefine(helper),\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          hasNoResults: !canRefine,\n          canRefine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const hitsPerPage = searchParameters.hitsPerPage;\n\n        if (hitsPerPage === undefined || hitsPerPage === defaultItem.value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          hitsPerPage,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameters({\n          hitsPerPage: uiState.hitsPerPage || defaultItem.value,\n        });\n      },\n    };\n  };\n};\n\nexport default connectHitsPerPage;\n","import { withInsights } from '../../lib/insights';\nimport type { HitsConnectorParams, HitsWidgetDescription } from './connectHits';\nimport connectHits from './connectHits';\nimport type { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  HitsWidgetDescription,\n  HitsConnectorParams\n>;\n\nconst connectHitsWithInsights = withInsights(connectHits);\n\nexport default connectHitsWithInsights;\n","import type {\n  AlgoliaSearchHelper as Helper,\n  PlainSearchParameters,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  Hit,\n  WidgetRenderState,\n  BaseHit,\n} from '../../types';\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isEqual,\n  addAbsolutePosition,\n  addQueryID,\n  noop,\n  createSendEventForHits,\n  createBindEventForHits,\n} from '../../lib/utils';\n\nexport type InfiniteHitsCachedHits<THit extends BaseHit> = {\n  [page: number]: Array<Hit<THit>>;\n};\n\ntype Read<THit extends BaseHit> = ({\n  state,\n}: {\n  state: PlainSearchParameters;\n}) => InfiniteHitsCachedHits<THit> | null;\n\ntype Write<THit extends BaseHit> = ({\n  state,\n  hits,\n}: {\n  state: PlainSearchParameters;\n  hits: InfiniteHitsCachedHits<THit>;\n}) => void;\n\nexport type InfiniteHitsCache<THit extends BaseHit = BaseHit> = {\n  read: Read<THit>;\n  write: Write<THit>;\n};\n\nexport type InfiniteHitsConnectorParams<THit extends BaseHit = BaseHit> = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Enable the button to load previous results.\n   *\n   * @default `false`\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Receives the items, and is called before displaying them.\n   * Useful for mapping over the items to transform, and remove or reorder them.\n   */\n  transformItems?: TransformItems<Hit<THit>>;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache<THit>;\n};\n\nexport type InfiniteHitsRenderState<THit extends BaseHit = BaseHit> = {\n  /**\n   * Loads the previous results.\n   */\n  showPrevious: () => void;\n\n  /**\n   * Loads the next page of hits.\n   */\n  showMore: () => void;\n\n  /**\n   * Indicates whether the first page of hits has been reached.\n   */\n  isFirstPage: boolean;\n\n  /**\n   * Indicates whether the last page of hits has been reached.\n   */\n  isLastPage: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n\n  /**\n   * Returns a string of data-insights-event attribute for insights middleware\n   */\n  bindEvent: BindEventForHits;\n\n  /**\n   * Hits for the current page\n   */\n  currentPageHits: Array<Hit<THit>>;\n\n  /**\n   * Hits for current and cached pages\n   */\n  hits: Array<Hit<THit>>;\n\n  /**\n   * The response from the Algolia API.\n   */\n  results?: SearchResults<Hit<THit>>;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n  connector: true,\n});\n\nexport type InfiniteHitsWidgetDescription<THit extends BaseHit = BaseHit> = {\n  $$type: 'ais.infiniteHits';\n  renderState: InfiniteHitsRenderState<THit>;\n  indexRenderState: {\n    infiniteHits: WidgetRenderState<\n      InfiniteHitsRenderState<THit>,\n      InfiniteHitsConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type InfiniteHitsConnector<THit extends BaseHit = BaseHit> = Connector<\n  InfiniteHitsWidgetDescription<THit>,\n  InfiniteHitsConnectorParams<THit>\n>;\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nfunction getInMemoryCache<THit extends BaseHit>(): InfiniteHitsCache<THit> {\n  let cachedHits: InfiniteHitsCachedHits<THit> | null = null;\n  let cachedState: PlainSearchParameters | null = null;\n  return {\n    read({ state }) {\n      return isEqual(cachedState, getStateWithoutPage(state))\n        ? cachedHits\n        : null;\n    },\n    write({ state, hits }) {\n      cachedState = getStateWithoutPage(state);\n      cachedHits = hits;\n    },\n  };\n}\n\nfunction extractHitsFromCachedHits<THit extends BaseHit>(\n  cachedHits: InfiniteHitsCachedHits<THit>\n) {\n  return Object.keys(cachedHits)\n    .map(Number)\n    .sort((a, b) => a - b)\n    .reduce((acc: Array<Hit<THit>>, page) => {\n      return acc.concat(cachedHits[page]);\n    }, []);\n}\n\nconst connectInfiniteHits: InfiniteHitsConnector = function connectInfiniteHits(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  // @TODO: this should be a generic, but a Connector can not yet be generic itself\n  type THit = BaseHit;\n\n  return (widgetParams) => {\n    const {\n      escapeHTML = true,\n      transformItems = ((items) => items) as NonNullable<\n        InfiniteHitsConnectorParams['transformItems']\n      >,\n      cache = getInMemoryCache(),\n    } = widgetParams || {};\n    let showPrevious: () => void;\n    let showMore: () => void;\n    let sendEvent: SendEventForHits;\n    let bindEvent: BindEventForHits;\n    const getFirstReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.min(page, ...pages);\n      }\n    };\n    const getLastReceivedPage = (\n      state: SearchParameters,\n      cachedHits: InfiniteHitsCachedHits<THit>\n    ) => {\n      const { page = 0 } = state;\n      const pages = Object.keys(cachedHits).map(Number);\n      if (pages.length === 0) {\n        return page;\n      } else {\n        return Math.max(page, ...pages);\n      }\n    };\n\n    const getShowPrevious =\n      (helper: Helper): (() => void) =>\n      () => {\n        // Using the helper's `overrideStateWithoutTriggeringChangeEvent` method\n        // avoid updating the browser URL when the user displays the previous page.\n        helper\n          .overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            page:\n              getFirstReceivedPage(\n                helper.state,\n                cache.read({ state: helper.state }) || {}\n              ) - 1,\n          })\n          .searchWithoutTriggeringOnStateChange();\n      };\n\n    const getShowMore =\n      (helper: Helper): (() => void) =>\n      () => {\n        helper\n          .setPage(\n            getLastReceivedPage(\n              helper.state,\n              cache.read({ state: helper.state }) || {}\n            ) + 1\n          )\n          .search();\n      };\n\n    return {\n      $$type: 'ais.infiniteHits',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          false\n        );\n\n        sendEvent('view', widgetRenderState.currentPageHits);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          infiniteHits: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, instantSearchInstance }) {\n        let isFirstPage: boolean;\n        let currentPageHits: Array<Hit<THit>> = [];\n        const cachedHits = cache.read({ state }) || {};\n\n        if (!results) {\n          showPrevious = getShowPrevious(helper);\n          showMore = getShowMore(helper);\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          bindEvent = createBindEventForHits({\n            index: helper.getIndex(),\n            widgetType: this.$$type,\n          });\n          isFirstPage =\n            state.page === undefined ||\n            getFirstReceivedPage(state, cachedHits) === 0;\n        } else {\n          const { page = 0 } = state;\n\n          if (escapeHTML && results.hits.length > 0) {\n            results.hits = escapeHits(results.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            results.hits,\n            results.page,\n            results.hitsPerPage\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            results.queryID\n          );\n\n          const transformedHits = transformItems(\n            hitsWithAbsolutePositionAndQueryID,\n            { results }\n          );\n\n          if (cachedHits[page] === undefined && !results.__isArtificial) {\n            cachedHits[page] = transformedHits;\n            cache.write({ state, hits: cachedHits });\n          }\n          currentPageHits = transformedHits;\n\n          isFirstPage = getFirstReceivedPage(state, cachedHits) === 0;\n        }\n\n        const hits = extractHitsFromCachedHits(cachedHits);\n        const isLastPage = results\n          ? results.nbPages <= getLastReceivedPage(state, cachedHits) + 1\n          : true;\n\n        return {\n          hits,\n          currentPageHits,\n          sendEvent,\n          bindEvent,\n          results,\n          showPrevious,\n          showMore,\n          isFirstPage,\n          isLastPage,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutPage = state.setQueryParameter('page', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutPage;\n        }\n\n        return stateWithoutPage.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          // return without adding `page` to uiState\n          // because we don't want `page=1` in the URL\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          // The page in the UI state is incremented by one\n          // to expose the user value (not `0`).\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters;\n\n        if (escapeHTML) {\n          widgetSearchParameters =\n            searchParameters.setQueryParameters(TAG_PLACEHOLDER);\n        }\n\n        // The page in the search parameters is decremented by one\n        // to get to the actual parameter value from the UI state.\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return widgetSearchParameters.setQueryParameter('page', page);\n      },\n    };\n  };\n};\n\nexport default connectInfiniteHits;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  RenderOptions,\n  SortBy,\n  TransformItems,\n  Widget,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'menu',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'name:asc'];\n\nexport type MenuItem = {\n  /**\n   * The value of the menu item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   */\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type MenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * How many facets values to retrieve.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * How many facets values to retrieve when `toggleShowMore` is called, this value is meant to be greater than `limit` option.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.HierarchicalFacet>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<MenuItem>;\n};\n\nexport type MenuRenderState = {\n  /**\n   * The elements that can be refined for the current search results.\n   */\n  items: MenuItem[];\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Filter the search to item value.\n   */\n  refine(value: string): void;\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMore.limit`.\n   */\n  toggleShowMore(): void;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type MenuWidgetDescription = {\n  $$type: 'ais.menu';\n  renderState: MenuRenderState;\n  indexRenderState: {\n    menu: {\n      [attribute: string]: WidgetRenderState<\n        MenuRenderState,\n        MenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    menu: {\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type MenuConnector = Connector<\n  MenuWidgetDescription,\n  MenuConnectorParams\n>;\n\n/**\n * **Menu** connector provides the logic to build a widget that will give the user the ability to choose a single value for a specific facet. The typical usage of menu is for navigation in categories.\n *\n * This connector provides a `toggleShowMore()` function to display more or less items and a `refine()`\n * function to select an item. While selecting a new element, the `refine` will also unselect the\n * one that is currently selected.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in \"attributes for faceting\" on the Algolia dashboard or configured as attributesForFaceting via a set settings call to the Algolia API.\n */\nconst connectMenu: MenuConnector = function connectMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute,\n      limit = 10,\n      showMore = false,\n      showMoreLimit = 20,\n      sortBy = DEFAULT_SORT,\n      transformItems = ((items) => items) as NonNullable<\n        MenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (showMore === true && showMoreLimit <= limit) {\n      throw new Error(\n        withUsage('The `showMoreLimit` option must be greater than `limit`.')\n      );\n    }\n\n    type ThisWidget = Widget<\n      MenuWidgetDescription & { widgetParams: typeof widgetParams }\n    >;\n\n    let sendEvent: MenuRenderState['sendEvent'] | undefined;\n    let _createURL: MenuRenderState['createURL'] | undefined;\n    let _refine: MenuRenderState['refine'] | undefined;\n\n    // Provide the same function to the `renderFn` so that way the user\n    // has to only bind it once when `isFirstRendering` for instance\n    let isShowingMore = false;\n    let toggleShowMore = () => {};\n    function createToggleShowMore(\n      renderOptions: RenderOptions,\n      widget: ThisWidget\n    ) {\n      return () => {\n        isShowingMore = !isShowingMore;\n        widget.render!(renderOptions);\n      };\n    }\n    function cachedToggleShowMore() {\n      toggleShowMore();\n    }\n\n    function getLimit() {\n      return isShowingMore ? showMoreLimit : limit;\n    }\n\n    return {\n      $$type: 'ais.menu' as const,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeHierarchicalFacet(attribute)\n          .setQueryParameter('maxValuesPerFacet', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          menu: {\n            ...renderState.menu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { results, createURL, instantSearchInstance, helper } =\n          renderOptions;\n\n        let items: MenuRenderState['items'] = [];\n        let canToggleShowMore = false;\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForFacet({\n            instantSearchInstance,\n            helper,\n            attribute,\n            widgetType: this.$$type,\n          });\n        }\n\n        if (!_createURL) {\n          _createURL = (facetValue: string) =>\n            createURL(\n              helper.state\n                .resetPage()\n                .toggleFacetRefinement(attribute, facetValue)\n            );\n        }\n\n        if (!_refine) {\n          _refine = function (facetValue: string) {\n            const [refinedItem] =\n              helper.getHierarchicalFacetBreadcrumb(attribute);\n            sendEvent!('click', facetValue ? facetValue : refinedItem);\n            helper\n              .toggleFacetRefinement(\n                attribute,\n                facetValue ? facetValue : refinedItem\n              )\n              .search();\n          };\n        }\n\n        if (renderOptions.results) {\n          toggleShowMore = createToggleShowMore(renderOptions, this);\n        }\n\n        if (results) {\n          const facetValues = results.getFacetValues(attribute, {\n            sortBy,\n            facetOrdering: sortBy === DEFAULT_SORT,\n          });\n          const facetItems =\n            facetValues && !Array.isArray(facetValues) && facetValues.data\n              ? facetValues.data\n              : [];\n\n          canToggleShowMore =\n            showMore && (isShowingMore || facetItems.length > getLimit());\n\n          items = transformItems(\n            facetItems\n              .slice(0, getLimit())\n              .map(({ name: label, escapedValue: value, path, ...item }) => ({\n                ...item,\n                label,\n                value,\n              })),\n            { results }\n          );\n        }\n\n        return {\n          items,\n          createURL: _createURL,\n          refine: _refine,\n          sendEvent,\n          canRefine: items.length > 0,\n          widgetParams,\n          isShowingMore,\n          toggleShowMore: cachedToggleShowMore,\n          canToggleShowMore,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const [value] =\n          searchParameters.getHierarchicalFacetBreadcrumb(attribute);\n\n        if (!value) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          menu: {\n            ...uiState.menu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.menu && uiState.menu[attribute];\n\n        const withFacetConfiguration = searchParameters\n          .removeHierarchicalFacet(attribute)\n          .addHierarchicalFacet({\n            name: attribute,\n            attributes: [attribute],\n          });\n\n        const currentMaxValuesPerFacet =\n          withFacetConfiguration.maxValuesPerFacet || 0;\n\n        const nextMaxValuesPerFacet = Math.max(\n          currentMaxValuesPerFacet,\n          showMore ? showMoreLimit : limit\n        );\n\n        const withMaxValuesPerFacet = withFacetConfiguration.setQueryParameter(\n          'maxValuesPerFacet',\n          nextMaxValuesPerFacet\n        );\n\n        if (!value) {\n          return withMaxValuesPerFacet.setQueryParameters({\n            hierarchicalFacetsRefinements: {\n              ...withMaxValuesPerFacet.hierarchicalFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        }\n\n        return withMaxValuesPerFacet.addHierarchicalFacetRefinement(\n          attribute,\n          value\n        );\n      },\n    };\n  };\n};\n\nexport default connectMenu;\n","import type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\nimport type { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'numeric-menu',\n  connector: true,\n});\n\nexport type NumericMenuConnectorParamsItem = {\n  /**\n   * Name of the option\n   */\n  label: string;\n\n  /**\n   * Higher bound of the option (<=)\n   */\n  start?: number;\n\n  /**\n   * Lower bound of the option (>=)\n   */\n  end?: number;\n};\n\nexport type NumericMenuRenderStateItem = {\n  /**\n   *  Name of the option.\n   */\n  label: string;\n\n  /**\n   * URL encoded of the bounds object with the form `{start, end}`.\n   * This value can be used verbatim in the webpage and can be read by `refine`\n   * directly. If you want to inspect the value, you can do:\n   * `JSON.parse(decodeURI(value))` to get the object.\n   */\n  value: string;\n\n  /**\n   * True if the value is selected\n   */\n  isRefined: boolean;\n};\n\nexport type NumericMenuConnectorParams = {\n  /**\n   * Name of the attribute for filtering\n   */\n  attribute: string;\n\n  /**\n   * List of all the items\n   */\n  items: NumericMenuConnectorParamsItem[];\n\n  /**\n   * Function to transform the items passed to the templates\n   */\n  transformItems?: TransformItems<NumericMenuRenderStateItem>;\n};\n\nexport type NumericMenuRenderState = {\n  /**\n   * The list of available choices\n   */\n  items: NumericMenuRenderStateItem[];\n\n  /**\n   * Creates URLs for the next state, the string is the name of the selected option\n   */\n  createURL: CreateURL<NumericMenuRenderStateItem['value']>;\n\n  /**\n   * `true` if the last search contains no result\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Indicates if search state can be refined.\n   *\n   * This is `true` if the last search contains no result and\n   * \"All\" range is selected\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the selected value and trigger a new search\n   */\n  refine: (facetValue: string) => void;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n};\n\nexport type NumericMenuWidgetDescription = {\n  $$type: 'ais.numericMenu';\n  renderState: NumericMenuRenderState;\n  indexRenderState: {\n    numericMenu: {\n      [attribute: string]: WidgetRenderState<\n        NumericMenuRenderState,\n        NumericMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    numericMenu: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type NumericMenuConnector = Connector<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n>;\n\nconst $$type = 'ais.numericMenu';\n\nconst createSendEvent =\n  ({ instantSearchInstance }: { instantSearchInstance: InstantSearch }) =>\n  (...args: [InsightsEvent] | [string, string, string?]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n  };\n\nconst connectNumericMenu: NumericMenuConnector = function connectNumericMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      items = [],\n      transformItems = ((item) => item) as NonNullable<\n        NumericMenuConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (attribute === '') {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (!items || items.length === 0) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?(facetValue: string): void;\n      createURL?(state: SearchParameters): (facetValue: string) => string;\n      sendEvent?: SendEventForFacet;\n    };\n\n    const prepareItems = (state: SearchParameters) =>\n      items.map(({ start, end, label }) => ({\n        label,\n        value: encodeURI(JSON.stringify({ start, end })),\n        isRefined: isRefined(state, attribute, { start, end, label }),\n      }));\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state.clearRefinements(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const values = searchParameters.getNumericRefinements(attribute);\n\n        const equal = values['='] && values['='][0];\n\n        if (equal || equal === 0) {\n          return {\n            ...uiState,\n            numericMenu: {\n              ...uiState.numericMenu,\n              [attribute]: `${values['=']}`,\n            },\n          };\n        }\n\n        const min = (values['>='] && values['>='][0]) || '';\n        const max = (values['<='] && values['<='][0]) || '';\n\n        if (min === '' && max === '') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          numericMenu: {\n            ...uiState.numericMenu,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.numericMenu && uiState.numericMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n\n        if (!value) {\n          return withoutRefinements.setQueryParameters({\n            numericRefinements: {\n              ...withoutRefinements.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        const isExact = value.indexOf(':') === -1;\n\n        if (isExact) {\n          return withoutRefinements.addNumericRefinement(\n            attribute,\n            '=',\n            Number(value)\n          );\n        }\n\n        const [min, max] = value.split(':').map(parseFloat);\n\n        const withMinRefinement = isFiniteNumber(min)\n          ? withoutRefinements.addNumericRefinement(attribute, '>=', min)\n          : withoutRefinements;\n\n        const withMaxRefinement = isFiniteNumber(max)\n          ? withMinRefinement.addNumericRefinement(attribute, '<=', max)\n          : withMinRefinement;\n\n        return withMaxRefinement;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          numericMenu: {\n            ...renderState.numericMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        results,\n        state,\n        instantSearchInstance,\n        helper,\n        createURL,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            const refinedState = getRefinedState(\n              helper.state,\n              attribute,\n              facetValue\n            );\n            connectorState.sendEvent!('click', facetValue);\n            helper.setState(refinedState).search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (newState) => (facetValue) =>\n            createURL(getRefinedState(newState, attribute, facetValue));\n        }\n\n        if (!connectorState.sendEvent) {\n          connectorState.sendEvent = createSendEvent({\n            instantSearchInstance,\n          });\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n        const preparedItems = prepareItems(state);\n        let allIsSelected = true;\n        for (const item of preparedItems) {\n          if (item.isRefined && decodeURI(item.value) !== '{}') {\n            allIsSelected = false;\n            break;\n          }\n        }\n\n        return {\n          createURL: connectorState.createURL(state),\n          items: transformItems(preparedItems, { results }),\n          hasNoResults,\n          canRefine: !(hasNoResults && allIsSelected),\n          refine: connectorState.refine,\n          sendEvent: connectorState.sendEvent,\n          widgetParams,\n        };\n      },\n    };\n  };\n};\n\nfunction isRefined(\n  state: SearchParameters,\n  attribute: string,\n  option: NumericMenuConnectorParamsItem\n) {\n  // @TODO: same as another spot, why is this mixing arrays & elements?\n  const currentRefinements = state.getNumericRefinements(attribute);\n\n  if (option.start !== undefined && option.end !== undefined) {\n    if (option.start === option.end) {\n      return hasNumericRefinement(currentRefinements, '=', option.start);\n    } else {\n      return (\n        hasNumericRefinement(currentRefinements, '>=', option.start) &&\n        hasNumericRefinement(currentRefinements, '<=', option.end)\n      );\n    }\n  }\n\n  if (option.start !== undefined) {\n    return hasNumericRefinement(currentRefinements, '>=', option.start);\n  }\n\n  if (option.end !== undefined) {\n    return hasNumericRefinement(currentRefinements, '<=', option.end);\n  }\n\n  if (option.start === undefined && option.end === undefined) {\n    return (\n      Object.keys(currentRefinements) as SearchParameters.Operator[]\n    ).every((operator) => (currentRefinements[operator] || []).length === 0);\n  }\n\n  return false;\n}\n\nfunction getRefinedState(\n  state: SearchParameters,\n  attribute: string,\n  facetValue: string\n) {\n  let resolvedState = state;\n\n  const refinedOption = JSON.parse(decodeURI(facetValue));\n\n  // @TODO: why is array / element mixed here & hasRefinements; seems wrong?\n  const currentRefinements = resolvedState.getNumericRefinements(attribute);\n\n  if (refinedOption.start === undefined && refinedOption.end === undefined) {\n    return resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (!isRefined(resolvedState, attribute, refinedOption)) {\n    resolvedState = resolvedState.removeNumericRefinement(attribute);\n  }\n\n  if (refinedOption.start !== undefined && refinedOption.end !== undefined) {\n    if (refinedOption.start > refinedOption.end) {\n      throw new Error('option.start should be > to option.end');\n    }\n\n    if (refinedOption.start === refinedOption.end) {\n      if (hasNumericRefinement(currentRefinements, '=', refinedOption.start)) {\n        resolvedState = resolvedState.removeNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      } else {\n        resolvedState = resolvedState.addNumericRefinement(\n          attribute,\n          '=',\n          refinedOption.start\n        );\n      }\n      return resolvedState;\n    }\n  }\n\n  if (refinedOption.start !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '>=', refinedOption.start)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '>=',\n        refinedOption.start\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '>=',\n      refinedOption.start\n    );\n  }\n\n  if (refinedOption.end !== undefined) {\n    if (hasNumericRefinement(currentRefinements, '<=', refinedOption.end)) {\n      resolvedState = resolvedState.removeNumericRefinement(\n        attribute,\n        '<=',\n        refinedOption.end\n      );\n    }\n    resolvedState = resolvedState.addNumericRefinement(\n      attribute,\n      '<=',\n      refinedOption.end\n    );\n  }\n\n  if (typeof resolvedState.page === 'number') {\n    resolvedState.page = 0;\n  }\n\n  return resolvedState;\n}\n\nfunction hasNumericRefinement(\n  currentRefinements: SearchParameters.OperatorList,\n  operator: SearchParameters.Operator,\n  value: number\n) {\n  return (\n    currentRefinements[operator] !== undefined &&\n    currentRefinements[operator]!.includes(value)\n  );\n}\n\nexport default connectNumericMenu;\n","import { withInsights } from '../../lib/insights';\nimport type {\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams,\n} from './connectInfiniteHits';\nimport connectInfiniteHits from './connectInfiniteHits';\nimport type { Connector } from '../../types';\n\n/**\n * Due to https://github.com/microsoft/web-build-tools/issues/1050, we need\n * Connector<...> imported in this file, even though it is only used implicitly.\n * This _uses_ Connector<...> so it is not accidentally removed by someone.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndeclare type ImportWorkaround = Connector<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n>;\n\nconst connectInfiniteHitsWithInsights = withInsights(connectInfiniteHits);\n\nexport default connectInfiniteHitsWithInsights;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport Paginator from './Paginator';\nimport type { Connector, CreateURL, WidgetRenderState } from '../../types';\nimport type { SearchParameters } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'pagination',\n  connector: true,\n});\n\nexport type PaginationConnectorParams = {\n  /**\n   * The total number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The padding of pages to show around the current page\n   * @default 3\n   */\n  padding?: number;\n};\n\nexport type PaginationRenderState = {\n  /** Creates URLs for the next state, the number is the page to generate the URL for. */\n  createURL: CreateURL<number>;\n\n  /** Sets the current page and triggers a search. */\n  refine(page: number): void;\n\n  /** true if this search returned more than one page */\n  canRefine: boolean;\n\n  /** The number of the page currently displayed. */\n  currentRefinement: number;\n\n  /** The number of hits computed for the last query (can be approximated). */\n  nbHits: number;\n\n  /** The number of pages for the result set. */\n  nbPages: number;\n\n  /** The actual pages relevant to the current situation and padding. */\n  pages: number[];\n\n  /** true if the current page is also the first page. */\n  isFirstPage: boolean;\n\n  /** true if the current page is also the last page. */\n  isLastPage: boolean;\n};\n\nexport type PaginationWidgetDescription = {\n  $$type: 'ais.pagination';\n  renderState: PaginationRenderState;\n  indexRenderState: {\n    pagination: WidgetRenderState<\n      PaginationRenderState,\n      PaginationConnectorParams\n    >;\n  };\n  indexUiState: {\n    page: number;\n  };\n};\n\nexport type PaginationConnector = Connector<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n>;\n\n/**\n * **Pagination** connector provides the logic to build a widget that will let the user\n * choose the current page of the results.\n *\n * When using the pagination with Algolia, you should be aware that the engine won't provide you pages\n * beyond the 1000th hits by default. You can find more information on the [Algolia documentation](https://www.algolia.com/doc/guides/searching/pagination/#pagination-limitations).\n */\nconst connectPagination: PaginationConnector = function connectPagination(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { totalPages, padding = 3 } = widgetParams || {};\n\n    const pager = new Paginator({\n      currentPage: 0,\n      total: 0,\n      padding,\n    });\n\n    type ConnectorState = {\n      refine?(page: number): void;\n      createURL?(state: SearchParameters): (page: number) => string;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function getMaxPage({ nbPages }: { nbPages: number }) {\n      return totalPages !== undefined ? Math.min(totalPages, nbPages) : nbPages;\n    }\n\n    return {\n      $$type: 'ais.pagination',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('page', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const page = searchParameters.page || 0;\n\n        if (!page) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          page: page + 1,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const page = uiState.page ? uiState.page - 1 : 0;\n\n        return searchParameters.setQueryParameter('page', page);\n      },\n\n      getWidgetRenderState({ results, helper, state, createURL }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (page) => {\n            helper.setPage(page);\n            helper.search();\n          };\n        }\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (helperState) => (page) =>\n            createURL(helperState.setPage(page));\n        }\n\n        const page = state.page || 0;\n        const nbPages = getMaxPage(results || { nbPages: 0 });\n        pager.currentPage = page;\n        pager.total = nbPages;\n\n        return {\n          createURL: connectorState.createURL(state),\n          refine: connectorState.refine,\n          canRefine: nbPages > 1,\n          currentRefinement: page,\n          nbHits: results?.nbHits || 0,\n          nbPages,\n          pages: results ? pager.pages() : [],\n          isFirstPage: pager.isFirstPage(),\n          isLastPage: pager.isLastPage(),\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          pagination: this.getWidgetRenderState(renderOptions),\n        };\n      },\n    };\n  };\n};\n\nexport default connectPagination;\n","import { range } from '../../lib/utils';\n\nclass Paginator {\n  public currentPage: number;\n  public total: number;\n  public padding: number;\n\n  public constructor(params: {\n    currentPage: number;\n    total: number;\n    padding: number;\n  }) {\n    this.currentPage = params.currentPage;\n    this.total = params.total;\n    this.padding = params.padding;\n  }\n\n  public pages() {\n    const { total, currentPage, padding } = this;\n\n    if (total === 0) return [0];\n\n    const totalDisplayedPages = this.nbPagesDisplayed(padding, total);\n    if (totalDisplayedPages === total) {\n      return range({ end: total });\n    }\n\n    const paddingLeft = this.calculatePaddingLeft(\n      currentPage,\n      padding,\n      total,\n      totalDisplayedPages\n    );\n    const paddingRight = totalDisplayedPages - paddingLeft;\n\n    const first = currentPage - paddingLeft;\n    const last = currentPage + paddingRight;\n\n    return range({ start: first, end: last });\n  }\n\n  public nbPagesDisplayed(padding: number, total: number) {\n    return Math.min(2 * padding + 1, total);\n  }\n\n  public calculatePaddingLeft(\n    current: number,\n    padding: number,\n    total: number,\n    totalDisplayedPages: number\n  ) {\n    if (current <= padding) {\n      return current;\n    }\n\n    if (current >= total - padding) {\n      return totalDisplayedPages - (total - current);\n    }\n\n    return padding;\n  }\n\n  public isLastPage() {\n    return this.currentPage === this.total - 1 || this.total === 0;\n  }\n\n  public isFirstPage() {\n    return this.currentPage === 0;\n  }\n}\n\nexport default Paginator;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  isFiniteNumber,\n  find,\n  noop,\n} from '../../lib/utils';\nimport type { InsightsEvent } from '../../middlewares';\nimport type { Connector, InstantSearch, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator(\n  { name: 'range-input', connector: true },\n  { name: 'range-slider', connector: true }\n);\n\nconst $$type = 'ais.range';\n\nexport type RangeMin = number | undefined;\nexport type RangeMax = number | undefined;\n\n// @MAJOR: potentially we should consolidate these types\nexport type RangeBoundaries = [RangeMin, RangeMax];\nexport type Range = {\n  min: RangeMin;\n  max: RangeMax;\n};\n\nexport type RangeRenderState = {\n  /**\n   * Sets a range to filter the results on. Both values\n   * are optional, and will default to the higher and lower bounds. You can use `undefined` to remove a\n   * previously set bound or to set an infinite bound.\n   * @param rangeValue tuple of [min, max] bounds\n   */\n  refine(rangeValue: RangeBoundaries): void;\n\n  /**\n   * Indicates whether this widget can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Send an event to the insights middleware\n   */\n  sendEvent: SendEventForFacet;\n\n  /**\n   * Maximum range possible for this search\n   */\n  range: Range;\n\n  /**\n   * Current refinement of the search\n   */\n  start: RangeBoundaries;\n\n  /**\n   * Transform for the rendering `from` and/or `to` values.\n   * Both functions take a `number` as input and should output a `string`.\n   */\n  format: {\n    from(fromValue: number): string;\n    to(toValue: number): string;\n  };\n};\n\nexport type RangeConnectorParams = {\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n\n  /**\n   * Minimal range value, default to automatically computed from the result set.\n   */\n  min?: number;\n\n  /**\n   * Maximal range value, default to automatically computed from the result set.\n   */\n  max?: number;\n\n  /**\n   * Number of digits after decimal point to use.\n   */\n  precision?: number;\n};\n\nexport type RangeWidgetDescription = {\n  $$type: 'ais.range';\n  renderState: RangeRenderState;\n  indexRenderState: {\n    range: {\n      [attribute: string]: WidgetRenderState<\n        RangeRenderState,\n        RangeConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    range: {\n      // @TODO: this could possibly become `${number}:${number}` later\n      [attribute: string]: string;\n    };\n  };\n};\n\nexport type RangeConnector = Connector<\n  RangeWidgetDescription,\n  RangeConnectorParams\n>;\n\nfunction toPrecision({\n  min,\n  max,\n  precision,\n}: {\n  min?: number;\n  max?: number;\n  precision: number;\n}) {\n  const pow = Math.pow(10, precision);\n\n  return {\n    min: min ? Math.floor(min * pow) / pow : min,\n    max: max ? Math.ceil(max * pow) / pow : max,\n  };\n}\n\n/**\n * **Range** connector provides the logic to create custom widget that will let\n * the user refine results using a numeric range.\n *\n * This connectors provides a `refine()` function that accepts bounds. It will also provide\n * information about the min and max bounds for the current result set.\n */\nconst connectRange: RangeConnector = function connectRange(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      attribute = '',\n      min: minBound,\n      max: maxBound,\n      precision = 0,\n    } = widgetParams || {};\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    if (\n      isFiniteNumber(minBound) &&\n      isFiniteNumber(maxBound) &&\n      minBound > maxBound\n    ) {\n      throw new Error(withUsage(\"The `max` option can't be lower than `min`.\"));\n    }\n\n    const formatToNumber = (v: string | number) =>\n      Number(Number(v).toFixed(precision));\n\n    const rangeFormatter = {\n      from: (v: number) => v.toLocaleString(),\n      to: (v: number) => formatToNumber(v).toLocaleString(),\n    };\n\n    // eslint-disable-next-line complexity\n    const getRefinedState = (\n      helper: AlgoliaSearchHelper,\n      currentRange: Range,\n      nextMin: RangeMin | string,\n      nextMax: RangeMax | string\n    ) => {\n      let resolvedState = helper.state;\n      const { min: currentRangeMin, max: currentRangeMax } = currentRange;\n\n      const [min] = resolvedState.getNumericRefinement(attribute, '>=') || [];\n      const [max] = resolvedState.getNumericRefinement(attribute, '<=') || [];\n\n      const isResetMin = nextMin === undefined || nextMin === '';\n      const isResetMax = nextMax === undefined || nextMax === '';\n\n      const { min: nextMinAsNumber, max: nextMaxAsNumber } = toPrecision({\n        min: !isResetMin ? parseFloat(nextMin as string) : undefined,\n        max: !isResetMax ? parseFloat(nextMax as string) : undefined,\n        precision,\n      });\n\n      let newNextMin: RangeMin;\n      if (!isFiniteNumber(minBound) && currentRangeMin === nextMinAsNumber) {\n        newNextMin = undefined;\n      } else if (isFiniteNumber(minBound) && isResetMin) {\n        newNextMin = minBound;\n      } else {\n        newNextMin = nextMinAsNumber;\n      }\n\n      let newNextMax: RangeMax;\n      if (!isFiniteNumber(maxBound) && currentRangeMax === nextMaxAsNumber) {\n        newNextMax = undefined;\n      } else if (isFiniteNumber(maxBound) && isResetMax) {\n        newNextMax = maxBound;\n      } else {\n        newNextMax = nextMaxAsNumber;\n      }\n\n      const isResetNewNextMin = newNextMin === undefined;\n\n      const isGreaterThanCurrentRange =\n        isFiniteNumber(currentRangeMin) && currentRangeMin <= newNextMin!;\n      const isMinValid =\n        isResetNewNextMin ||\n        (isFiniteNumber(newNextMin) &&\n          (!isFiniteNumber(currentRangeMin) || isGreaterThanCurrentRange));\n\n      const isResetNewNextMax = newNextMax === undefined;\n      const isLowerThanRange =\n        isFiniteNumber(newNextMax) && currentRangeMax! >= newNextMax;\n      const isMaxValid =\n        isResetNewNextMax ||\n        (isFiniteNumber(newNextMax) &&\n          (!isFiniteNumber(currentRangeMax) || isLowerThanRange));\n\n      const hasMinChange = min !== newNextMin;\n      const hasMaxChange = max !== newNextMax;\n\n      if ((hasMinChange || hasMaxChange) && isMinValid && isMaxValid) {\n        resolvedState = resolvedState.removeNumericRefinement(attribute);\n\n        if (isFiniteNumber(newNextMin)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '>=',\n            newNextMin\n          );\n        }\n\n        if (isFiniteNumber(newNextMax)) {\n          resolvedState = resolvedState.addNumericRefinement(\n            attribute,\n            '<=',\n            newNextMax\n          );\n        }\n\n        return resolvedState.resetPage();\n      }\n\n      return null;\n    };\n\n    const createSendEvent =\n      (instantSearchInstance: InstantSearch) =>\n      (...args: [InsightsEvent] | [string, string, string?]) => {\n        if (args.length === 1) {\n          instantSearchInstance.sendEventToInsights(args[0]);\n          return;\n        }\n      };\n\n    function _getCurrentRange(\n      stats: Partial<NonNullable<SearchResults.Facet['stats']>>\n    ) {\n      let min: number;\n      if (isFiniteNumber(minBound)) {\n        min = minBound;\n      } else if (isFiniteNumber(stats.min)) {\n        min = stats.min;\n      } else {\n        min = 0;\n      }\n\n      let max: number;\n      if (isFiniteNumber(maxBound)) {\n        max = maxBound;\n      } else if (isFiniteNumber(stats.max)) {\n        max = stats.max;\n      } else {\n        max = 0;\n      }\n\n      return toPrecision({ min, max, precision });\n    }\n\n    function _getCurrentRefinement(\n      helper: AlgoliaSearchHelper\n    ): RangeBoundaries {\n      const [minValue] = helper.getNumericRefinement(attribute, '>=') || [];\n\n      const [maxValue] = helper.getNumericRefinement(attribute, '<=') || [];\n\n      const min = isFiniteNumber(minValue) ? minValue : -Infinity;\n      const max = isFiniteNumber(maxValue) ? maxValue : Infinity;\n\n      return [min, max];\n    }\n\n    function _refine(helper: AlgoliaSearchHelper, currentRange: Range) {\n      return ([nextMin, nextMax]: RangeBoundaries = [undefined, undefined]) => {\n        const refinedState = getRefinedState(\n          helper,\n          currentRange,\n          nextMin,\n          nextMax\n        );\n        if (refinedState) {\n          helper.setState(refinedState).search();\n        }\n      };\n    }\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          range: {\n            ...renderState.range,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ results, helper, instantSearchInstance }) {\n        const facetsFromResults = (results && results.disjunctiveFacets) || [];\n        const facet = find(\n          facetsFromResults,\n          (facetResult) => facetResult.name === attribute\n        );\n        const stats = (facet && facet.stats) || {\n          min: undefined,\n          max: undefined,\n        };\n\n        const currentRange = _getCurrentRange(stats);\n        const start = _getCurrentRefinement(helper);\n\n        let refine: ReturnType<typeof _refine>;\n\n        if (!results) {\n          // On first render pass an empty range\n          // to be able to bypass the validation\n          // related to it\n          refine = _refine(helper, {\n            min: undefined,\n            max: undefined,\n          });\n        } else {\n          refine = _refine(helper, currentRange);\n        }\n\n        return {\n          refine,\n          canRefine: currentRange.min !== currentRange.max,\n          format: rangeFormatter,\n          range: currentRange,\n          sendEvent: createSendEvent(instantSearchInstance),\n          widgetParams: {\n            ...widgetParams,\n            precision,\n          },\n          start,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state\n          .removeDisjunctiveFacet(attribute)\n          .removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const { '>=': min = [], '<=': max = [] } =\n          searchParameters.getNumericRefinements(attribute);\n\n        if (min.length === 0 && max.length === 0) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          range: {\n            ...uiState.range,\n            [attribute]: `${min}:${max}`,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        let widgetSearchParameters = searchParameters\n          .addDisjunctiveFacet(attribute)\n          .setQueryParameters({\n            numericRefinements: {\n              ...searchParameters.numericRefinements,\n              [attribute]: {},\n            },\n          });\n\n        if (isFiniteNumber(minBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            minBound\n          );\n        }\n\n        if (isFiniteNumber(maxBound)) {\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            maxBound\n          );\n        }\n\n        const value = uiState.range && uiState.range[attribute];\n\n        if (!value || value.indexOf(':') === -1) {\n          return widgetSearchParameters;\n        }\n\n        const [lowerBound, upperBound] = value.split(':').map(parseFloat);\n\n        if (\n          isFiniteNumber(lowerBound) &&\n          (!isFiniteNumber(minBound) || minBound < lowerBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '>=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '>=',\n            lowerBound\n          );\n        }\n\n        if (\n          isFiniteNumber(upperBound) &&\n          (!isFiniteNumber(maxBound) || upperBound < maxBound)\n        ) {\n          widgetSearchParameters =\n            widgetSearchParameters.removeNumericRefinement(attribute, '<=');\n          widgetSearchParameters = widgetSearchParameters.addNumericRefinement(\n            attribute,\n            '<=',\n            upperBound\n          );\n        }\n\n        return widgetSearchParameters;\n      },\n    };\n  };\n};\n\nexport default connectRange;\n","import type { AlgoliaSearchHelper, SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForFacet } from '../../lib/utils';\nimport {\n  escapeFacets,\n  TAG_PLACEHOLDER,\n  TAG_REPLACEMENT,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForFacet,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  SortBy,\n  RenderOptions,\n  Widget,\n  InitOptions,\n  FacetHit,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n  connector: true,\n});\n\nconst DEFAULT_SORT = ['isRefined', 'count:desc', 'name:asc'];\n\nexport type RefinementListItem = {\n  /**\n   * The value of the refinement list item.\n   */\n  value: string;\n  /**\n   * Human-readable value of the refinement list item.\n   */\n  label: string;\n  /**\n   * Human-readable value of the searched refinement list item.\n   */\n  highlighted?: string;\n  /**\n   * Number of matched results after refinement is applied.\n   */\n  count: number;\n  /**\n   * Indicates if the list item is refined.\n   */\n  isRefined: boolean;\n};\n\nexport type RefinementListConnectorParams = {\n  /**\n   * The name of the attribute in the records.\n   */\n  attribute: string;\n  /**\n   * How the filters are combined together.\n   */\n  operator?: 'and' | 'or';\n  /**\n   * The max number of items to display when\n   * `showMoreLimit` is not set or if the widget is showing less value.\n   */\n  limit?: number;\n  /**\n   * Whether to display a button that expands the number of items.\n   */\n  showMore?: boolean;\n  /**\n   * The max number of items to display if the widget\n   * is showing more items.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   *\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   *\n   * If a facetOrdering is set in the index settings, it is used when sortBy isn't passed\n   */\n  sortBy?: SortBy<SearchResults.FacetValue>;\n  /**\n   * Escapes the content of the facet values.\n   */\n  escapeFacetValues?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<RefinementListItem>;\n};\n\nexport type RefinementListRenderState = {\n  /**\n   * The list of filtering values returned from Algolia API.\n   */\n  items: RefinementListItem[];\n  /**\n   * indicates whether the results are exhaustive (complete)\n   */\n  hasExhaustiveItems: boolean;\n  /**\n   * Creates the next state url for a selected refinement.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Action to apply selected refinements.\n   */\n  refine(value: string): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForFacet;\n  /**\n   * Searches for values inside the list.\n   */\n  searchForItems(query: string): void;\n  /**\n   * `true` if the values are from an index search.\n   */\n  isFromSearch: boolean;\n  /**\n   * `true` if a refinement can be applied.\n   */\n  canRefine: boolean;\n  /**\n   * `true` if the toggleShowMore button can be activated (enough items to display more or\n   * already displaying more than `limit` items)\n   */\n  canToggleShowMore: boolean;\n  /**\n   * True if the menu is displaying all the menu items.\n   */\n  isShowingMore: boolean;\n  /**\n   * Toggles the number of values displayed between `limit` and `showMoreLimit`.\n   */\n  toggleShowMore(): void;\n};\n\nexport type RefinementListWidgetDescription = {\n  $$type: 'ais.refinementList';\n  renderState: RefinementListRenderState;\n  indexRenderState: {\n    refinementList: {\n      [attribute: string]: WidgetRenderState<\n        RefinementListRenderState,\n        RefinementListConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    refinementList: {\n      [attribute: string]: string[];\n    };\n  };\n};\n\nexport type RefinementListConnector = Connector<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n>;\n\n/**\n * **RefinementList** connector provides the logic to build a custom widget that\n * will let the user filter the results based on the values of a specific facet.\n *\n * **Requirement:** the attribute passed as `attribute` must be present in\n * attributesForFaceting of the searched index.\n *\n * This connector provides:\n * - a `refine()` function to select an item.\n * - a `toggleShowMore()` function to display more or less items\n * - a `searchForItems()` function to search within the items.\n */\nconst connectRefinementList: RefinementListConnector =\n  function connectRefinementList(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        attribute,\n        operator = 'or',\n        limit = 10,\n        showMore = false,\n        showMoreLimit = 20,\n        sortBy = DEFAULT_SORT,\n        escapeFacetValues = true,\n        transformItems = ((items) => items) as NonNullable<\n          RefinementListConnectorParams['transformItems']\n        >,\n      } = widgetParams || {};\n\n      type ThisWidget = Widget<\n        RefinementListWidgetDescription & { widgetParams: typeof widgetParams }\n      >;\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      if (!/^(and|or)$/.test(operator)) {\n        throw new Error(\n          withUsage(\n            `The \\`operator\\` must one of: \\`\"and\"\\`, \\`\"or\"\\` (got \"${operator}\").`\n          )\n        );\n      }\n\n      if (showMore === true && showMoreLimit <= limit) {\n        throw new Error(\n          withUsage('`showMoreLimit` should be greater than `limit`.')\n        );\n      }\n\n      const formatItems = ({\n        name: label,\n        escapedValue: value,\n        ...item\n      }: SearchResults.FacetValue): RefinementListItem => ({\n        ...item,\n        value,\n        label,\n        highlighted: label,\n      });\n\n      let lastResultsFromMainSearch: SearchResults;\n      let lastItemsFromMainSearch: RefinementListItem[] = [];\n      let hasExhaustiveItems = true;\n      let triggerRefine: RefinementListRenderState['refine'] | undefined;\n      let sendEvent: RefinementListRenderState['sendEvent'] | undefined;\n\n      let isShowingMore = false;\n      // Provide the same function to the `renderFn` so that way the user\n      // has to only bind it once when `isFirstRendering` for instance\n      let toggleShowMore = () => {};\n      function cachedToggleShowMore() {\n        toggleShowMore();\n      }\n\n      function createToggleShowMore(\n        renderOptions: RenderOptions,\n        widget: ThisWidget\n      ) {\n        return () => {\n          isShowingMore = !isShowingMore;\n          widget.render!(renderOptions);\n        };\n      }\n\n      function getLimit() {\n        return isShowingMore ? showMoreLimit : limit;\n      }\n\n      let searchForFacetValues: (\n        renderOptions: RenderOptions | InitOptions\n      ) => RefinementListRenderState['searchForItems'] = () => () => {};\n\n      const createSearchForFacetValues = function (\n        helper: AlgoliaSearchHelper,\n        widget: ThisWidget\n      ) {\n        return (renderOptions: RenderOptions | InitOptions) =>\n          (query: string) => {\n            const { instantSearchInstance, results: searchResults } =\n              renderOptions;\n            if (query === '' && lastItemsFromMainSearch) {\n              // render with previous data from the helper.\n              renderFn(\n                {\n                  ...widget.getWidgetRenderState({\n                    ...renderOptions,\n                    results: lastResultsFromMainSearch,\n                  }),\n                  instantSearchInstance,\n                },\n                false\n              );\n            } else {\n              const tags = {\n                highlightPreTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPreTag\n                  : TAG_REPLACEMENT.highlightPreTag,\n                highlightPostTag: escapeFacetValues\n                  ? TAG_PLACEHOLDER.highlightPostTag\n                  : TAG_REPLACEMENT.highlightPostTag,\n              };\n\n              helper\n                .searchForFacetValues(\n                  attribute,\n                  query,\n                  // We cap the `maxFacetHits` value to 100 because the Algolia API\n                  // doesn't support a greater number.\n                  // See https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits/\n                  Math.min(getLimit(), 100),\n                  tags\n                )\n                .then((results) => {\n                  const facetValues = escapeFacetValues\n                    ? escapeFacets(results.facetHits)\n                    : results.facetHits;\n\n                  const normalizedFacetValues = transformItems(\n                    facetValues.map(({ escapedValue, value, ...item }) => ({\n                      ...item,\n                      value: escapedValue,\n                      label: value,\n                    })),\n                    { results: searchResults }\n                  );\n\n                  renderFn(\n                    {\n                      ...widget.getWidgetRenderState({\n                        ...renderOptions,\n                        results: lastResultsFromMainSearch,\n                      }),\n                      items: normalizedFacetValues,\n                      canToggleShowMore: false,\n                      canRefine: true,\n                      isFromSearch: true,\n                      instantSearchInstance,\n                    },\n                    false\n                  );\n                });\n            }\n          };\n      };\n\n      return {\n        $$type: 'ais.refinementList' as const,\n\n        init(initOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            refinementList: {\n              ...renderState.refinementList,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState(renderOptions) {\n          const { results, state, createURL, instantSearchInstance, helper } =\n            renderOptions;\n          let items: RefinementListItem[] = [];\n          let facetValues: SearchResults.FacetValue[] | FacetHit[] = [];\n\n          if (!sendEvent || !triggerRefine || !searchForFacetValues) {\n            sendEvent = createSendEventForFacet({\n              instantSearchInstance,\n              helper,\n              attribute,\n              widgetType: this.$$type,\n            });\n\n            triggerRefine = (facetValue) => {\n              sendEvent!('click', facetValue);\n              helper.toggleFacetRefinement(attribute, facetValue).search();\n            };\n\n            searchForFacetValues = createSearchForFacetValues(helper, this);\n          }\n\n          if (results) {\n            const values = results.getFacetValues(attribute, {\n              sortBy,\n              facetOrdering: sortBy === DEFAULT_SORT,\n            });\n            facetValues = values && Array.isArray(values) ? values : [];\n            items = transformItems(\n              facetValues.slice(0, getLimit()).map(formatItems),\n              { results }\n            );\n\n            const maxValuesPerFacetConfig = state.maxValuesPerFacet;\n            const currentLimit = getLimit();\n            // If the limit is the max number of facet retrieved it is impossible to know\n            // if the facets are exhaustive. The only moment we are sure it is exhaustive\n            // is when it is strictly under the number requested unless we know that another\n            // widget has requested more values (maxValuesPerFacet > getLimit()).\n            // Because this is used for making the search of facets unable or not, it is important\n            // to be conservative here.\n            hasExhaustiveItems =\n              maxValuesPerFacetConfig! > currentLimit\n                ? facetValues.length <= currentLimit\n                : facetValues.length < currentLimit;\n\n            lastResultsFromMainSearch = results;\n            lastItemsFromMainSearch = items;\n\n            if (renderOptions.results) {\n              toggleShowMore = createToggleShowMore(renderOptions, this);\n            }\n          }\n\n          // Do not mistake searchForFacetValues and searchFacetValues which is the actual search\n          // function\n          const searchFacetValues =\n            searchForFacetValues && searchForFacetValues(renderOptions);\n\n          const canShowLess =\n            isShowingMore && lastItemsFromMainSearch.length > limit;\n          const canShowMore = showMore && !hasExhaustiveItems;\n\n          const canToggleShowMore = canShowLess || canShowMore;\n\n          return {\n            createURL: (facetValue) =>\n              createURL(\n                state.resetPage().toggleFacetRefinement(attribute, facetValue)\n              ),\n            items,\n            refine: triggerRefine,\n            searchForItems: searchFacetValues,\n            isFromSearch: false,\n            canRefine: items.length > 0,\n            widgetParams,\n            isShowingMore,\n            canToggleShowMore,\n            toggleShowMore: cachedToggleShowMore,\n            sendEvent,\n            hasExhaustiveItems,\n          };\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          const withoutMaxValuesPerFacet = state.setQueryParameter(\n            'maxValuesPerFacet',\n            undefined\n          );\n          if (operator === 'and') {\n            return withoutMaxValuesPerFacet.removeFacet(attribute);\n          }\n          return withoutMaxValuesPerFacet.removeDisjunctiveFacet(attribute);\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const values =\n            operator === 'or'\n              ? searchParameters.getDisjunctiveRefinements(attribute)\n              : searchParameters.getConjunctiveRefinements(attribute);\n\n          if (!values.length) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            refinementList: {\n              ...uiState.refinementList,\n              [attribute]: values,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          const isDisjunctive = operator === 'or';\n          const values =\n            uiState.refinementList && uiState.refinementList[attribute];\n\n          const withoutRefinements =\n            searchParameters.clearRefinements(attribute);\n          const withFacetConfiguration = isDisjunctive\n            ? withoutRefinements.addDisjunctiveFacet(attribute)\n            : withoutRefinements.addFacet(attribute);\n\n          const currentMaxValuesPerFacet =\n            withFacetConfiguration.maxValuesPerFacet || 0;\n\n          const nextMaxValuesPerFacet = Math.max(\n            currentMaxValuesPerFacet,\n            showMore ? showMoreLimit : limit\n          );\n\n          const withMaxValuesPerFacet =\n            withFacetConfiguration.setQueryParameter(\n              'maxValuesPerFacet',\n              nextMaxValuesPerFacet\n            );\n\n          if (!values) {\n            const key = isDisjunctive\n              ? 'disjunctiveFacetsRefinements'\n              : 'facetsRefinements';\n\n            return withMaxValuesPerFacet.setQueryParameters({\n              [key]: {\n                ...withMaxValuesPerFacet[key],\n                [attribute]: [],\n              },\n            });\n          }\n\n          return values.reduce(\n            (parameters, value) =>\n              isDisjunctive\n                ? parameters.addDisjunctiveFacetRefinement(attribute, value)\n                : parameters.addFacetRefinement(attribute, value),\n            withMaxValuesPerFacet\n          );\n        },\n      };\n    };\n  };\n\nexport default connectRefinementList;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'search-box',\n  connector: true,\n});\n\nexport type SearchBoxConnectorParams = {\n  /**\n   * A function that will be called every time\n   * a new value for the query is set. The first parameter is the query and the second is a\n   * function to actually trigger the search. The function takes the query as the parameter.\n   *\n   * This queryHook can be used to debounce the number of searches done from the searchBox.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\n/**\n * @typedef {Object} CustomSearchBoxWidgetParams\n * @property {function(string, function(string))} [queryHook = undefined] A function that will be called every time\n * a new value for the query is set. The first parameter is the query and the second is a\n * function to actually trigger the search. The function takes the query as the parameter.\n *\n * This queryHook can be used to debounce the number of searches done from the searchBox.\n */\n\nexport type SearchBoxRenderState = {\n  /**\n   * The query from the last search.\n   */\n  query: string;\n  /**\n   * Sets a new query and searches.\n   */\n  refine: (value: string) => void;\n  /**\n   * Remove the query and perform search.\n   */\n  clear: () => void;\n  /**\n   * `true` if the search results takes more than a certain time to come back\n   * from Algolia servers. This can be configured on the InstantSearch constructor with the attribute\n   * `stalledSearchDelay` which is 200ms, by default.\n   * @deprecated use `instantSearchInstance.status` instead\n   */\n  isSearchStalled: boolean;\n};\n\nexport type SearchBoxWidgetDescription = {\n  $$type: 'ais.searchBox';\n  renderState: SearchBoxRenderState;\n  indexRenderState: {\n    searchBox: WidgetRenderState<\n      SearchBoxRenderState,\n      SearchBoxConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type SearchBoxConnector = Connector<\n  SearchBoxWidgetDescription,\n  SearchBoxConnectorParams\n>;\n\nconst defaultQueryHook: SearchBoxConnectorParams['queryHook'] = (query, hook) =>\n  hook(query);\n\n/**\n * **SearchBox** connector provides the logic to build a widget that will let the user search for a query.\n *\n * The connector provides to the rendering: `refine()` to set the query. The behaviour of this function\n * may be impacted by the `queryHook` widget parameter.\n */\nconst connectSearchBox: SearchBoxConnector = function connectSearchBox(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { queryHook = defaultQueryHook } = widgetParams || {};\n\n    let _refine: SearchBoxRenderState['refine'];\n    let _clear: SearchBoxRenderState['clear'];\n\n    return {\n      $$type: 'ais.searchBox',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('query', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          searchBox: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ helper, searchMetadata, state }) {\n        if (!_refine) {\n          _refine = (query) => {\n            queryHook(query, (q) => helper.setQuery(q).search());\n          };\n\n          _clear = () => {\n            helper.setQuery('').search();\n          };\n        }\n\n        return {\n          query: state.query || '',\n          refine: _refine,\n          clear: _clear,\n          widgetParams,\n          isSearchStalled: searchMetadata.isSearchStalled,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectSearchBox;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  find,\n  warning,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'sort-by',\n  connector: true,\n});\n\n/**\n * The **SortBy** connector provides the logic to build a custom widget that will display a\n * list of indices. With Algolia, this is most commonly used for changing ranking strategy. This allows\n * a user to change how the hits are being sorted.\n */\n\nexport type SortByItem = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByConnectorParams = {\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByItem[];\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByRenderState = {\n  /**\n   * The initially selected index.\n   */\n  initialIndex?: string;\n  /**\n   * The currently selected index.\n   */\n  currentRefinement: string;\n  /**\n   * All the available indices\n   */\n  options: SortByItem[];\n  /**\n   * Switches indices and triggers a new search.\n   */\n  refine: (value: string) => void;\n  /**\n   * `true` if the last search contains no result.\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n  /**\n   * `true` if we can refine.\n   */\n  canRefine: boolean;\n};\n\nexport type SortByWidgetDescription = {\n  $$type: 'ais.sortBy';\n  renderState: SortByRenderState;\n  indexRenderState: {\n    sortBy: WidgetRenderState<SortByRenderState, SortByConnectorParams>;\n  };\n  indexUiState: {\n    sortBy: string;\n  };\n};\n\nexport type SortByConnector = Connector<\n  SortByWidgetDescription,\n  SortByConnectorParams\n>;\n\nconst connectSortBy: SortByConnector = function connectSortBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const connectorState: ConnectorState = {};\n\n  type ConnectorState = {\n    setIndex?(indexName: string): void;\n    initialIndex?: string;\n  };\n\n  return (widgetParams) => {\n    const {\n      items,\n      transformItems = ((x) => x) as NonNullable<\n        SortByConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!Array.isArray(items)) {\n      throw new Error(\n        withUsage('The `items` option expects an array of objects.')\n      );\n    }\n\n    return {\n      $$type: 'ais.sortBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        const widgetRenderState = this.getWidgetRenderState(initOptions);\n        const currentIndex = widgetRenderState.currentRefinement;\n        const isCurrentIndexInItems = find(\n          items,\n          (item) => item.value === currentIndex\n        );\n\n        warning(\n          isCurrentIndexInItems !== undefined,\n          `The index named \"${currentIndex}\" is not listed in the \\`items\\` of \\`sortBy\\`.`\n        );\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return connectorState.initialIndex\n          ? state.setIndex(connectorState.initialIndex)\n          : state;\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          sortBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper, state, parent }) {\n        if (!connectorState.initialIndex && parent) {\n          connectorState.initialIndex = parent.getIndexName();\n        }\n        if (!connectorState.setIndex) {\n          connectorState.setIndex = (indexName) => {\n            helper.setIndex(indexName).search();\n          };\n        }\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          currentRefinement: state.index,\n          options: transformItems(items, { results }),\n          refine: connectorState.setIndex,\n          hasNoResults,\n          canRefine: !hasNoResults && items.length > 0,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const currentIndex = searchParameters.index;\n\n        return {\n          ...uiState,\n          sortBy:\n            currentIndex !== connectorState.initialIndex\n              ? currentIndex\n              : undefined,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter(\n          'index',\n          uiState.sortBy ||\n            connectorState.initialIndex ||\n            searchParameters.index\n        );\n      },\n    };\n  };\n};\n\nexport default connectSortBy;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationLink,\n  createDocumentationMessageGenerator,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  InstantSearch,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\nimport type { InsightsEvent } from '../../middlewares';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'rating-menu',\n  connector: true,\n});\n\nconst $$type = 'ais.ratingMenu';\n\nconst MAX_VALUES_PER_FACET_API_LIMIT = 1000;\nconst STEP = 1;\n\ntype SendEvent = (...args: [InsightsEvent] | [string, string, string?]) => void;\n\ntype CreateSendEvent = (createSendEventArgs: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  getRefinedStar: () => number | number[] | undefined;\n  attribute: string;\n}) => SendEvent;\n\nconst createSendEvent: CreateSendEvent =\n  ({ instantSearchInstance, helper, getRefinedStar, attribute }) =>\n  (...args) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, facetValue, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click') {\n      return;\n    }\n    const isRefined = getRefinedStar() === Number(facetValue);\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: [`${attribute}>=${facetValue}`],\n        },\n        attribute,\n      });\n    }\n  };\n\ntype StarRatingItems = {\n  /**\n   * Name corresponding to the number of stars.\n   */\n  name: string;\n  /**\n   * Human-readable name corresponding to the number of stars.\n   */\n  label: string;\n  /**\n   * Number of stars as string.\n   */\n  value: string;\n  /**\n   * Count of matched results corresponding to the number of stars.\n   */\n  count: number;\n  /**\n   *  Array of length of maximum rating value with stars to display or not.\n   */\n  stars: boolean[];\n  /**\n   * Indicates if star rating refinement is applied.\n   */\n  isRefined: boolean;\n};\n\nexport type RatingMenuConnectorParams = {\n  /**\n   * Name of the attribute for faceting (eg. \"free_shipping\").\n   */\n  attribute: string;\n\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n};\n\nexport type RatingMenuRenderState = {\n  /**\n   * Possible star ratings the user can apply.\n   */\n  items: StarRatingItems[];\n\n  /**\n   * Creates an URL for the next state (takes the item value as parameter). Takes the value of an item as parameter.\n   */\n  createURL: CreateURL<string>;\n\n  /**\n   *  Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n\n  /**\n   * Selects a rating to filter the results (takes the filter value as parameter). Takes the value of an item as parameter.\n   */\n  refine: (value: string) => void;\n\n  /**\n   * `true` if the last search contains no result.\n   *\n   * @deprecated Use `canRefine` instead.\n   */\n  hasNoResults: boolean;\n\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEvent;\n};\n\nexport type RatingMenuWidgetDescription = {\n  $$type: 'ais.ratingMenu';\n  renderState: RatingMenuRenderState;\n  indexRenderState: {\n    ratingMenu: {\n      [attribute: string]: WidgetRenderState<\n        RatingMenuRenderState,\n        RatingMenuConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    ratingMenu: {\n      [attribute: string]: number;\n    };\n  };\n};\n\nexport type RatingMenuConnector = Connector<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n>;\n\n/**\n * **StarRating** connector provides the logic to build a custom widget that will let\n * the user refine search results based on ratings.\n *\n * The connector provides to the rendering: `refine()` to select a value and\n * `items` that are the values that can be selected. `refine` should be used\n * with `items.value`.\n */\nconst connectRatingMenu: RatingMenuConnector = function connectRatingMenu(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { attribute, max = 5 } = widgetParams || {};\n    let sendEvent: SendEvent;\n\n    if (!attribute) {\n      throw new Error(withUsage('The `attribute` option is required.'));\n    }\n\n    const getRefinedStar = (state: SearchParameters) => {\n      const values = state.getNumericRefinements(attribute);\n\n      if (!values['>=']?.length) {\n        return undefined;\n      }\n\n      return values['>='][0];\n    };\n\n    const getFacetsMaxDecimalPlaces = (\n      facetResults: SearchResults.FacetValue[]\n    ) => {\n      let maxDecimalPlaces = 0;\n      facetResults.forEach((facetResult) => {\n        const [, decimal = ''] = facetResult.name.split('.');\n        maxDecimalPlaces = Math.max(maxDecimalPlaces, decimal.length);\n      });\n      return maxDecimalPlaces;\n    };\n\n    const getFacetValuesWarningMessage = ({\n      maxDecimalPlaces,\n      maxFacets,\n      maxValuesPerFacet,\n    }: {\n      maxDecimalPlaces: number;\n      maxFacets: number;\n      maxValuesPerFacet: number;\n    }) => {\n      const maxDecimalPlacesInRange = Math.max(\n        0,\n        Math.floor(Math.log10(MAX_VALUES_PER_FACET_API_LIMIT / max))\n      );\n      const maxFacetsInRange = Math.min(\n        MAX_VALUES_PER_FACET_API_LIMIT,\n        Math.pow(10, maxDecimalPlacesInRange) * max\n      );\n\n      const solutions: string[] = [];\n\n      if (maxFacets > MAX_VALUES_PER_FACET_API_LIMIT) {\n        solutions.push(\n          `- Update your records to lower the precision of the values in the \"${attribute}\" attribute (for example: ${(5.123456789).toPrecision(\n            maxDecimalPlaces + 1\n          )} to ${(5.123456789).toPrecision(maxDecimalPlacesInRange + 1)})`\n        );\n      }\n      if (maxValuesPerFacet < maxFacetsInRange) {\n        solutions.push(\n          `- Increase the maximum number of facet values to ${maxFacetsInRange} using the \"configure\" widget ${createDocumentationLink(\n            { name: 'configure' }\n          )} and the \"maxValuesPerFacet\" parameter https://www.algolia.com/doc/api-reference/api-parameters/maxValuesPerFacet/`\n        );\n      }\n\n      return `The ${attribute} attribute can have ${maxFacets} different values (0 to ${max} with a maximum of ${maxDecimalPlaces} decimals = ${maxFacets}) but you retrieved only ${maxValuesPerFacet} facet values. Therefore the number of results that match the refinements can be incorrect.\n    ${\n      solutions.length\n        ? `To resolve this problem you can:\\n${solutions.join('\\n')}`\n        : ``\n    }`;\n    };\n\n    function getRefinedState(state: SearchParameters, facetValue: string) {\n      const isRefined = getRefinedStar(state) === Number(facetValue);\n\n      const emptyState = state.resetPage().removeNumericRefinement(attribute);\n\n      if (!isRefined) {\n        return emptyState\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', Number(facetValue));\n      }\n      return emptyState;\n    }\n\n    const toggleRefinement = (\n      helper: AlgoliaSearchHelper,\n      facetValue: string\n    ) => {\n      sendEvent('click', facetValue);\n      helper.setState(getRefinedState(helper.state, facetValue)).search();\n    };\n\n    type ConnectorState = {\n      toggleRefinementFactory: (\n        helper: AlgoliaSearchHelper\n      ) => (facetValue: string) => void;\n      createURLFactory: ({\n        state,\n        createURL,\n      }: {\n        state: SearchParameters;\n        createURL: (createURLState: SearchParameters) => string;\n      }) => (value: string) => string;\n    };\n\n    const connectorState: ConnectorState = {\n      toggleRefinementFactory: (helper) => toggleRefinement.bind(null, helper),\n      createURLFactory:\n        ({ state, createURL }) =>\n        (value) =>\n          createURL(getRefinedState(state, value)),\n    };\n\n    return {\n      $$type,\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          ratingMenu: {\n            ...renderState.ratingMenu,\n            [attribute]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        results,\n        state,\n        instantSearchInstance,\n        createURL,\n      }) {\n        let facetValues: StarRatingItems[] = [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEvent({\n            instantSearchInstance,\n            helper,\n            getRefinedStar: () => getRefinedStar(helper.state),\n            attribute,\n          });\n        }\n\n        let refinementIsApplied = false;\n        let totalCount = 0;\n\n        const facetResults = results?.getFacetValues(attribute, {}) as\n          | SearchResults.FacetValue[]\n          | undefined;\n\n        if (results && facetResults) {\n          const maxValuesPerFacet = facetResults.length;\n          const maxDecimalPlaces = getFacetsMaxDecimalPlaces(facetResults);\n          const maxFacets = Math.pow(10, maxDecimalPlaces) * max;\n\n          warning(\n            maxFacets <= maxValuesPerFacet || Boolean(results.__isArtificial),\n            getFacetValuesWarningMessage({\n              maxDecimalPlaces,\n              maxFacets,\n              maxValuesPerFacet,\n            })\n          );\n\n          const refinedStar = getRefinedStar(state);\n\n          for (let star = STEP; star < max; star += STEP) {\n            const isRefined = refinedStar === star;\n            refinementIsApplied = refinementIsApplied || isRefined;\n\n            const count = facetResults\n              .filter((f) => Number(f.name) >= star && Number(f.name) <= max)\n              .map((f) => f.count)\n              .reduce((sum, current) => sum + current, 0);\n            totalCount += count;\n\n            if (refinedStar && !isRefined && count === 0) {\n              // skip count==0 when at least 1 refinement is enabled\n              // eslint-disable-next-line no-continue\n              continue;\n            }\n\n            const stars = [...new Array(Math.floor(max / STEP))].map(\n              (_v, i) => i * STEP < star\n            );\n\n            facetValues.push({\n              stars,\n              name: String(star),\n              label: String(star),\n              value: String(star),\n              count,\n              isRefined,\n            });\n          }\n        }\n        facetValues = facetValues.reverse();\n\n        const hasNoResults = results ? results.nbHits === 0 : true;\n\n        return {\n          items: facetValues,\n          hasNoResults,\n          canRefine: (!hasNoResults || refinementIsApplied) && totalCount > 0,\n          refine: connectorState.toggleRefinementFactory(helper),\n          sendEvent,\n          createURL: connectorState.createURLFactory({ state, createURL }),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.removeNumericRefinement(attribute);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const value = getRefinedStar(searchParameters);\n\n        if (typeof value !== 'number') {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          ratingMenu: {\n            ...uiState.ratingMenu,\n            [attribute]: value,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const value = uiState.ratingMenu && uiState.ratingMenu[attribute];\n\n        const withoutRefinements = searchParameters.clearRefinements(attribute);\n        const withDisjunctiveFacet =\n          withoutRefinements.addDisjunctiveFacet(attribute);\n\n        if (!value) {\n          return withDisjunctiveFacet.setQueryParameters({\n            numericRefinements: {\n              ...withDisjunctiveFacet.numericRefinements,\n              [attribute]: {},\n            },\n          });\n        }\n\n        return withDisjunctiveFacet\n          .addNumericRefinement(attribute, '<=', max)\n          .addNumericRefinement(attribute, '>=', value);\n      },\n    };\n  };\n};\n\nexport default connectRatingMenu;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'stats',\n  connector: true,\n});\n\n/**\n * **Stats** connector provides the logic to build a custom widget that will displays\n * search statistics (hits number and processing time).\n */\n\nexport type StatsRenderState = {\n  /**\n   * The maximum number of hits per page returned by Algolia.\n   */\n  hitsPerPage?: number;\n  /**\n   * The number of hits in the result set.\n   */\n  nbHits: number;\n  /**\n   * The number of sorted hits in the result set (when using Relevant sort).\n   */\n  nbSortedHits?: number;\n  /**\n   * Indicates whether the index is currently using Relevant sort and is displaying only sorted hits.\n   */\n  areHitsSorted: boolean;\n  /**\n   * The number of pages computed for the result set.\n   */\n  nbPages: number;\n  /**\n   * The current page.\n   */\n  page: number;\n  /**\n   * The time taken to compute the results inside the Algolia engine.\n   */\n  processingTimeMS: number;\n  /**\n   * The query used for the current search.\n   */\n  query: string;\n};\n\nexport type StatsConnectorParams = Record<string, unknown>;\n\nexport type StatsWidgetDescription = {\n  $$type: 'ais.stats';\n  renderState: StatsRenderState;\n  indexRenderState: {\n    stats: WidgetRenderState<StatsRenderState, StatsConnectorParams>;\n  };\n};\n\nexport type StatsConnector = Connector<\n  StatsWidgetDescription,\n  StatsConnectorParams\n>;\n\nconst connectStats: StatsConnector = function connectStats(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => ({\n    $$type: 'ais.stats',\n\n    init(initOptions) {\n      const { instantSearchInstance } = initOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(initOptions),\n          instantSearchInstance,\n        },\n        true\n      );\n    },\n\n    render(renderOptions) {\n      const { instantSearchInstance } = renderOptions;\n\n      renderFn(\n        {\n          ...this.getWidgetRenderState(renderOptions),\n          instantSearchInstance,\n        },\n        false\n      );\n    },\n\n    dispose() {\n      unmountFn();\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        stats: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState({ results, state }) {\n      if (!results) {\n        return {\n          hitsPerPage: state.hitsPerPage,\n          nbHits: 0,\n          nbSortedHits: undefined,\n          areHitsSorted: false,\n          nbPages: 0,\n          page: state.page || 0,\n          processingTimeMS: -1,\n          query: state.query || '',\n          widgetParams,\n        };\n      }\n\n      return {\n        hitsPerPage: results.hitsPerPage,\n        nbHits: results.nbHits,\n        nbSortedHits: results.nbSortedHits,\n        areHitsSorted:\n          typeof results.appliedRelevancyStrictness !== 'undefined' &&\n          results.appliedRelevancyStrictness > 0 &&\n          results.nbSortedHits !== results.nbHits,\n        nbPages: results.nbPages,\n        page: results.page,\n        processingTimeMS: results.processingTimeMS,\n        query: results.query,\n        widgetParams,\n      };\n    },\n  });\n};\n\nexport default connectStats;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n  SearchResults,\n} from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  escapeFacetValue,\n  createDocumentationMessageGenerator,\n  find,\n  noop,\n  toArray,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  CreateURL,\n  InstantSearch,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n  connector: true,\n});\n\nconst $$type = 'ais.toggleRefinement';\n\ntype BuiltInSendEventForToggle = (\n  eventType: string,\n  isRefined: boolean,\n  eventName?: string\n) => void;\ntype CustomSendEventForToggle = (customPayload: any) => void;\n\nexport type SendEventForToggle = BuiltInSendEventForToggle &\n  CustomSendEventForToggle;\n\nconst createSendEvent = ({\n  instantSearchInstance,\n  helper,\n  attribute,\n  on,\n}: {\n  instantSearchInstance: InstantSearch;\n  helper: AlgoliaSearchHelper;\n  attribute: string;\n  on: string[] | undefined;\n}) => {\n  const sendEventForToggle: SendEventForToggle = (...args: any[]) => {\n    if (args.length === 1) {\n      instantSearchInstance.sendEventToInsights(args[0]);\n      return;\n    }\n    const [eventType, isRefined, eventName = 'Filter Applied'] = args;\n    if (eventType !== 'click' || on === undefined) {\n      return;\n    }\n\n    // only send an event when the refinement gets applied,\n    // not when it gets removed\n    if (!isRefined) {\n      instantSearchInstance.sendEventToInsights({\n        insightsMethod: 'clickedFilters',\n        widgetType: $$type,\n        eventType,\n        payload: {\n          eventName,\n          index: helper.getIndex(),\n          filters: on.map((value) => `${attribute}:${value}`),\n        },\n        attribute,\n      });\n    }\n  };\n  return sendEventForToggle;\n};\n\nexport type ToggleRefinementValue = {\n  /**\n   * Whether this option is enabled.\n   */\n  isRefined: boolean;\n  /**\n   * Number of result if this option is toggled.\n   */\n  count: number | null;\n};\n\nexport type ToggleRefinementConnectorParams = {\n  /**\n   * Name of the attribute for faceting (e.g., \"free_shipping\").\n   */\n  attribute: string;\n  /**\n   * Value to filter on when toggled.\n   * @default \"true\"\n   */\n  on?: FacetValue | FacetValue[];\n  /**\n   * Value to filter on when not toggled.\n   */\n  off?: FacetValue | FacetValue[];\n};\n\ntype FacetValue = string | boolean | number;\n\nexport type ToggleRefinementRenderState = {\n  /** The current toggle value */\n  value: {\n    /**\n     * The attribute name of this toggle.\n     */\n    name: string;\n    /**\n     * Whether the current option is \"on\" (true) or \"off\" (false)\n     */\n    isRefined: boolean;\n    /**\n     * Number of results if this option is toggled.\n     */\n    count: number | null;\n    /**\n     * Information about the \"on\" toggle.\n     */\n    onFacetValue: ToggleRefinementValue;\n    /**\n     * Information about the \"off\" toggle.\n     */\n    offFacetValue: ToggleRefinementValue;\n  };\n  /**\n   * Creates an URL for the next state.\n   */\n  createURL: CreateURL<string>;\n  /**\n   * Send a \"Facet Clicked\" Insights event.\n   */\n  sendEvent: SendEventForToggle;\n  /**\n   * Indicates if search state can be refined.\n   */\n  canRefine: boolean;\n  /**\n   * Updates to the next state by applying the toggle refinement.\n   */\n  refine: (value?: { isRefined: boolean }) => void;\n};\n\nexport type ToggleRefinementWidgetDescription = {\n  $$type: 'ais.toggleRefinement';\n  renderState: ToggleRefinementRenderState;\n  indexRenderState: {\n    toggleRefinement: {\n      [attribute: string]: WidgetRenderState<\n        ToggleRefinementRenderState,\n        ToggleRefinementConnectorParams\n      >;\n    };\n  };\n  indexUiState: {\n    toggle: {\n      [attribute: string]: boolean;\n    };\n  };\n};\n\nexport type ToggleRefinementConnector = Connector<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n>;\n\n/**\n * **Toggle** connector provides the logic to build a custom widget that will provide\n * an on/off filtering feature based on an attribute value or values.\n *\n * Two modes are implemented in the custom widget:\n *  - with or without the value filtered\n *  - switch between two values.\n */\nconst connectToggleRefinement: ToggleRefinementConnector =\n  function connectToggleRefinement(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const { attribute, on: userOn = true, off: userOff } = widgetParams || {};\n\n      if (!attribute) {\n        throw new Error(withUsage('The `attribute` option is required.'));\n      }\n\n      const hasAnOffValue = userOff !== undefined;\n      // even though facet values can be numbers and boolean,\n      // the helper methods only accept string in the type\n      const on = toArray(userOn).map(escapeFacetValue) as string[];\n      const off = hasAnOffValue\n        ? (toArray(userOff).map(escapeFacetValue) as string[])\n        : undefined;\n\n      let sendEvent: SendEventForToggle;\n\n      const toggleRefinementFactory =\n        (helper: AlgoliaSearchHelper) =>\n        (\n          {\n            isRefined,\n          }: {\n            isRefined: boolean;\n          } = { isRefined: false }\n        ) => {\n          if (!isRefined) {\n            sendEvent('click', isRefined);\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.removeDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n\n            on.forEach((v) =>\n              helper.addDisjunctiveFacetRefinement(attribute, v)\n            );\n          } else {\n            on.forEach((v) =>\n              helper.removeDisjunctiveFacetRefinement(attribute, v)\n            );\n\n            if (hasAnOffValue) {\n              off!.forEach((v) =>\n                helper.addDisjunctiveFacetRefinement(attribute, v)\n              );\n            }\n          }\n\n          helper.search();\n        };\n\n      const connectorState = {\n        createURLFactory:\n          (\n            isRefined: boolean,\n            {\n              state,\n              createURL,\n            }: {\n              state: SearchParameters;\n              createURL(parameters: SearchParameters): string;\n            }\n          ) =>\n          () => {\n            state = state.resetPage();\n\n            const valuesToRemove = isRefined ? on : off;\n            if (valuesToRemove) {\n              valuesToRemove.forEach((v) => {\n                state = state.removeDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            const valuesToAdd = isRefined ? off : on;\n            if (valuesToAdd) {\n              valuesToAdd.forEach((v) => {\n                state = state.addDisjunctiveFacetRefinement(attribute, v);\n              });\n            }\n\n            return createURL(state);\n          },\n      };\n\n      return {\n        $$type,\n\n        init(initOptions) {\n          const { instantSearchInstance } = initOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance,\n            },\n            true\n          );\n        },\n\n        render(renderOptions) {\n          const { instantSearchInstance } = renderOptions;\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance,\n            },\n            false\n          );\n        },\n\n        dispose({ state }) {\n          unmountFn();\n\n          return state.removeDisjunctiveFacet(attribute);\n        },\n\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            toggleRefinement: {\n              ...renderState.toggleRefinement,\n              [attribute]: this.getWidgetRenderState(renderOptions),\n            },\n          };\n        },\n\n        getWidgetRenderState({\n          state,\n          helper,\n          results,\n          createURL,\n          instantSearchInstance,\n        }) {\n          const isRefined = results\n            ? on.every((v) => state.isDisjunctiveFacetRefined(attribute, v))\n            : on.every((v) => state.isDisjunctiveFacetRefined(attribute, v));\n\n          let onFacetValue: ToggleRefinementValue = {\n            isRefined,\n            count: 0,\n          };\n\n          let offFacetValue: ToggleRefinementValue = {\n            isRefined: hasAnOffValue && !isRefined,\n            count: 0,\n          };\n\n          if (results) {\n            const offValue = toArray(off || false);\n            const allFacetValues = (results.getFacetValues(attribute, {}) ||\n              []) as SearchResults.FacetValue[];\n\n            const onData = on\n              .map((v) =>\n                find(\n                  allFacetValues,\n                  ({ escapedValue }) =>\n                    escapedValue === escapeFacetValue(String(v))\n                )\n              )\n              .filter((v): v is SearchResults.FacetValue => v !== undefined);\n\n            const offData = hasAnOffValue\n              ? offValue\n                  .map((v) =>\n                    find(\n                      allFacetValues,\n                      ({ escapedValue }) =>\n                        escapedValue === escapeFacetValue(String(v))\n                    )\n                  )\n                  .filter((v): v is SearchResults.FacetValue => v !== undefined)\n              : [];\n\n            onFacetValue = {\n              isRefined: onData.length\n                ? onData.every((v) => v.isRefined)\n                : false,\n              count: onData.reduce((acc, v) => acc + v.count, 0) || null,\n            };\n\n            offFacetValue = {\n              isRefined: offData.length\n                ? offData.every((v) => v.isRefined)\n                : false,\n              count:\n                offData.reduce((acc, v) => acc + v.count, 0) ||\n                allFacetValues.reduce((total, { count }) => total + count, 0),\n            };\n          }\n\n          if (!sendEvent) {\n            sendEvent = createSendEvent({\n              instantSearchInstance,\n              attribute,\n              on,\n              helper,\n            });\n          }\n          const nextRefinement = isRefined ? offFacetValue : onFacetValue;\n\n          return {\n            value: {\n              name: attribute,\n              isRefined,\n              count: results ? nextRefinement.count : null,\n              onFacetValue,\n              offFacetValue,\n            },\n            createURL: connectorState.createURLFactory(isRefined, {\n              state,\n              createURL,\n            }),\n            sendEvent,\n            canRefine: Boolean(results ? nextRefinement.count : null),\n            refine: toggleRefinementFactory(helper),\n            widgetParams,\n          };\n        },\n\n        getWidgetUiState(uiState, { searchParameters }) {\n          const isRefined =\n            on &&\n            on.every((v) =>\n              searchParameters.isDisjunctiveFacetRefined(attribute, v)\n            );\n\n          if (!isRefined) {\n            return uiState;\n          }\n\n          return {\n            ...uiState,\n            toggle: {\n              ...uiState.toggle,\n              [attribute]: isRefined,\n            },\n          };\n        },\n\n        getWidgetSearchParameters(searchParameters, { uiState }) {\n          let withFacetConfiguration = searchParameters\n            .clearRefinements(attribute)\n            .addDisjunctiveFacet(attribute);\n\n          const isRefined = Boolean(\n            uiState.toggle && uiState.toggle[attribute]\n          );\n\n          if (isRefined) {\n            if (on) {\n              on.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n\n            return withFacetConfiguration;\n          }\n\n          // It's not refined with an `off` value\n          if (hasAnOffValue) {\n            if (off) {\n              off.forEach((v) => {\n                withFacetConfiguration =\n                  withFacetConfiguration.addDisjunctiveFacetRefinement(\n                    attribute,\n                    v\n                  );\n              });\n            }\n            return withFacetConfiguration;\n          }\n\n          // It's not refined without an `off` value\n          return withFacetConfiguration.setQueryParameters({\n            disjunctiveFacetsRefinements: {\n              ...searchParameters.disjunctiveFacetsRefinements,\n              [attribute]: [],\n            },\n          });\n        },\n      };\n    };\n  };\n\nexport default connectToggleRefinement;\n","import {\n  checkRendering,\n  warning,\n  createDocumentationMessageGenerator,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport type {\n  Connector,\n  TransformItems,\n  CreateURL,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'breadcrumb',\n  connector: true,\n});\n\nexport type BreadcrumbConnectorParamsItem = {\n  /**\n   * Label of the category or subcategory.\n   */\n  label: string;\n\n  /**\n   * Value of breadcrumb item.\n   */\n  value: string | null;\n};\n\nexport type BreadcrumbConnectorParams = {\n  /**\n   * Attributes to use to generate the hierarchy of the breadcrumb.\n   */\n  attributes: string[];\n\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<BreadcrumbConnectorParamsItem>;\n\n  /**\n   * The level separator used in the records.\n   *\n   * @default '>'\n   */\n  separator?: string;\n};\n\nexport type BreadcrumbRenderState = {\n  /**\n   * Creates the URL for a single item name in the list.\n   */\n  createURL: CreateURL<BreadcrumbConnectorParamsItem['value']>;\n\n  /**\n   * Array of objects defining the different values and labels.\n   */\n  items: BreadcrumbConnectorParamsItem[];\n\n  /**\n   * Sets the path of the hierarchical filter and triggers a new search.\n   */\n  refine: (value: BreadcrumbConnectorParamsItem['value']) => void;\n\n  /**\n   * True if refinement can be applied.\n   */\n  canRefine: boolean;\n};\n\nexport type BreadcrumbWidgetDescription = {\n  $$type: 'ais.breadcrumb';\n  renderState: BreadcrumbRenderState;\n  indexRenderState: {\n    breadcrumb: {\n      [rootAttribute: string]: WidgetRenderState<\n        BreadcrumbRenderState,\n        BreadcrumbConnectorParams\n      >;\n    };\n  };\n};\n\nexport type BreadcrumbConnector = Connector<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n>;\n\nconst connectBreadcrumb: BreadcrumbConnector = function connectBreadcrumb(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  type ConnectorState = {\n    refine?: BreadcrumbRenderState['refine'];\n    createURL?: BreadcrumbRenderState['createURL'];\n  };\n\n  const connectorState: ConnectorState = {};\n\n  return (widgetParams) => {\n    const {\n      attributes,\n      separator = ' > ',\n      rootPath = null,\n      transformItems = ((items) => items) as NonNullable<\n        BreadcrumbConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    if (!attributes || !Array.isArray(attributes) || attributes.length === 0) {\n      throw new Error(\n        withUsage('The `attributes` option expects an array of strings.')\n      );\n    }\n\n    const [hierarchicalFacetName] = attributes;\n\n    function getRefinedState(\n      state: SearchParameters,\n      facetValue: string | null\n    ) {\n      if (!facetValue) {\n        const breadcrumb = state.getHierarchicalFacetBreadcrumb(\n          hierarchicalFacetName\n        );\n        if (breadcrumb.length === 0) {\n          return state;\n        } else {\n          return state\n            .resetPage()\n            .toggleFacetRefinement(hierarchicalFacetName, breadcrumb[0]);\n        }\n      }\n      return state\n        .resetPage()\n        .toggleFacetRefinement(hierarchicalFacetName, facetValue);\n    }\n\n    return {\n      $$type: 'ais.breadcrumb',\n\n      init(initOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose() {\n        unmountFn();\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          breadcrumb: {\n            ...renderState.breadcrumb,\n            [hierarchicalFacetName]: this.getWidgetRenderState(renderOptions),\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper, createURL, results, state }) {\n        function getItems() {\n          // The hierarchicalFacets condition is required for flavors\n          // that render immediately with empty results, without relying\n          // on init() (like React InstantSearch Hooks).\n          if (!results || state.hierarchicalFacets.length === 0) {\n            return [];\n          }\n\n          const [{ name: facetName }] = state.hierarchicalFacets;\n\n          const facetValues = results.getFacetValues(\n            facetName,\n            {}\n          ) as SearchResults.HierarchicalFacet;\n          const data = Array.isArray(facetValues.data) ? facetValues.data : [];\n          const items = transformItems(shiftItemsValues(prepareItems(data)), {\n            results,\n          });\n\n          return items;\n        }\n\n        const items = getItems();\n\n        if (!connectorState.createURL) {\n          connectorState.createURL = (facetValue) => {\n            return createURL(getRefinedState(helper.state, facetValue));\n          };\n        }\n\n        if (!connectorState.refine) {\n          connectorState.refine = (facetValue) => {\n            helper.setState(getRefinedState(helper.state, facetValue)).search();\n          };\n        }\n\n        return {\n          canRefine: items.length > 0,\n          createURL: connectorState.createURL,\n          items,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters) {\n        if (searchParameters.isHierarchicalFacet(hierarchicalFacetName)) {\n          const facet = searchParameters.getHierarchicalFacetByName(\n            hierarchicalFacetName\n          );\n\n          warning(\n            isEqual(facet.attributes, attributes) &&\n              facet.separator === separator &&\n              facet.rootPath === rootPath,\n            'Using Breadcrumb and HierarchicalMenu on the same facet with different options overrides the configuration of the HierarchicalMenu.'\n          );\n\n          return searchParameters;\n        }\n\n        return searchParameters.addHierarchicalFacet({\n          name: hierarchicalFacetName,\n          attributes,\n          separator,\n          rootPath,\n        });\n      },\n    };\n  };\n};\n\nfunction prepareItems(data: SearchResults.HierarchicalFacet[]) {\n  return data.reduce<BreadcrumbConnectorParamsItem[]>((result, currentItem) => {\n    if (currentItem.isRefined) {\n      result.push({\n        label: currentItem.name,\n        value: currentItem.escapedValue,\n      });\n      if (Array.isArray(currentItem.data)) {\n        result = result.concat(prepareItems(currentItem.data));\n      }\n    }\n    return result;\n  }, []);\n}\n\nfunction shiftItemsValues(array: BreadcrumbConnectorParamsItem[]) {\n  return array.map((x, idx) => ({\n    label: x.label,\n    value: idx + 1 === array.length ? null : array[idx + 1].value,\n  }));\n}\n\nexport default connectBreadcrumb;\n","import type {\n  AlgoliaSearchHelper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type { SendEventForHits } from '../../lib/utils';\nimport {\n  checkRendering,\n  aroundLatLngToPosition,\n  insideBoundingBoxToBoundingBox,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n} from '../../lib/utils';\nimport type {\n  BaseHit,\n  Connector,\n  GeoLoc,\n  Hit,\n  InitOptions,\n  RenderOptions,\n  TransformItems,\n  WidgetRenderState,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'geo-search',\n  connector: true,\n});\n\n// in this connector, we assume insideBoundingBox is only a string,\n// even though in the helper it's defined as number[][] alone.\n// This can be done, since the connector assumes \"control\" of the parameter\nfunction getBoundingBoxAsString(state: SearchParameters) {\n  return (state.insideBoundingBox as unknown as string) || '';\n}\nfunction setBoundingBoxAsString(state: SearchParameters, value: string) {\n  return state.setQueryParameter(\n    'insideBoundingBox',\n    value as unknown as number[][]\n  );\n}\n\nexport type GeoHit<THit extends BaseHit = Record<string, any>> = Hit<THit> &\n  Required<Pick<Hit, '_geoloc'>>;\n\ntype Bounds = {\n  /**\n   * The top right corner of the map view.\n   */\n  northEast: GeoLoc;\n  /**\n   * The bottom left corner of the map view.\n   */\n  southWest: GeoLoc;\n};\n\nexport type GeoSearchRenderState<THit extends BaseHit = Record<string, any>> = {\n  /**\n   * Reset the current bounding box refinement.\n   */\n  clearMapRefinement(): void;\n  /**\n   * The current bounding box of the search.\n   */\n  currentRefinement?: Bounds;\n  /**\n   * Return true if the map has move since the last refinement.\n   */\n  hasMapMoveSinceLastRefine(): boolean;\n  /**\n   * Return true if the current refinement is set with the map bounds.\n   */\n  isRefinedWithMap(): boolean;\n  /**\n   * Return true if the user is able to refine on map move.\n   */\n  isRefineOnMapMove(): boolean;\n  /**\n   * The matched hits from Algolia API.\n   */\n  items: Array<GeoHit<THit>>;\n  /**\n   * The current position of the search.\n   */\n  position?: GeoLoc;\n  /**\n   * Sets a bounding box to filter the results from the given map bounds.\n   */\n  refine(bounds: Bounds): void;\n  /**\n   * Send event to insights middleware\n   */\n  sendEvent: SendEventForHits;\n  /**\n   * Set the fact that the map has moved since the last refinement, should be\n   * called on each map move. The call to the function triggers a new rendering\n   * only when the value change.\n   */\n  setMapMoveSinceLastRefine(): void;\n  /**\n   * Toggle the fact that the user is able to refine on map move.\n   */\n  toggleRefineOnMapMove(): void;\n};\n\nexport type GeoSearchConnectorParams<\n  THit extends BaseHit = Record<string, any>\n> = {\n  /**\n   * If true, refine will be triggered as you move the map.\n   * @default true\n   */\n  enableRefineOnMapMove?: boolean;\n  /**\n   * Function to transform the items passed to the templates.\n   * @default items => items\n   */\n  transformItems?: TransformItems<GeoHit<THit>>;\n};\n\nconst $$type = 'ais.geoSearch';\n\nexport type GeoSearchWidgetDescription<\n  THit extends BaseHit = Record<string, any>\n> = {\n  $$type: 'ais.geoSearch';\n  renderState: GeoSearchRenderState<THit>;\n  indexRenderState: {\n    geoSearch: WidgetRenderState<\n      GeoSearchRenderState<THit>,\n      GeoSearchConnectorParams<THit>\n    >;\n  };\n  indexUiState: {\n    geoSearch: {\n      /**\n       * The rectangular area in geo coordinates.\n       * The rectangle is defined by two diagonally opposite points,\n       * hence by 4 floats separated by commas.\n       *\n       * @example '47.3165,4.9665,47.3424,5.0201'\n       */\n      boundingBox: string;\n    };\n  };\n};\n\nexport type GeoSearchConnector<THit extends BaseHit = Record<string, any>> =\n  Connector<GeoSearchWidgetDescription<THit>, GeoSearchConnectorParams<THit>>;\n\n/**\n * The **GeoSearch** connector provides the logic to build a widget that will display the results on a map. It also provides a way to search for results based on their position. The connector provides functions to manage the search experience (search on map interaction or control the interaction for example).\n *\n * @requirements\n *\n * Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n */\nconst connectGeoSearch: GeoSearchConnector = (renderFn, unmountFn = noop) => {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      enableRefineOnMapMove = true,\n      transformItems = ((items) => items) as NonNullable<\n        GeoSearchConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    const widgetState = {\n      isRefineOnMapMove: enableRefineOnMapMove,\n      // @MAJOR hasMapMoveSinceLastRefine -> hasMapMovedSinceLastRefine\n      hasMapMoveSinceLastRefine: false,\n      lastRefinePosition: '',\n      lastRefineBoundingBox: '',\n      internalToggleRefineOnMapMove: noop,\n      internalSetMapMoveSinceLastRefine: noop,\n    };\n\n    const getPositionFromState = (state: SearchParameters) =>\n      state.aroundLatLng\n        ? aroundLatLngToPosition(state.aroundLatLng)\n        : undefined;\n\n    const getCurrentRefinementFromState = (state: SearchParameters) =>\n      state.insideBoundingBox &&\n      insideBoundingBoxToBoundingBox(state.insideBoundingBox);\n\n    const refine =\n      (helper: AlgoliaSearchHelper) =>\n      ({ northEast: ne, southWest: sw }: Bounds) => {\n        const boundingBox = [ne.lat, ne.lng, sw.lat, sw.lng].join();\n\n        helper\n          .setState(\n            setBoundingBoxAsString(helper.state, boundingBox).resetPage()\n          )\n          .search();\n\n        widgetState.hasMapMoveSinceLastRefine = false;\n        widgetState.lastRefineBoundingBox = boundingBox;\n      };\n\n    const clearMapRefinement = (helper: AlgoliaSearchHelper) => () => {\n      helper.setQueryParameter('insideBoundingBox', undefined).search();\n    };\n\n    const isRefinedWithMap = (state: SearchParameters) => () =>\n      Boolean(state.insideBoundingBox);\n\n    const toggleRefineOnMapMove = () =>\n      widgetState.internalToggleRefineOnMapMove();\n    const createInternalToggleRefinementOnMapMove =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        widgetState.isRefineOnMapMove = !widgetState.isRefineOnMapMove;\n\n        render(renderOptions);\n      };\n\n    const isRefineOnMapMove = () => widgetState.isRefineOnMapMove;\n\n    const setMapMoveSinceLastRefine = () =>\n      widgetState.internalSetMapMoveSinceLastRefine();\n    const createInternalSetMapMoveSinceLastRefine =\n      <TRenderOptions extends RenderOptions | InitOptions>(\n        renderOptions: TRenderOptions,\n        // false positive eslint because of generics\n        // eslint-disable-next-line no-shadow\n        render: (renderOptions: TRenderOptions) => void\n      ) =>\n      () => {\n        const shouldTriggerRender =\n          widgetState.hasMapMoveSinceLastRefine !== true;\n\n        widgetState.hasMapMoveSinceLastRefine = true;\n\n        if (shouldTriggerRender) {\n          render(renderOptions);\n        }\n      };\n\n    const hasMapMoveSinceLastRefine = () =>\n      widgetState.hasMapMoveSinceLastRefine;\n\n    let sendEvent: SendEventForHits;\n\n    return {\n      $$type,\n\n      init(initArgs) {\n        const { instantSearchInstance } = initArgs;\n        const isFirstRendering = true;\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(initArgs, noop);\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(initArgs, noop);\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initArgs),\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      render(renderArgs) {\n        const { helper, instantSearchInstance } = renderArgs;\n        const isFirstRendering = false;\n        // We don't use the state provided by the render function because we need\n        // to be sure that the state is the latest one for the following condition\n        const state = helper.state;\n\n        const positionChangedSinceLastRefine =\n          Boolean(state.aroundLatLng) &&\n          Boolean(widgetState.lastRefinePosition) &&\n          state.aroundLatLng !== widgetState.lastRefinePosition;\n\n        const boundingBoxChangedSinceLastRefine =\n          !state.insideBoundingBox &&\n          Boolean(widgetState.lastRefineBoundingBox) &&\n          state.insideBoundingBox !== widgetState.lastRefineBoundingBox;\n\n        if (\n          positionChangedSinceLastRefine ||\n          boundingBoxChangedSinceLastRefine\n        ) {\n          widgetState.hasMapMoveSinceLastRefine = false;\n        }\n\n        widgetState.lastRefinePosition = state.aroundLatLng || '';\n\n        widgetState.lastRefineBoundingBox = getBoundingBoxAsString(state);\n\n        widgetState.internalToggleRefineOnMapMove =\n          createInternalToggleRefinementOnMapMove(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        widgetState.internalSetMapMoveSinceLastRefine =\n          createInternalSetMapMoveSinceLastRefine(\n            renderArgs,\n            this.render!.bind(this)\n          );\n\n        const widgetRenderState = this.getWidgetRenderState(renderArgs);\n\n        sendEvent('view', widgetRenderState.items);\n\n        renderFn(\n          {\n            ...widgetRenderState,\n            instantSearchInstance,\n          },\n          isFirstRendering\n        );\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, results, instantSearchInstance } = renderOptions;\n        const state = helper.state;\n\n        const items = results\n          ? transformItems(\n              results.hits.filter((hit) => hit._geoloc),\n              { results }\n            )\n          : [];\n\n        if (!sendEvent) {\n          sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: helper.getIndex(),\n            widgetType: $$type,\n          });\n        }\n\n        return {\n          items,\n          position: getPositionFromState(state),\n          currentRefinement: getCurrentRefinementFromState(state),\n          refine: refine(helper),\n          sendEvent,\n          clearMapRefinement: clearMapRefinement(helper),\n          isRefinedWithMap: isRefinedWithMap(state),\n          toggleRefineOnMapMove,\n          isRefineOnMapMove,\n          setMapMoveSinceLastRefine,\n          hasMapMoveSinceLastRefine,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          geoSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('insideBoundingBox', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const boundingBox = getBoundingBoxAsString(searchParameters);\n\n        if (\n          !boundingBox ||\n          (uiState &&\n            uiState.geoSearch &&\n            uiState.geoSearch.boundingBox === boundingBox)\n        ) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          geoSearch: {\n            boundingBox,\n          },\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        if (!uiState || !uiState.geoSearch) {\n          return searchParameters.setQueryParameter(\n            'insideBoundingBox',\n            undefined\n          );\n        }\n        return setBoundingBoxAsString(\n          searchParameters,\n          uiState.geoSearch.boundingBox\n        );\n      },\n    };\n  };\n};\n\nexport default connectGeoSearch;\n","import {\n  safelyRunOnBrowser,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\n\nimport type { Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'powered-by',\n  connector: true,\n});\n\nexport type PoweredByRenderState = {\n  /** the url to redirect to on click */\n  url: string;\n};\n\nexport type PoweredByConnectorParams = {\n  /** the url to redirect to on click */\n  url?: string;\n};\n\nexport type PoweredByWidgetDescription = {\n  $$type: 'ais.poweredBy';\n  renderState: PoweredByRenderState;\n  indexRenderState: {\n    poweredBy: WidgetRenderState<\n      PoweredByRenderState,\n      PoweredByConnectorParams\n    >;\n  };\n};\n\nexport type PoweredByConnector = Connector<\n  PoweredByWidgetDescription,\n  PoweredByConnectorParams\n>;\n\n/**\n * **PoweredBy** connector provides the logic to build a custom widget that will displays\n * the logo to redirect to Algolia.\n */\nconst connectPoweredBy: PoweredByConnector = function connectPoweredBy(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  const defaultUrl =\n    'https://www.algolia.com/?' +\n    'utm_source=instantsearch.js&' +\n    'utm_medium=website&' +\n    `utm_content=${safelyRunOnBrowser<string>(\n      ({ window }) => window.location?.hostname || '',\n      { fallback: () => '' }\n    )}&` +\n    'utm_campaign=poweredby';\n\n  return (widgetParams) => {\n    const { url = defaultUrl } = widgetParams || {};\n\n    return {\n      $$type: 'ais.poweredBy',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          poweredBy: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          url,\n          widgetParams,\n        };\n      },\n\n      dispose() {\n        unmountFn();\n      },\n    };\n  };\n};\n\nexport default connectPoweredBy;\n","import type {\n  SearchParameters,\n  PlainSearchParameters,\n  AlgoliaSearchHelper,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  isPlainObject,\n  mergeSearchParameters,\n  noop,\n} from '../../lib/utils';\n\n/**\n * Refine the given search parameters.\n */\ntype Refine = (searchParameters: PlainSearchParameters) => void;\n\nexport type ConfigureConnectorParams = {\n  /**\n   * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n   * to enable when the widget mounts.\n   */\n  searchParameters: PlainSearchParameters;\n};\n\nexport type ConfigureRenderState = {\n  /**\n   * Refine the given search parameters.\n   */\n  refine: Refine;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true,\n});\n\nfunction getInitialSearchParameters(\n  state: SearchParameters,\n  widgetParams: ConfigureConnectorParams\n): SearchParameters {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(\n    Object.keys(widgetParams.searchParameters).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: undefined,\n      }),\n      {}\n    )\n  );\n}\n\nexport type ConfigureWidgetDescription = {\n  $$type: 'ais.configure';\n  renderState: ConfigureRenderState;\n  indexRenderState: {\n    configure: WidgetRenderState<\n      ConfigureRenderState,\n      ConfigureConnectorParams\n    >;\n  };\n  indexUiState: {\n    configure: PlainSearchParameters;\n  };\n};\n\nexport type ConfigureConnector = Connector<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n>;\n\nconst connectConfigure: ConfigureConnector = function connectConfigure(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(\n        withUsage('The `searchParameters` option expects an object.')\n      );\n    }\n\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    function refine(helper: AlgoliaSearchHelper): Refine {\n      return (searchParameters: PlainSearchParameters) => {\n        // Merge new `searchParameters` with the ones set from other widgets\n        const actualState = getInitialSearchParameters(\n          helper.state,\n          widgetParams\n        );\n        const nextSearchParameters = mergeSearchParameters(\n          actualState,\n          new algoliasearchHelper.SearchParameters(searchParameters)\n        );\n\n        // Update original `widgetParams.searchParameters` to the new refined one\n        widgetParams.searchParameters = searchParameters;\n\n        // Trigger a search with the resolved search parameters\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return getInitialSearchParameters(state, widgetParams);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        const widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return {\n          ...renderState,\n          configure: {\n            ...widgetRenderState,\n            widgetParams: {\n              ...widgetRenderState.widgetParams,\n              searchParameters: mergeSearchParameters(\n                new algoliasearchHelper.SearchParameters(\n                  renderState.configure?.widgetParams.searchParameters\n                ),\n                new algoliasearchHelper.SearchParameters(\n                  widgetRenderState.widgetParams.searchParameters\n                )\n              ).getQueryParams(),\n            },\n          },\n        };\n      },\n\n      getWidgetRenderState({ helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return mergeSearchParameters(\n          state,\n          new algoliasearchHelper.SearchParameters({\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          })\n        );\n      },\n\n      getWidgetUiState(uiState) {\n        return {\n          ...uiState,\n          configure: {\n            ...uiState.configure,\n            ...widgetParams.searchParameters,\n          },\n        };\n      },\n    };\n  };\n};\n\nexport default connectConfigure;\n","import type {\n  SearchParameters,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport type { AlgoliaHit, Connector } from '../../types';\nimport {\n  createDocumentationMessageGenerator,\n  getObjectType,\n  warning,\n  getPropertyByPath,\n} from '../../lib/utils';\nimport type { ConfigureWidgetDescription } from '../configure/connectConfigure';\nimport connectConfigure from '../configure/connectConfigure';\n\nexport type MatchingPatterns = {\n  [attribute: string]: {\n    /**\n     * The score of the optional filter.\n     *\n     * @see https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/in-depth/optional-filters/\n     */\n    score: number;\n  };\n};\n\nexport type TransformSearchParameters = (\n  searchParameters: SearchParameters\n) => PlainSearchParameters;\n\nexport type ConfigureRelatedItemsConnectorParams = {\n  /**\n   * The reference hit to extract the filters from.\n   */\n  hit: AlgoliaHit;\n  /**\n   * The schema to create the optional filters.\n   * Each key represents an attribute from the hit.\n   */\n  matchingPatterns: MatchingPatterns;\n  /**\n   * Function to transform the generated search parameters.\n   */\n  transformSearchParameters?: TransformSearchParameters;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'configure-related-items',\n  connector: true,\n});\n\nfunction createOptionalFilter({\n  attributeName,\n  attributeValue,\n  attributeScore,\n}: {\n  attributeName: string;\n  attributeValue: string;\n  attributeScore: number;\n}) {\n  return `${attributeName}:${attributeValue}<score=${attributeScore || 1}>`;\n}\n\nexport type ConfigureRelatedItemsWidgetDescription = {\n  $$type: 'ais.configureRelatedItems';\n} & Omit<ConfigureWidgetDescription, '$$type'>;\n\nexport type ConfigureRelatedItemsConnector = Connector<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n>;\n\nconst connectConfigureRelatedItems: ConfigureRelatedItemsConnector =\n  function connectConfigureRelatedItems(renderFn, unmountFn) {\n    return (widgetParams) => {\n      const {\n        hit,\n        matchingPatterns,\n        transformSearchParameters = ((x) => x) as TransformSearchParameters,\n      } = widgetParams || {};\n\n      if (!hit) {\n        throw new Error(withUsage('The `hit` option is required.'));\n      }\n\n      if (!matchingPatterns) {\n        throw new Error(\n          withUsage('The `matchingPatterns` option is required.')\n        );\n      }\n\n      const optionalFilters = Object.keys(matchingPatterns).reduce<\n        Array<string | string[]>\n      >((acc, attributeName) => {\n        const attribute = matchingPatterns[attributeName];\n        const attributeValue = getPropertyByPath(hit, attributeName);\n        const attributeScore = attribute.score;\n\n        if (Array.isArray(attributeValue)) {\n          return [\n            ...acc,\n            attributeValue.map((attributeSubValue) => {\n              return createOptionalFilter({\n                attributeName,\n                attributeValue: attributeSubValue,\n                attributeScore,\n              });\n            }),\n          ];\n        }\n\n        if (typeof attributeValue === 'string') {\n          return [\n            ...acc,\n            createOptionalFilter({\n              attributeName,\n              attributeValue,\n              attributeScore,\n            }),\n          ];\n        }\n\n        warning(\n          false,\n          `\nThe \\`matchingPatterns\\` option returned a value of type ${getObjectType(\n            attributeValue\n          )} for the \"${attributeName}\" key. This value was not sent to Algolia because \\`optionalFilters\\` only supports strings and array of strings.\n\nYou can remove the \"${attributeName}\" key from the \\`matchingPatterns\\` option.\n\nSee https://www.algolia.com/doc/api-reference/api-parameters/optionalFilters/\n            `\n        );\n\n        return acc;\n      }, []);\n\n      const searchParameters: PlainSearchParameters = {\n        ...transformSearchParameters(\n          new algoliasearchHelper.SearchParameters({\n            sumOrFiltersScores: true,\n            facetFilters: [`objectID:-${hit.objectID}`],\n            optionalFilters,\n          })\n        ),\n      };\n\n      const makeWidget = connectConfigure(renderFn, unmountFn);\n\n      return {\n        // required, since widget parameters differ between these connectors\n        // and we don't want to have the parameters of configure here\n        ...makeWidget({ searchParameters } as any),\n        $$type: 'ais.configureRelatedItems',\n      };\n    };\n  };\n\nexport default connectConfigureRelatedItems;\n","import type { SearchResults } from 'algoliasearch-helper';\nimport type { SendEventForHits } from '../../lib/utils';\nimport {\n  escapeHits,\n  TAG_PLACEHOLDER,\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createSendEventForHits,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type { Hit, Connector, WidgetRenderState } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'autocomplete',\n  connector: true,\n});\n\nexport type AutocompleteConnectorParams = {\n  /**\n   * Escapes HTML entities from hits string values.\n   *\n   * @default `true`\n   */\n  escapeHTML?: boolean;\n};\n\nexport type AutocompleteRenderState = {\n  /**\n   * The current value of the query.\n   */\n  currentRefinement: string;\n\n  /**\n   * The indices this widget has access to.\n   */\n  indices: Array<{\n    /**\n     * The name of the index\n     */\n    indexName: string;\n\n    /**\n     * The resolved hits from the index matching the query.\n     */\n    hits: Hit[];\n\n    /**\n     * The full results object from the Algolia API.\n     */\n    results: SearchResults;\n\n    /**\n     * Send event to insights middleware\n     */\n    sendEvent: SendEventForHits;\n  }>;\n\n  /**\n   * Searches into the indices with the provided query.\n   */\n  refine: (query: string) => void;\n};\n\nexport type AutocompleteWidgetDescription = {\n  $$type: 'ais.autocomplete';\n  renderState: AutocompleteRenderState;\n  indexRenderState: {\n    autocomplete: WidgetRenderState<\n      AutocompleteRenderState,\n      AutocompleteConnectorParams\n    >;\n  };\n  indexUiState: { query: string };\n};\n\nexport type AutocompleteConnector = Connector<\n  AutocompleteWidgetDescription,\n  AutocompleteConnectorParams\n>;\n\nconst connectAutocomplete: AutocompleteConnector = function connectAutocomplete(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const { escapeHTML = true } = widgetParams || {};\n\n    warning(\n      !(widgetParams as any).indices,\n      `\nThe option \\`indices\\` has been removed from the Autocomplete connector.\n\nThe indices to target are now inferred from the widgets tree.\n${\n  Array.isArray((widgetParams as any).indices)\n    ? `\nAn alternative would be:\n\nconst autocomplete = connectAutocomplete(renderer);\n\nsearch.addWidgets([\n  ${(widgetParams as any).indices\n    .map(({ value }: { value: string }) => `index({ indexName: '${value}' }),`)\n    .join('\\n  ')}\n  autocomplete()\n]);\n`\n    : ''\n}\n      `\n    );\n\n    type ConnectorState = {\n      refine?(query: string): void;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.autocomplete',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        const renderState = this.getWidgetRenderState(renderOptions);\n\n        renderState.indices.forEach(({ sendEvent, hits }) => {\n          sendEvent('view', hits);\n        });\n\n        renderFn(\n          {\n            ...renderState,\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          autocomplete: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({\n        helper,\n        state,\n        scopedResults,\n        instantSearchInstance,\n      }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (query: string) => {\n            helper.setQuery(query).search();\n          };\n        }\n\n        const indices = scopedResults.map((scopedResult) => {\n          // We need to escape the hits because highlighting\n          // exposes HTML tags to the end-user.\n          scopedResult.results.hits = escapeHTML\n            ? escapeHits(scopedResult.results.hits)\n            : scopedResult.results.hits;\n\n          const sendEvent = createSendEventForHits({\n            instantSearchInstance,\n            index: scopedResult.results.index,\n            widgetType: this.$$type,\n          });\n\n          return {\n            indexId: scopedResult.indexId,\n            indexName: scopedResult.results.index,\n            hits: scopedResult.results.hits,\n            results: scopedResult.results,\n            sendEvent,\n          };\n        });\n\n        return {\n          currentRefinement: state.query || '',\n          indices,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (query === '' || (uiState && uiState.query === query)) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        const parameters = {\n          query: uiState.query || '',\n        };\n\n        if (!escapeHTML) {\n          return searchParameters.setQueryParameters(parameters);\n        }\n\n        return searchParameters.setQueryParameters({\n          ...parameters,\n          ...TAG_PLACEHOLDER,\n        });\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        const stateWithoutQuery = state.setQueryParameter('query', undefined);\n\n        if (!escapeHTML) {\n          return stateWithoutQuery;\n        }\n\n        return stateWithoutQuery.setQueryParameters(\n          Object.keys(TAG_PLACEHOLDER).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: undefined,\n            }),\n            {}\n          )\n        );\n      },\n    };\n  };\n};\n\nexport default connectAutocomplete;\n","import type {\n  AlgoliaSearchHelper as Helper,\n  SearchParameters,\n} from 'algoliasearch-helper';\nimport type { Connector, TransformItems, WidgetRenderState } from '../../types';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  warning,\n  getRefinements,\n  isEqual,\n  noop,\n} from '../../lib/utils';\nimport type {\n  Refinement as InternalRefinement,\n  NumericRefinement as InternalNumericRefinement,\n} from '../../lib/utils';\n\ntype TrackedFilterRefinement = string | number | boolean;\n\nexport type ParamTrackedFilters = {\n  [facetName: string]: (\n    facetValues: TrackedFilterRefinement[]\n  ) => TrackedFilterRefinement[];\n};\nexport type ParamTransformRuleContexts = (ruleContexts: string[]) => string[];\n\nexport type QueryRulesConnectorParams = {\n  trackedFilters?: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n  transformItems?: TransformItems<any>;\n};\n\nexport type QueryRulesRenderState = {\n  items: any[];\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rules',\n  connector: true,\n});\n\nfunction hasStateRefinements(state: SearchParameters): boolean {\n  return [\n    state.disjunctiveFacetsRefinements,\n    state.facetsRefinements,\n    state.hierarchicalFacetsRefinements,\n    state.numericRefinements,\n  ].some((refinement) =>\n    Boolean(refinement && Object.keys(refinement).length > 0)\n  );\n}\n\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName: string): string {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\n\nfunction getRuleContextsFromTrackedFilters({\n  helper,\n  sharedHelperState,\n  trackedFilters,\n}: {\n  helper: Helper;\n  sharedHelperState: SearchParameters;\n  trackedFilters: ParamTrackedFilters;\n}): string[] {\n  const ruleContexts = Object.keys(trackedFilters).reduce<string[]>(\n    (facets, facetName) => {\n      const facetRefinements: TrackedFilterRefinement[] = getRefinements(\n        helper.lastResults || {},\n        sharedHelperState,\n        true\n      )\n        .filter(\n          (refinement: InternalRefinement) => refinement.attribute === facetName\n        )\n        .map(\n          (refinement: InternalRefinement) =>\n            (refinement as InternalNumericRefinement).numericValue ||\n            refinement.name\n        );\n\n      const getTrackedFacetValues = trackedFilters[facetName];\n      const trackedFacetValues = getTrackedFacetValues(facetRefinements);\n\n      return [\n        ...facets,\n        ...facetRefinements\n          .filter((facetRefinement) =>\n            trackedFacetValues.includes(facetRefinement)\n          )\n          .map((facetValue) =>\n            escapeRuleContext(`ais-${facetName}-${facetValue}`)\n          ),\n      ];\n    },\n    []\n  );\n\n  return ruleContexts;\n}\n\nfunction applyRuleContexts(\n  this: {\n    helper: Helper;\n    initialRuleContexts: string[];\n    trackedFilters: ParamTrackedFilters;\n    transformRuleContexts: ParamTransformRuleContexts;\n  },\n  event: { state: SearchParameters }\n): void {\n  const { helper, initialRuleContexts, trackedFilters, transformRuleContexts } =\n    this;\n\n  const sharedHelperState = event.state;\n  const previousRuleContexts: string[] = sharedHelperState.ruleContexts || [];\n  const newRuleContexts = getRuleContextsFromTrackedFilters({\n    helper,\n    sharedHelperState,\n    trackedFilters,\n  });\n  const nextRuleContexts = [...initialRuleContexts, ...newRuleContexts];\n\n  warning(\n    nextRuleContexts.length <= 10,\n    `\nThe maximum number of \\`ruleContexts\\` is 10. They have been sliced to that limit.\nConsider using \\`transformRuleContexts\\` to minimize the number of rules sent to Algolia.\n`\n  );\n\n  const ruleContexts = transformRuleContexts(nextRuleContexts).slice(0, 10);\n\n  if (!isEqual(previousRuleContexts, ruleContexts)) {\n    helper.overrideStateWithoutTriggeringChangeEvent({\n      ...sharedHelperState,\n      ruleContexts,\n    });\n  }\n}\n\nexport type QueryRulesWidgetDescription = {\n  $$type: 'ais.queryRules';\n  renderState: QueryRulesRenderState;\n  indexRenderState: {\n    queryRules: WidgetRenderState<\n      QueryRulesRenderState,\n      QueryRulesConnectorParams\n    >;\n  };\n};\n\nexport type QueryRulesConnector = Connector<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n>;\n\nconst connectQueryRules: QueryRulesConnector = function connectQueryRules(\n  render,\n  unmount = noop\n) {\n  checkRendering(render, withUsage());\n\n  return (widgetParams) => {\n    const {\n      trackedFilters = {} as ParamTrackedFilters,\n      transformRuleContexts = ((rules) => rules) as ParamTransformRuleContexts,\n      transformItems = ((items) => items) as NonNullable<\n        QueryRulesConnectorParams['transformItems']\n      >,\n    } = widgetParams || {};\n\n    Object.keys(trackedFilters).forEach((facetName) => {\n      if (typeof trackedFilters[facetName] !== 'function') {\n        throw new Error(\n          withUsage(\n            `'The \"${facetName}\" filter value in the \\`trackedFilters\\` option expects a function.`\n          )\n        );\n      }\n    });\n\n    const hasTrackedFilters = Object.keys(trackedFilters).length > 0;\n\n    // We store the initial rule contexts applied before creating the widget\n    // so that we do not override them with the rules created from `trackedFilters`.\n    let initialRuleContexts: string[] = [];\n    let onHelperChange: (event: { state: SearchParameters }) => void;\n\n    return {\n      $$type: 'ais.queryRules',\n\n      init(initOptions) {\n        const { helper, state, instantSearchInstance } = initOptions;\n\n        initialRuleContexts = state.ruleContexts || [];\n        onHelperChange = applyRuleContexts.bind({\n          helper,\n          initialRuleContexts,\n          trackedFilters,\n          transformRuleContexts,\n        });\n\n        if (hasTrackedFilters) {\n          // We need to apply the `ruleContexts` based on the `trackedFilters`\n          // before the helper changes state in some cases:\n          //   - Some filters are applied on the first load (e.g. using `configure`)\n          //   - The `transformRuleContexts` option sets initial `ruleContexts`.\n          if (\n            hasStateRefinements(state) ||\n            Boolean(widgetParams.transformRuleContexts)\n          ) {\n            onHelperChange({ state });\n          }\n\n          // We track every change in the helper to override its state and add\n          // any `ruleContexts` needed based on the `trackedFilters`.\n          helper.on('change', onHelperChange);\n        }\n\n        render(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        render(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getWidgetRenderState({ results }) {\n        const { userData = [] } = results || {};\n        const items = transformItems(userData, { results });\n\n        return {\n          items,\n          widgetParams,\n        };\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          queryRules: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      dispose({ helper, state }) {\n        unmount();\n\n        if (hasTrackedFilters) {\n          helper.removeListener('change', onHelperChange);\n\n          return state.setQueryParameter('ruleContexts', initialRuleContexts);\n        }\n\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectQueryRules;\n","// `SpeechRecognition` is an API used on the browser so we can safely disable\n// the `window` check.\n/* eslint-disable no-restricted-globals */\n/* global SpeechRecognition SpeechRecognitionEvent */\nimport type {\n  CreateVoiceSearchHelper,\n  Status,\n  VoiceListeningState,\n} from './types';\n\nconst createVoiceSearchHelper: CreateVoiceSearchHelper =\n  function createVoiceSearchHelper({\n    searchAsYouSpeak,\n    language,\n    onQueryChange,\n    onStateChange,\n  }) {\n    const SpeechRecognitionAPI: new () => SpeechRecognition =\n      (window as any).webkitSpeechRecognition ||\n      (window as any).SpeechRecognition;\n    const getDefaultState = (status: Status): VoiceListeningState => ({\n      status,\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    });\n    let state: VoiceListeningState = getDefaultState('initial');\n    let recognition: SpeechRecognition | undefined;\n\n    const isBrowserSupported = (): boolean => Boolean(SpeechRecognitionAPI);\n\n    const isListening = (): boolean =>\n      state.status === 'askingPermission' ||\n      state.status === 'waiting' ||\n      state.status === 'recognizing';\n\n    const setState = (newState: Partial<VoiceListeningState> = {}): void => {\n      state = { ...state, ...newState };\n      onStateChange();\n    };\n\n    const getState = (): VoiceListeningState => state;\n\n    const resetState = (status: Status = 'initial'): void => {\n      setState(getDefaultState(status));\n    };\n\n    const onStart = (): void => {\n      setState({\n        status: 'waiting',\n      });\n    };\n\n    const onError = (event: Event): void => {\n      setState({ status: 'error', errorCode: (event as any).error });\n    };\n\n    const onResult = (event: SpeechRecognitionEvent): void => {\n      setState({\n        status: 'recognizing',\n        transcript:\n          (event.results[0] &&\n            event.results[0][0] &&\n            event.results[0][0].transcript) ||\n          '',\n        isSpeechFinal: event.results[0] && event.results[0].isFinal,\n      });\n      if (searchAsYouSpeak && state.transcript) {\n        onQueryChange(state.transcript);\n      }\n    };\n\n    const onEnd = (): void => {\n      if (!state.errorCode && state.transcript && !searchAsYouSpeak) {\n        onQueryChange(state.transcript);\n      }\n      if (state.status !== 'error') {\n        setState({ status: 'finished' });\n      }\n    };\n\n    const startListening = (): void => {\n      recognition = new SpeechRecognitionAPI();\n      if (!recognition) {\n        return;\n      }\n      resetState('askingPermission');\n      recognition.interimResults = true;\n\n      if (language) {\n        recognition.lang = language;\n      }\n\n      recognition.addEventListener('start', onStart);\n      recognition.addEventListener('error', onError);\n      recognition.addEventListener('result', onResult);\n      recognition.addEventListener('end', onEnd);\n      recognition.start();\n    };\n\n    const dispose = (): void => {\n      if (!recognition) {\n        return;\n      }\n      recognition.stop();\n      recognition.removeEventListener('start', onStart);\n      recognition.removeEventListener('error', onError);\n      recognition.removeEventListener('result', onResult);\n      recognition.removeEventListener('end', onEnd);\n      recognition = undefined;\n    };\n\n    const stopListening = (): void => {\n      dispose();\n      // Because `dispose` removes event listeners, `end` listener is not called.\n      // So we're setting the `status` as `finished` here.\n      // If we don't do it, it will be still `waiting` or `recognizing`.\n      resetState('finished');\n    };\n\n    return {\n      getState,\n      isBrowserSupported,\n      isListening,\n      startListening,\n      stopListening,\n      dispose,\n    };\n  };\n\nexport default createVoiceSearchHelper;\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  noop,\n} from '../../lib/utils';\nimport type { Connector, WidgetRenderState } from '../../types';\nimport builtInCreateVoiceSearchHelper from '../../lib/voiceSearchHelper';\nimport type {\n  CreateVoiceSearchHelper,\n  VoiceListeningState,\n} from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'voice-search',\n  connector: true,\n});\n\nexport type VoiceSearchConnectorParams = {\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchRenderState = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n};\n\nexport type VoiceSearchWidgetDescription = {\n  $$type: 'ais.voiceSearch';\n  renderState: VoiceSearchRenderState;\n  indexRenderState: {\n    voiceSearch: WidgetRenderState<\n      VoiceSearchRenderState,\n      VoiceSearchConnectorParams\n    >;\n  };\n  indexUiState: {\n    query: string;\n  };\n};\n\nexport type VoiceSearchConnector = Connector<\n  VoiceSearchWidgetDescription,\n  VoiceSearchConnectorParams\n>;\n\nconst connectVoiceSearch: VoiceSearchConnector = function connectVoiceSearch(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      searchAsYouSpeak = false,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper = builtInCreateVoiceSearchHelper,\n    } = widgetParams;\n\n    return {\n      $$type: 'ais.voiceSearch',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          voiceSearch: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState(renderOptions) {\n        const { helper, instantSearchInstance } = renderOptions;\n        if (!(this as any)._refine) {\n          (this as any)._refine = (query: string): void => {\n            if (query !== helper.state.query) {\n              const queryLanguages = language\n                ? [language.split('-')[0]]\n                : undefined;\n              helper.setQueryParameter('queryLanguages', queryLanguages);\n\n              if (typeof additionalQueryParameters === 'function') {\n                helper.setState(\n                  helper.state.setQueryParameters({\n                    ignorePlurals: true,\n                    removeStopWords: true,\n                    // @ts-ignore (optionalWords only allows array in v3, while string is also valid)\n                    optionalWords: query,\n                    ...additionalQueryParameters({ query }),\n                  })\n                );\n              }\n\n              helper.setQuery(query).search();\n            }\n          };\n        }\n\n        if (!(this as any)._voiceSearchHelper) {\n          (this as any)._voiceSearchHelper = createVoiceSearchHelper({\n            searchAsYouSpeak,\n            language,\n            onQueryChange: (query) => (this as any)._refine(query),\n            onStateChange: () => {\n              renderFn(\n                {\n                  ...this.getWidgetRenderState(renderOptions),\n                  instantSearchInstance,\n                },\n                false\n              );\n            },\n          });\n        }\n\n        const {\n          isBrowserSupported,\n          isListening,\n          startListening,\n          stopListening,\n          getState,\n        } = (this as any)._voiceSearchHelper;\n\n        return {\n          isBrowserSupported: isBrowserSupported(),\n          isListening: isListening(),\n          toggleListening() {\n            if (!isBrowserSupported()) {\n              return;\n            }\n            if (isListening()) {\n              stopListening();\n            } else {\n              startListening();\n            }\n          },\n          voiceListeningState: getState(),\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        (this as any)._voiceSearchHelper.dispose();\n\n        unmountFn();\n\n        let newState = state;\n        if (typeof additionalQueryParameters === 'function') {\n          const additional = additionalQueryParameters({ query: '' });\n          const toReset = additional\n            ? (\n                Object.keys(additional) as Array<keyof PlainSearchParameters>\n              ).reduce<PlainSearchParameters>((acc, current) => {\n                // @ts-ignore search parameters is typed as readonly in v4\n                acc[current] = undefined;\n                return acc;\n              }, {})\n            : {};\n          newState = state.setQueryParameters({\n            // @ts-ignore (queryLanguages is not added to algoliasearch v3)\n            queryLanguages: undefined,\n            ignorePlurals: undefined,\n            removeStopWords: undefined,\n            optionalWords: undefined,\n            ...toReset,\n          });\n        }\n\n        return newState.setQueryParameter('query', undefined);\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        const query = searchParameters.query || '';\n\n        if (!query) {\n          return uiState;\n        }\n\n        return {\n          ...uiState,\n          query,\n        };\n      },\n\n      getWidgetSearchParameters(searchParameters, { uiState }) {\n        return searchParameters.setQueryParameter('query', uiState.query || '');\n      },\n    };\n  };\n};\n\nexport default connectVoiceSearch;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  createConcurrentSafePromise,\n  addQueryID,\n  debounce,\n  addAbsolutePosition,\n  noop,\n  escapeHits,\n} from '../../lib/utils';\nimport type { DebouncedFunction } from '../../lib/utils';\nimport type {\n  Connector,\n  Hit,\n  FindAnswersOptions,\n  FindAnswersResponse,\n  WidgetRenderState,\n  SearchClient,\n} from '../../types';\n\ntype IndexWithAnswers = {\n  readonly findAnswers: any;\n};\n\nfunction hasFindAnswersMethod(\n  answersIndex: IndexWithAnswers | any\n): answersIndex is IndexWithAnswers {\n  return typeof (answersIndex as IndexWithAnswers).findAnswers === 'function';\n}\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'answers',\n  connector: true,\n});\n\nexport type AnswersRenderState = {\n  /**\n   * The matched hits from Algolia API.\n   */\n  hits: Hit[];\n\n  /**\n   * Whether it's still loading the results from the Answers API.\n   */\n  isLoading: boolean;\n};\n\nexport type AnswersConnectorParams = {\n  /**\n   * Attributes to use for predictions.\n   * If empty, we use all `searchableAttributes` to find answers.\n   * All your `attributesForPrediction` must be part of your `searchableAttributes`.\n   */\n  attributesForPrediction?: string[];\n\n  /**\n   * The languages in the query. Currently only supports `en`.\n   */\n  queryLanguages: ['en'];\n\n  /**\n   * Maximum number of answers to retrieve from the Answers Engine.\n   * Cannot be greater than 1000.\n   * @default 1\n   */\n  nbHits?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce render\n   * @default 100\n   */\n  renderDebounceTime?: number;\n\n  /**\n   * Debounce time in milliseconds to debounce search\n   * @default 100\n   */\n  searchDebounceTime?: number;\n\n  /**\n   * Whether to escape HTML tags from hits string values.\n   *\n   * @default true\n   */\n  escapeHTML?: boolean;\n\n  /**\n   * Extra parameters to pass to findAnswers method.\n   * @default {}\n   */\n  extraParameters?: FindAnswersOptions;\n};\n\nexport type AnswersWidgetDescription = {\n  $$type: 'ais.answers';\n  renderState: AnswersRenderState;\n  indexRenderState: {\n    answers: WidgetRenderState<AnswersRenderState, AnswersConnectorParams>;\n  };\n};\n\nexport type AnswersConnector = Connector<\n  AnswersWidgetDescription,\n  AnswersConnectorParams\n>;\n\nconst connectAnswers: AnswersConnector = function connectAnswers(\n  renderFn,\n  unmountFn = noop\n) {\n  checkRendering(renderFn, withUsage());\n\n  return (widgetParams) => {\n    const {\n      queryLanguages,\n      attributesForPrediction,\n      nbHits = 1,\n      renderDebounceTime = 100,\n      searchDebounceTime = 100,\n      escapeHTML = true,\n      extraParameters = {},\n    } = widgetParams || {};\n\n    // @ts-expect-error checking for the wrong value\n    if (!queryLanguages || queryLanguages.length === 0) {\n      throw new Error(\n        withUsage('The `queryLanguages` expects an array of strings.')\n      );\n    }\n\n    const runConcurrentSafePromise =\n      createConcurrentSafePromise<FindAnswersResponse<Hit>>();\n\n    let lastHits: FindAnswersResponse<Hit>['hits'] = [];\n    let isLoading = false;\n    const debouncedRender = debounce(renderFn, renderDebounceTime);\n\n    // this does not directly use DebouncedFunction<findAnswers>, since then the generic will disappear\n    let debouncedRefine: DebouncedFunction<\n      ReturnType<NonNullable<SearchClient['initIndex']>> extends {\n        findAnswers: infer FindAnswers;\n      }\n        ? FindAnswers\n        : any\n    >;\n\n    return {\n      $$type: 'ais.answers',\n\n      init(initOptions) {\n        const { state, instantSearchInstance } = initOptions;\n        const answersIndex = instantSearchInstance.client.initIndex!(\n          state.index\n        );\n        if (!hasFindAnswersMethod(answersIndex)) {\n          throw new Error(withUsage('`algoliasearch` >= 4.8.0 required.'));\n        }\n        debouncedRefine = debounce(\n          answersIndex.findAnswers,\n          searchDebounceTime\n        );\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance: initOptions.instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const query = renderOptions.state.query;\n        if (!query) {\n          // renders nothing with empty query\n          lastHits = [];\n          isLoading = false;\n          renderFn(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n          return;\n        }\n\n        // render the loader\n        lastHits = [];\n        isLoading = true;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance: renderOptions.instantSearchInstance,\n          },\n          false\n        );\n\n        // call /answers API\n        runConcurrentSafePromise(\n          debouncedRefine(query, queryLanguages, {\n            ...extraParameters,\n            nbHits,\n            attributesForPrediction,\n          }) as unknown as Promise<FindAnswersResponse<Hit>>\n        ).then((result) => {\n          if (!result) {\n            // It's undefined when it's debounced.\n            return;\n          }\n\n          if (escapeHTML && result.hits.length > 0) {\n            result.hits = escapeHits(result.hits);\n          }\n\n          const hitsWithAbsolutePosition = addAbsolutePosition(\n            result.hits,\n            0,\n            nbHits\n          );\n\n          const hitsWithAbsolutePositionAndQueryID = addQueryID(\n            hitsWithAbsolutePosition,\n            result.queryID\n          );\n\n          lastHits = hitsWithAbsolutePositionAndQueryID;\n          isLoading = false;\n          debouncedRender(\n            {\n              ...this.getWidgetRenderState(renderOptions),\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        });\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          answers: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState() {\n        return {\n          hits: lastHits,\n          isLoading,\n          widgetParams,\n        };\n      },\n\n      dispose({ state }) {\n        unmountFn();\n        return state;\n      },\n\n      getWidgetSearchParameters(state) {\n        return state;\n      },\n    };\n  };\n};\n\nexport default connectAnswers;\n","export type MaybePromise<TResolution> =\n  | Readonly<Promise<TResolution>>\n  | Promise<TResolution>\n  | TResolution;\n\n// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise<TValue>() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: TValue | undefined = undefined;\n\n  return function runConcurrentSafePromise(promise: MaybePromise<TValue>) {\n    const currentPromiseId = ++basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import type { Connector, WidgetRenderState } from '../../types';\nimport { noop } from '../../lib/utils';\n\nexport type RelevantSortConnectorParams = Record<string, unknown>;\n\ntype Refine = (relevancyStrictness: number) => void;\n\nexport type RelevantSortRenderState = {\n  /**\n   * Indicates if it has appliedRelevancyStrictness greater than zero\n   */\n  isRelevantSorted: boolean;\n\n  /**\n   * Indicates if the results come from a virtual replica\n   */\n  isVirtualReplica: boolean;\n\n  /**\n   * Indicates if search state can be refined\n   */\n  canRefine: boolean;\n\n  /**\n   * Sets the value as relevancyStrictness and trigger a new search\n   */\n  refine: Refine;\n};\n\nexport type RelevantSortWidgetDescription = {\n  $$type: 'ais.relevantSort';\n  renderState: RelevantSortRenderState;\n  indexRenderState: {\n    relevantSort: WidgetRenderState<\n      RelevantSortRenderState,\n      RelevantSortConnectorParams\n    >;\n  };\n  indexUiState: {\n    relevantSort: number;\n  };\n};\n\nexport type RelevantSortConnector = Connector<\n  RelevantSortWidgetDescription,\n  RelevantSortConnectorParams\n>;\n\nconst connectRelevantSort: RelevantSortConnector = function connectRelevantSort(\n  renderFn = noop,\n  unmountFn = noop\n) {\n  return (widgetParams) => {\n    type ConnectorState = {\n      refine?: Refine;\n    };\n\n    const connectorState: ConnectorState = {};\n\n    return {\n      $$type: 'ais.relevantSort',\n\n      init(initOptions) {\n        const { instantSearchInstance } = initOptions;\n        renderFn(\n          {\n            ...this.getWidgetRenderState(initOptions),\n            instantSearchInstance,\n          },\n          true\n        );\n      },\n\n      render(renderOptions) {\n        const { instantSearchInstance } = renderOptions;\n\n        renderFn(\n          {\n            ...this.getWidgetRenderState(renderOptions),\n            instantSearchInstance,\n          },\n          false\n        );\n      },\n\n      dispose({ state }) {\n        unmountFn();\n\n        return state.setQueryParameter('relevancyStrictness', undefined);\n      },\n\n      getRenderState(renderState, renderOptions) {\n        return {\n          ...renderState,\n          relevantSort: this.getWidgetRenderState(renderOptions),\n        };\n      },\n\n      getWidgetRenderState({ results, helper }) {\n        if (!connectorState.refine) {\n          connectorState.refine = (relevancyStrictness: number | undefined) => {\n            helper\n              .setQueryParameter('relevancyStrictness', relevancyStrictness)\n              .search();\n          };\n        }\n\n        const { appliedRelevancyStrictness } = results || {};\n\n        const isVirtualReplica = appliedRelevancyStrictness !== undefined;\n\n        return {\n          isRelevantSorted:\n            typeof appliedRelevancyStrictness !== 'undefined' &&\n            appliedRelevancyStrictness > 0,\n          isVirtualReplica,\n          canRefine: isVirtualReplica,\n          refine: connectorState.refine,\n          widgetParams,\n        };\n      },\n\n      getWidgetSearchParameters(state, { uiState }) {\n        return state.setQueryParameter(\n          'relevancyStrictness',\n          uiState.relevantSort ?? state.relevancyStrictness\n        );\n      },\n\n      getWidgetUiState(uiState, { searchParameters }) {\n        return {\n          ...uiState,\n          relevantSort:\n            searchParameters.relevancyStrictness || uiState.relevantSort,\n        };\n      },\n    };\n  };\n};\n\nexport default connectRelevantSort;\n","import {\n  checkRendering,\n  createDocumentationMessageGenerator,\n  getWidgetAttribute,\n  noop,\n  warning,\n} from '../../lib/utils';\nimport type {\n  Connector,\n  TransformItems,\n  TransformItemsMetadata,\n  Widget,\n} from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n  connector: true,\n});\n\nexport type DynamicWidgetsRenderState = {\n  attributesToRender: string[];\n};\n\nexport type DynamicWidgetsConnectorParams = {\n  /**\n   * An array of widgets, displayed in the order defined by `facetOrdering`.\n   */\n  widgets: Widget[];\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n  }): Widget;\n\n  /**\n   * Function to transform the items to render.\n   * The function also exposes the full search response.\n   */\n  transformItems?: TransformItems<\n    string,\n    Omit<TransformItemsMetadata, 'results'> & {\n      results: NonNullable<TransformItemsMetadata['results']>;\n    }\n  >;\n\n  /**\n   * To prevent unneeded extra network requests when widgets mount or unmount,\n   * we request all facet values.\n   *\n   * @default ['*']\n   */\n  facets?: ['*'] | never[];\n\n  /**\n   * If you have more than 20 facet values pinned, you need to increase the\n   * maxValuesPerFacet to at least that value.\n   *\n   * @default 20\n   */\n  maxValuesPerFacet?: number;\n};\n\nexport type DynamicWidgetsWidgetDescription = {\n  $$type: 'ais.dynamicWidgets';\n  renderState: DynamicWidgetsRenderState;\n  indexRenderState: {\n    dynamicWidgets: DynamicWidgetsRenderState;\n  };\n};\n\nexport type DynamicWidgetsConnector = Connector<\n  DynamicWidgetsWidgetDescription,\n  DynamicWidgetsConnectorParams\n>;\n\nconst MAX_WILDCARD_FACETS = 20;\n\nconst connectDynamicWidgets: DynamicWidgetsConnector =\n  function connectDynamicWidgets(renderFn, unmountFn = noop) {\n    checkRendering(renderFn, withUsage());\n\n    return (widgetParams) => {\n      const {\n        widgets,\n        maxValuesPerFacet = 20,\n        facets = ['*'],\n        transformItems = (items) => items,\n        fallbackWidget,\n      } = widgetParams;\n\n      if (\n        !(\n          widgets &&\n          Array.isArray(widgets) &&\n          widgets.every((widget) => typeof widget === 'object')\n        )\n      ) {\n        throw new Error(\n          withUsage('The `widgets` option expects an array of widgets.')\n        );\n      }\n\n      if (\n        !(\n          Array.isArray(facets) &&\n          facets.length <= 1 &&\n          (facets[0] === '*' || facets[0] === undefined)\n        )\n      ) {\n        throw new Error(\n          withUsage(\n            `The \\`facets\\` option only accepts [] or [\"*\"], you passed ${JSON.stringify(\n              facets\n            )}`\n          )\n        );\n      }\n\n      const localWidgets: Map<string, { widget: Widget; isMounted: boolean }> =\n        new Map();\n\n      return {\n        $$type: 'ais.dynamicWidgets',\n        init(initOptions) {\n          widgets.forEach((widget) => {\n            const attribute = getWidgetAttribute(widget, initOptions);\n            localWidgets.set(attribute, { widget, isMounted: false });\n          });\n\n          renderFn(\n            {\n              ...this.getWidgetRenderState(initOptions),\n              instantSearchInstance: initOptions.instantSearchInstance,\n            },\n            true\n          );\n        },\n        render(renderOptions) {\n          const { parent } = renderOptions;\n          const renderState = this.getWidgetRenderState(renderOptions);\n\n          const widgetsToUnmount: Widget[] = [];\n          const widgetsToMount: Widget[] = [];\n\n          if (fallbackWidget) {\n            renderState.attributesToRender.forEach((attribute) => {\n              if (!localWidgets.has(attribute)) {\n                const widget = fallbackWidget({ attribute });\n                localWidgets.set(attribute, { widget, isMounted: false });\n              }\n            });\n          }\n\n          localWidgets.forEach(({ widget, isMounted }, attribute) => {\n            const shouldMount =\n              renderState.attributesToRender.indexOf(attribute) > -1;\n\n            if (!isMounted && shouldMount) {\n              widgetsToMount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: true,\n              });\n            } else if (isMounted && !shouldMount) {\n              widgetsToUnmount.push(widget);\n              localWidgets.set(attribute, {\n                widget,\n                isMounted: false,\n              });\n            }\n          });\n\n          parent.addWidgets(widgetsToMount);\n          // make sure this only happens after the regular render, otherwise it\n          // happens too quick, since render is \"deferred\" for the next microtask,\n          // so this needs to be a whole task later\n          setTimeout(() => parent.removeWidgets(widgetsToUnmount), 0);\n\n          renderFn(\n            {\n              ...renderState,\n              instantSearchInstance: renderOptions.instantSearchInstance,\n            },\n            false\n          );\n        },\n        dispose({ parent }) {\n          const toRemove: Widget[] = [];\n          localWidgets.forEach(({ widget, isMounted }) => {\n            if (isMounted) {\n              toRemove.push(widget);\n            }\n          });\n          parent.removeWidgets(toRemove);\n\n          unmountFn();\n        },\n        getWidgetSearchParameters(state) {\n          // broadening the scope of facets to avoid conflict between never and *\n          return (facets as string[]).reduce(\n            (acc, curr) => acc.addFacet(curr),\n            state.setQueryParameters({\n              maxValuesPerFacet: Math.max(\n                maxValuesPerFacet || 0,\n                state.maxValuesPerFacet || 0\n              ),\n            })\n          );\n        },\n        getRenderState(renderState, renderOptions) {\n          return {\n            ...renderState,\n            dynamicWidgets: this.getWidgetRenderState(renderOptions),\n          };\n        },\n        getWidgetRenderState({ results, state }) {\n          if (!results) {\n            return { attributesToRender: [], widgetParams };\n          }\n\n          const attributesToRender = transformItems(\n            results.renderingContent?.facetOrdering?.facets?.order ?? [],\n            { results }\n          );\n\n          if (!Array.isArray(attributesToRender)) {\n            throw new Error(\n              withUsage(\n                'The `transformItems` option expects a function that returns an Array.'\n              )\n            );\n          }\n\n          warning(\n            maxValuesPerFacet >= (state.maxValuesPerFacet || 0),\n            `The maxValuesPerFacet set by dynamic widgets (${maxValuesPerFacet}) is smaller than one of the limits set by a widget (${state.maxValuesPerFacet}). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.`\n          );\n\n          warning(\n            attributesToRender.length <= MAX_WILDCARD_FACETS ||\n              widgetParams.facets !== undefined,\n            `More than ${MAX_WILDCARD_FACETS} facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \"facets\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.`\n          );\n\n          return {\n            attributesToRender,\n            widgetParams,\n          };\n        },\n      };\n    };\n  };\n\nexport default connectDynamicWidgets;\n","import { deprecate } from '../lib/utils';\n\nexport { default as connectClearRefinements } from './clear-refinements/connectClearRefinements';\nexport { default as connectCurrentRefinements } from './current-refinements/connectCurrentRefinements';\nexport { default as connectHierarchicalMenu } from './hierarchical-menu/connectHierarchicalMenu';\nexport { default as connectHits } from './hits/connectHits';\nexport { default as connectHitsWithInsights } from './hits/connectHitsWithInsights';\nexport { default as connectHitsPerPage } from './hits-per-page/connectHitsPerPage';\nexport { default as connectInfiniteHits } from './infinite-hits/connectInfiniteHits';\nexport { default as connectInfiniteHitsWithInsights } from './infinite-hits/connectInfiniteHitsWithInsights';\nexport { default as connectMenu } from './menu/connectMenu';\nexport { default as connectNumericMenu } from './numeric-menu/connectNumericMenu';\nexport { default as connectPagination } from './pagination/connectPagination';\nexport { default as connectRange } from './range/connectRange';\nexport { default as connectRefinementList } from './refinement-list/connectRefinementList';\nexport { default as connectSearchBox } from './search-box/connectSearchBox';\nexport { default as connectSortBy } from './sort-by/connectSortBy';\nexport { default as connectRatingMenu } from './rating-menu/connectRatingMenu';\nexport { default as connectStats } from './stats/connectStats';\nexport { default as connectToggleRefinement } from './toggle-refinement/connectToggleRefinement';\nexport { default as connectBreadcrumb } from './breadcrumb/connectBreadcrumb';\nexport { default as connectGeoSearch } from './geo-search/connectGeoSearch';\nexport { default as connectPoweredBy } from './powered-by/connectPoweredBy';\nexport { default as connectConfigure } from './configure/connectConfigure';\nexport { default as EXPERIMENTAL_connectConfigureRelatedItems } from './configure-related-items/connectConfigureRelatedItems';\nexport { default as connectAutocomplete } from './autocomplete/connectAutocomplete';\nexport { default as connectQueryRules } from './query-rules/connectQueryRules';\nexport { default as connectVoiceSearch } from './voice-search/connectVoiceSearch';\nimport connectAnswers from './answers/connectAnswers';\n\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_connectAnswers = deprecate(\n  connectAnswers,\n  'answers is no longer supported'\n);\n\nexport { default as connectRelevantSort } from './relevant-sort/connectRelevantSort';\n\nimport connectDynamicWidgets from './dynamic-widgets/connectDynamicWidgets';\nexport { connectDynamicWidgets };\n\n/** @deprecated use connectDynamicWidgets */\nexport const EXPERIMENTAL_connectDynamicWidgets = deprecate(\n  connectDynamicWidgets,\n  'use connectDynamicWidgets'\n);\n","import type { SearchParameters, SearchResults } from 'algoliasearch-helper';\nimport { createDocumentationMessageGenerator, warning } from '../../lib/utils';\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\n\nexport type AnalyticsWidgetParamsPushFunction = (\n  /**\n   * Contains the search parameters, serialized as a query string.\n   */\n  formattedParameters: string,\n\n  /**\n   * Contains the whole search state.\n   */\n  state: SearchParameters,\n\n  /**\n   * The last received results.\n   */\n  results: SearchResults\n) => void;\n\nexport type AnalyticsWidgetParams = {\n  /**\n   * A function that is called every time the query or refinements changes. You\n   * need to add the logic to push the data to your analytics platform.\n   */\n  pushFunction: AnalyticsWidgetParamsPushFunction;\n\n  /**\n   * The number of milliseconds between the last search keystroke and calling `pushFunction`.\n   *\n   * @default 3000\n   */\n  delay?: number;\n\n  /**\n   * Triggers `pushFunction` after click on page or redirecting the page. This is useful if\n   * you want the pushFunction to be called for the last actions before the user leaves the\n   * current page, even if the delay wasn’t reached.\n   *\n   * @default false\n   */\n  triggerOnUIInteraction?: boolean;\n\n  /**\n   * Triggers `pushFunction` when InstantSearch is initialized. This means\n   * the `pushFunction` might be called even though the user didn’t perfom\n   * any search-related action.\n   *\n   * @default true\n   */\n  pushInitialSearch?: boolean;\n\n  /**\n   * Triggers `pushFunction` when the page changes, either through the UI or programmatically.\n   *\n   * @default false\n   */\n  pushPagination?: boolean;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'analytics' });\n\nexport type AnalyticsWidgetDescription = {\n  $$type: 'ais.analytics';\n  $$widgetType: 'ais.analytics';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    analytics: WidgetRenderState<\n      Record<string, unknown>,\n      AnalyticsWidgetParams\n    >;\n  };\n};\n\nexport type AnalyticsWidget = WidgetFactory<\n  AnalyticsWidgetDescription,\n  AnalyticsWidgetParams,\n  AnalyticsWidgetParams\n>;\n\n// @major this widget will be removed from the next major version.\nconst analytics: AnalyticsWidget = function analytics(widgetParams) {\n  const {\n    pushFunction,\n    delay = 3000,\n    triggerOnUIInteraction = false,\n    pushInitialSearch = true,\n    pushPagination = false,\n  } = widgetParams || {};\n\n  if (!pushFunction) {\n    throw new Error(withUsage('The `pushFunction` option is required.'));\n  }\n\n  warning(\n    false,\n    `\\`analytics\\` widget has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the \\`insights\\` middleware.\n\nFor the migration, visit https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#analytics-widget`\n  );\n\n  type AnalyticsState = {\n    results: SearchResults;\n    state: SearchParameters;\n  } | null;\n\n  let cachedState: AnalyticsState = null;\n\n  type RefinementParameters = {\n    [key: string]: string[];\n  };\n\n  const serializeRefinements = function (\n    parameters: RefinementParameters\n  ): string {\n    const refinements: string[] = [];\n\n    for (const parameter in parameters) {\n      if (parameters.hasOwnProperty(parameter)) {\n        const values = parameters[parameter].join('+');\n\n        refinements.push(\n          `${encodeURIComponent(parameter)}=${encodeURIComponent(\n            parameter\n          )}_${encodeURIComponent(values)}`\n        );\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  const serializeNumericRefinements = function (\n    numericRefinements: SearchParameters['numericRefinements']\n  ): string {\n    const refinements: string[] = [];\n\n    for (const attribute in numericRefinements) {\n      if (numericRefinements.hasOwnProperty(attribute)) {\n        const filter = numericRefinements[attribute];\n\n        if (filter.hasOwnProperty('>=') && filter.hasOwnProperty('<=')) {\n          if (\n            filter['>='] &&\n            filter['>='][0] === filter['<='] &&\n            filter['<='][0]\n          ) {\n            refinements.push(`${attribute}=${attribute}_${filter['>=']}`);\n          } else {\n            refinements.push(\n              `${attribute}=${attribute}_${filter['>=']}to${filter['<=']}`\n            );\n          }\n        } else if (filter.hasOwnProperty('>=')) {\n          refinements.push(`${attribute}=${attribute}_from${filter['>=']}`);\n        } else if (filter.hasOwnProperty('<=')) {\n          refinements.push(`${attribute}=${attribute}_to${filter['<=']}`);\n        } else if (filter.hasOwnProperty('=')) {\n          const equals: string[] = [];\n\n          for (const equal in filter['=']) {\n            // eslint-disable-next-line max-depth\n            if (filter['='].hasOwnProperty(equal)) {\n              // @ts-ignore somehow 'equal' is a string, even though it's a number?\n              equals.push(filter['='][equal]);\n            }\n          }\n\n          refinements.push(`${attribute}=${attribute}_${equals.join('-')}`);\n        }\n      }\n    }\n\n    return refinements.join('&');\n  };\n\n  let lastSentData = '';\n\n  const sendAnalytics = function (analyticsState: AnalyticsState | null): void {\n    if (analyticsState === null) {\n      return;\n    }\n\n    const serializedParams: string[] = [];\n\n    const serializedRefinements = serializeRefinements({\n      ...analyticsState.state.disjunctiveFacetsRefinements,\n      ...analyticsState.state.facetsRefinements,\n      ...analyticsState.state.hierarchicalFacetsRefinements,\n    });\n\n    const serializedNumericRefinements = serializeNumericRefinements(\n      analyticsState.state.numericRefinements\n    );\n\n    if (serializedRefinements !== '') {\n      serializedParams.push(serializedRefinements);\n    }\n\n    if (serializedNumericRefinements !== '') {\n      serializedParams.push(serializedNumericRefinements);\n    }\n\n    const stringifiedParams = serializedParams.join('&');\n\n    let dataToSend = `Query: ${\n      analyticsState.state.query || ''\n    }, ${stringifiedParams}`;\n    if (pushPagination === true) {\n      dataToSend += `, Page: ${analyticsState.state.page || 0}`;\n    }\n\n    if (lastSentData !== dataToSend) {\n      pushFunction(\n        stringifiedParams,\n        analyticsState.state,\n        analyticsState.results\n      );\n\n      lastSentData = dataToSend;\n    }\n  };\n\n  let pushTimeout: number;\n  let isInitialSearch = true;\n\n  if (pushInitialSearch === true) {\n    isInitialSearch = false;\n  }\n\n  const onClick = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  const onUnload = (): void => {\n    sendAnalytics(cachedState);\n  };\n\n  return {\n    $$type: 'ais.analytics',\n    $$widgetType: 'ais.analytics',\n\n    init() {\n      if (triggerOnUIInteraction === true) {\n        document.addEventListener('click', onClick);\n        window.addEventListener('beforeunload', onUnload);\n      }\n    },\n\n    render({ results, state }) {\n      if (isInitialSearch === true) {\n        isInitialSearch = false;\n\n        return;\n      }\n\n      cachedState = { results, state };\n\n      if (pushTimeout) {\n        clearTimeout(pushTimeout);\n      }\n\n      pushTimeout = window.setTimeout(() => sendAnalytics(cachedState), delay);\n    },\n\n    dispose() {\n      if (triggerOnUIInteraction === true) {\n        document.removeEventListener('click', onClick);\n        window.removeEventListener('beforeunload', onUnload);\n      }\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        analytics: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default analytics;\n","export function cx() {\n  for (var _len = arguments.length, cssClasses = new Array(_len), _key = 0; _key < _len; _key++) {\n    cssClasses[_key] = arguments[_key];\n  }\n\n  return cssClasses.reduce(function (acc, className) {\n    if (Array.isArray(className)) {\n      return acc.concat(className);\n    }\n\n    return acc.concat([className]);\n  }, []).filter(Boolean).join(' ');\n}","import { uniq } from '../utils/uniq';\nimport type { HoganHelpers, Templates } from '../../types';\nimport type { HoganOptions } from 'hogan.js';\n\ntype TemplatesConfig = {\n  helpers?: HoganHelpers;\n  compileOptions?: HoganOptions;\n};\n\nexport type PreparedTemplateProps<TTemplates extends Templates> = {\n  templatesConfig: TemplatesConfig;\n  templates: TTemplates;\n  useCustomCompileOptions: {\n    [TKey in keyof Partial<TTemplates>]: boolean;\n  };\n};\n\nfunction prepareTemplates<TTemplates extends Templates>(\n  // can not use = {} here, since the template could have different constraints\n  defaultTemplates?: TTemplates,\n  templates: Partial<TTemplates> = {}\n) {\n  const allKeys = uniq([\n    ...Object.keys(defaultTemplates || {}),\n    ...Object.keys(templates),\n  ]);\n\n  return allKeys.reduce(\n    (config, key: keyof TTemplates) => {\n      const defaultTemplate = defaultTemplates\n        ? defaultTemplates[key]\n        : undefined;\n      const customTemplate = templates[key];\n      const isCustomTemplate =\n        customTemplate !== undefined && customTemplate !== defaultTemplate;\n\n      config.templates[key] = isCustomTemplate\n        ? customTemplate! // typescript doesn't recognize that this condition asserts customTemplate is defined\n        : defaultTemplate!;\n\n      config.useCustomCompileOptions[key] = isCustomTemplate;\n\n      return config;\n    },\n    {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      templates: {} as TTemplates,\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      useCustomCompileOptions: {} as {\n        [TKey in keyof TTemplates]: boolean;\n      },\n    }\n  );\n}\n\n/**\n * Prepares an object to be passed to the Template widget\n */\nexport function prepareTemplateProps<TTemplates extends Templates>({\n  defaultTemplates,\n  templates,\n  templatesConfig,\n}: {\n  defaultTemplates: TTemplates;\n  templates?: Partial<TTemplates>;\n  templatesConfig: TemplatesConfig;\n}): PreparedTemplateProps<TTemplates> {\n  const preparedTemplates = prepareTemplates(defaultTemplates, templates);\n\n  return {\n    templatesConfig,\n    ...preparedTemplates,\n  };\n}\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"parts\", \"highlightedTagName\", \"nonHighlightedTagName\", \"separator\", \"className\", \"classNames\"];\nimport { cx } from '@algolia/ui-components-shared'; // Basic types to allow this file to compile without a JSX implementation.\n// This is a minimal subset of the actual types from the `JSX` namespace.\n\nfunction createHighlightPartComponent(_ref) {\n  var createElement = _ref.createElement;\n  return function HighlightPart(_ref2) {\n    var classNames = _ref2.classNames,\n        children = _ref2.children,\n        highlightedTagName = _ref2.highlightedTagName,\n        isHighlighted = _ref2.isHighlighted,\n        nonHighlightedTagName = _ref2.nonHighlightedTagName;\n    var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n    return createElement(TagName, {\n      className: isHighlighted ? classNames.highlighted : classNames.nonHighlighted\n    }, children);\n  };\n}\n\nexport function createHighlightComponent(_ref3) {\n  var createElement = _ref3.createElement,\n      Fragment = _ref3.Fragment;\n  var HighlightPart = createHighlightPartComponent({\n    createElement: createElement,\n    Fragment: Fragment\n  });\n  return function Highlight(_ref4) {\n    var parts = _ref4.parts,\n        _ref4$highlightedTagN = _ref4.highlightedTagName,\n        highlightedTagName = _ref4$highlightedTagN === void 0 ? 'mark' : _ref4$highlightedTagN,\n        _ref4$nonHighlightedT = _ref4.nonHighlightedTagName,\n        nonHighlightedTagName = _ref4$nonHighlightedT === void 0 ? 'span' : _ref4$nonHighlightedT,\n        _ref4$separator = _ref4.separator,\n        separator = _ref4$separator === void 0 ? ', ' : _ref4$separator,\n        className = _ref4.className,\n        _ref4$classNames = _ref4.classNames,\n        classNames = _ref4$classNames === void 0 ? {} : _ref4$classNames,\n        props = _objectWithoutProperties(_ref4, _excluded);\n\n    return createElement(\"span\", _extends({}, props, {\n      className: cx(classNames.root, className)\n    }), parts.map(function (part, partIndex) {\n      var isLastPart = partIndex === parts.length - 1;\n      return createElement(Fragment, {\n        key: partIndex\n      }, part.map(function (subPart, subPartIndex) {\n        return createElement(HighlightPart, {\n          key: subPartIndex,\n          classNames: classNames,\n          highlightedTagName: highlightedTagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: subPart.isHighlighted\n        }, subPart.value);\n      }), !isLastPart && createElement(\"span\", {\n        className: classNames.separator\n      }, separator));\n    }));\n  };\n}","import { createHighlightComponent } from '@algolia/ui-components-highlight-vdom';\nimport { createElement, Fragment } from 'preact';\n\nexport const InternalHighlight = createHighlightComponent({\n  createElement,\n  Fragment,\n});\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type HighlightClassNames = InternalHighlightClassNames;\nexport type HighlightProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<HighlightClassNames>;\n};\n\nexport function Highlight({ classNames = {}, ...props }: HighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Highlight', classNames.root),\n        highlighted: cx('ais-Highlight-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Highlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Highlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Highlight as HighlightUiComponent } from '../../components/Highlight/Highlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\nimport type { HighlightProps as HighlightUiComponentProps } from '../../components/Highlight/Highlight';\n\nexport type HighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: HighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<HighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Highlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: HighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <HighlightUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseHighlightClassNames = InternalHighlightClassNames;\nexport type ReverseHighlightProps = Omit<\n  InternalHighlightProps,\n  'classNames'\n> & {\n  classNames?: Partial<ReverseHighlightClassNames>;\n};\n\nexport function ReverseHighlight({\n  classNames = {},\n  ...props\n}: ReverseHighlightProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseHighlight', classNames.root),\n        highlighted: cx(\n          'ais-ReverseHighlight-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseHighlight-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseHighlight-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseHighlight as ReverseHighlightUiComponent } from '../../components/ReverseHighlight/ReverseHighlight';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeHighlightResult,\n  PartialKeys,\n} from '../../types';\nimport type { ReverseHighlightProps as ReverseHighlightUiComponentProps } from '../../components/ReverseHighlight/ReverseHighlight';\n\nexport type ReverseHighlightProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseHighlightUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseHighlightUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseHighlight<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseHighlightProps<THit>) {\n  const property: HitAttributeHighlightResult | HitAttributeHighlightResult[] =\n    getPropertyByPath(hit._highlightResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable highlight for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is either searchable or specified in \\`attributesToHighlight\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseHighlightUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type ReverseSnippetClassNames = InternalHighlightClassNames;\nexport type ReverseSnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<ReverseSnippetClassNames>;\n};\n\nexport function ReverseSnippet({\n  classNames = {},\n  ...props\n}: ReverseSnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-ReverseSnippet', classNames.root),\n        highlighted: cx(\n          'ais-ReverseSnippet-highlighted',\n          classNames.highlighted\n        ),\n        nonHighlighted: cx(\n          'ais-ReverseSnippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-ReverseSnippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { ReverseSnippet as ReverseSnippetUiComponent } from '../../components/ReverseSnippet/ReverseSnippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\nimport type { ReverseSnippetProps as ReverseSnippetUiComponentProps } from '../../components/ReverseSnippet/ReverseSnippet';\n\nexport type ReverseSnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: ReverseSnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<ReverseSnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function ReverseSnippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: ReverseSnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || '')).map(\n      ({ isHighlighted, ...rest }) => ({\n        ...rest,\n        isHighlighted: !isHighlighted,\n      })\n    )\n  );\n\n  return (\n    <ReverseSnippetUiComponent\n      {...props}\n      parts={parts}\n      classNames={cssClasses}\n    />\n  );\n}\n","/** @jsx h */\nimport { cx } from '@algolia/ui-components-shared';\nimport { h } from 'preact';\n\nimport { InternalHighlight } from '../InternalHighlight/InternalHighlight';\n\nimport type {\n  HighlightProps as InternalHighlightProps,\n  HighlightClassNames as InternalHighlightClassNames,\n} from '@algolia/ui-components-highlight-vdom';\n\nexport type SnippetClassNames = InternalHighlightClassNames;\nexport type SnippetProps = Omit<InternalHighlightProps, 'classNames'> & {\n  classNames?: Partial<SnippetClassNames>;\n};\n\nexport function Snippet({ classNames = {}, ...props }: SnippetProps) {\n  return (\n    <InternalHighlight\n      classNames={{\n        root: cx('ais-Snippet', classNames.root),\n        highlighted: cx('ais-Snippet-highlighted', classNames.highlighted),\n        nonHighlighted: cx(\n          'ais-Snippet-nonHighlighted',\n          classNames.nonHighlighted\n        ),\n        separator: cx('ais-Snippet-separator', classNames.separator),\n      }}\n      {...props}\n    />\n  );\n}\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { Snippet as SnippetUiComponent } from '../../components/Snippet/Snippet';\nimport {\n  getPropertyByPath,\n  unescape,\n  toArray,\n  warning,\n  getHighlightedParts,\n} from '../../lib/utils';\n\nimport type {\n  BaseHit,\n  Hit,\n  HitAttributeSnippetResult,\n  PartialKeys,\n} from '../../types';\nimport type { SnippetProps as SnippetUiComponentProps } from '../../components/Snippet/Snippet';\n\nexport type SnippetProps<THit extends Hit<BaseHit>> = {\n  hit: THit;\n  attribute: keyof THit | string[];\n  cssClasses?: SnippetUiComponentProps['classNames'];\n} & PartialKeys<\n  Omit<SnippetUiComponentProps, 'parts' | 'classNames'>,\n  'highlightedTagName' | 'nonHighlightedTagName' | 'separator'\n>;\n\nexport function Snippet<THit extends Hit<BaseHit>>({\n  hit,\n  attribute,\n  cssClasses,\n  ...props\n}: SnippetProps<THit>) {\n  const property: HitAttributeSnippetResult | HitAttributeSnippetResult[] =\n    getPropertyByPath(hit._snippetResult, attribute as string) || [];\n  const properties = toArray(property);\n\n  warning(\n    Boolean(properties.length),\n    `Could not enable snippet for \"${attribute.toString()}\", will display an empty string.\nPlease check whether this attribute exists and is specified in \\`attributesToSnippet\\`.\n\nSee: https://alg.li/highlighting\n`\n  );\n\n  const parts = properties.map(({ value }) =>\n    getHighlightedParts(unescape(value || ''))\n  );\n\n  return (\n    <SnippetUiComponent {...props} parts={parts} classNames={cssClasses} />\n  );\n}\n","import type { HoganOptions, Template } from 'hogan.js';\nimport hogan from 'hogan.js';\nimport { html } from 'htm/preact';\nimport {\n  Highlight,\n  ReverseHighlight,\n  ReverseSnippet,\n  Snippet,\n} from '../../helpers/components';\nimport type { Templates, HoganHelpers, TemplateParams } from '../../types';\nimport type {\n  BindEventForHits,\n  SendEventForHits,\n} from '../utils/createSendEventForHits';\n\ntype TransformedHoganHelpers = {\n  [helper: string]: () => (text: string) => string;\n};\n\n// We add all our template helper methods to the template as lambdas. Note\n// that lambdas in Mustache are supposed to accept a second argument of\n// `render` to get the rendered value, not the literal `{{value}}`. But\n// this is currently broken (see https://github.com/twitter/hogan.js/issues/222).\nfunction transformHelpersToHogan(\n  helpers: HoganHelpers = {},\n  compileOptions?: HoganOptions,\n  data?: Record<string, any>\n) {\n  return Object.keys(helpers).reduce<TransformedHoganHelpers>(\n    (acc, helperKey) => ({\n      ...acc,\n      [helperKey]() {\n        return (text) => {\n          const render = (value: string) =>\n            (hogan.compile(value, compileOptions) as Template).render(this);\n\n          return helpers[helperKey].call(data, text, render);\n        };\n      },\n    }),\n    {}\n  );\n}\n\nexport function renderTemplate({\n  templates,\n  templateKey,\n  compileOptions,\n  helpers,\n  data,\n  bindEvent,\n  sendEvent,\n}: {\n  templates: Templates;\n  templateKey: string;\n  compileOptions?: HoganOptions;\n  helpers?: HoganHelpers;\n  data?: Record<string, any>;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n}) {\n  const template = templates[templateKey];\n\n  if (typeof template !== 'string' && typeof template !== 'function') {\n    throw new Error(\n      `Template must be 'string' or 'function', was '${typeof template}' (key: ${templateKey})`\n    );\n  }\n\n  if (typeof template === 'function') {\n    // @MAJOR no longer pass bindEvent when string templates are removed\n    const params = (bindEvent || {}) as TemplateParams;\n\n    params.html = html;\n    params.sendEvent = sendEvent;\n    params.components = {\n      Highlight,\n      ReverseHighlight,\n      Snippet,\n      ReverseSnippet,\n    };\n\n    return template(data, params);\n  }\n\n  const transformedHelpers = transformHelpersToHogan(\n    helpers,\n    compileOptions,\n    data\n  );\n\n  return (hogan.compile(template, compileOptions) as Template)\n    .render({\n      ...data,\n      helpers: transformedHelpers,\n    })\n    .replace(/[ \\n\\r\\t\\f\\xA0]+/g, (spaces) =>\n      spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ')\n    )\n    .trim();\n}\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h, Component } from 'preact';\nimport { warning, isEqual } from '../../lib/utils';\nimport { renderTemplate } from '../../lib/templating';\n\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { Templates } from '../../types';\n\nconst defaultProps = {\n  data: {},\n  rootTagName: 'div',\n  useCustomCompileOptions: {},\n  templates: {},\n  templatesConfig: {},\n};\n\nexport type TemplateProps = {\n  data?: Record<string, any>;\n  rootProps?: Record<string, any>;\n  rootTagName?: keyof JSX.IntrinsicElements;\n  templateKey: string;\n  bindEvent?: BindEventForHits;\n  sendEvent?: SendEventForHits;\n} & PreparedTemplateProps<Templates> &\n  Readonly<typeof defaultProps>;\n\n// @TODO: Template should be a generic and receive TData to pass to Templates (to avoid TTemplateData to be set as `any`)\nclass Template extends Component<TemplateProps> {\n  public static readonly defaultProps = defaultProps;\n\n  public shouldComponentUpdate(nextProps: TemplateProps) {\n    return (\n      !isEqual(this.props.data, nextProps.data) ||\n      this.props.templateKey !== nextProps.templateKey ||\n      !isEqual(this.props.rootProps, nextProps.rootProps)\n    );\n  }\n\n  public render() {\n    warning(\n      Object.keys(this.props.templates).every(\n        (key) => typeof this.props.templates[key] === 'function'\n      ),\n      `Hogan.js and string-based templates are deprecated and will not be supported in InstantSearch.js 5.x.\n\nYou can replace them with function-form templates and use either the provided \\`html\\` function or JSX templates.\n\nSee: https://www.algolia.com/doc/guides/building-search-ui/upgrade-guides/js/#upgrade-templates`\n    );\n\n    const RootTagName = this.props.rootTagName;\n\n    const useCustomCompileOptions =\n      this.props.useCustomCompileOptions[this.props.templateKey];\n    const compileOptions = useCustomCompileOptions\n      ? this.props.templatesConfig.compileOptions\n      : {};\n\n    const content = renderTemplate({\n      templates: this.props.templates,\n      templateKey: this.props.templateKey,\n      compileOptions,\n      helpers: this.props.templatesConfig.helpers,\n      data: this.props.data,\n      bindEvent: this.props.bindEvent,\n      sendEvent: this.props.sendEvent,\n    });\n\n    if (content === null) {\n      // Adds a noscript to the DOM but virtual DOM is null\n      // See http://facebook.github.io/react/docs/component-specs.html#render\n      return null;\n    }\n\n    if (typeof content === 'object') {\n      return <RootTagName {...this.props.rootProps}>{content}</RootTagName>;\n    }\n\n    return (\n      <RootTagName\n        {...this.props.rootProps}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  }\n}\n\nexport default Template;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  BreadcrumbCSSClasses,\n  BreadcrumbTemplates,\n} from '../../widgets/breadcrumb/breadcrumb';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { BreadcrumbConnectorParamsItem } from '../../connectors/breadcrumb/connectBreadcrumb';\n\nexport type BreadcrumbComponentCSSClasses =\n  ComponentCSSClasses<BreadcrumbCSSClasses>;\n\nexport type BreadcrumbComponentTemplates = Required<BreadcrumbTemplates>;\n\nexport type BreadcrumbProps = {\n  items: BreadcrumbConnectorParamsItem[];\n  cssClasses: BreadcrumbComponentCSSClasses;\n  templateProps: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n  createURL(value?: string | null): string;\n  refine(value?: string | null): void;\n  canRefine?: boolean;\n};\n\nconst Breadcrumb = ({\n  items,\n  cssClasses,\n  templateProps,\n  createURL,\n  refine,\n}: BreadcrumbProps) => (\n  <div\n    className={cx(\n      cssClasses.root,\n      items.length === 0 && cssClasses.noRefinementRoot\n    )}\n  >\n    <ul className={cssClasses.list}>\n      <li\n        className={cx(\n          cssClasses.item,\n          items.length === 0 && cssClasses.selectedItem\n        )}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"home\"\n          rootTagName=\"a\"\n          rootProps={{\n            className: cssClasses.link,\n            href: createURL(undefined),\n            onClick: (event: MouseEvent) => {\n              event.preventDefault();\n              refine(undefined);\n            },\n          }}\n        />\n      </li>\n\n      {items.map((item, idx) => {\n        const isLast = idx === items.length - 1;\n\n        return (\n          <li\n            key={item.label + idx}\n            className={cx(cssClasses.item, isLast && cssClasses.selectedItem)}\n          >\n            <Template\n              {...templateProps}\n              templateKey=\"separator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.separator,\n                'aria-hidden': true,\n              }}\n            />\n            {isLast ? (\n              item.label\n            ) : (\n              <a\n                className={cssClasses.link}\n                href={createURL(item.value)}\n                onClick={(event) => {\n                  event.preventDefault();\n                  refine(item.value);\n                }}\n              >\n                {item.label}\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { ClearRefinementsRenderState } from '../../connectors/clear-refinements/connectClearRefinements';\nimport type {\n  ClearRefinementsCSSClasses,\n  ClearRefinementsTemplates,\n} from '../../widgets/clear-refinements/clear-refinements';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type ClearRefinementsComponentCSSClasses =\n  ComponentCSSClasses<ClearRefinementsCSSClasses>;\n\nexport type ClearRefinementsComponentTemplates =\n  Required<ClearRefinementsTemplates>;\n\nexport type ClearRefinementsProps = {\n  refine: ClearRefinementsRenderState['refine'];\n  cssClasses: ClearRefinementsComponentCSSClasses;\n  hasRefinements: ClearRefinementsRenderState['hasRefinements'];\n  templateProps: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n};\n\nconst ClearRefinements = ({\n  hasRefinements,\n  refine,\n  cssClasses,\n  templateProps,\n}: ClearRefinementsProps) => (\n  <div className={cssClasses.root}>\n    <Template\n      {...templateProps}\n      templateKey=\"resetLabel\"\n      rootTagName=\"button\"\n      rootProps={{\n        className: cx(\n          cssClasses.button,\n          !hasRefinements && cssClasses.disabledButton\n        ),\n        onClick: refine,\n        disabled: !hasRefinements,\n      }}\n      data={{ hasRefinements }}\n    />\n  </div>\n);\n\nexport default ClearRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { isSpecialClick, capitalize } from '../../lib/utils';\nimport type {\n  CurrentRefinementsConnectorParamsItem,\n  CurrentRefinementsConnectorParamsRefinement,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport type { CurrentRefinementsCSSClasses } from '../../widgets/current-refinements/current-refinements';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type CurrentRefinementsComponentCSSClasses =\n  ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n\nexport type CurrentRefinementsProps = {\n  items: CurrentRefinementsConnectorParamsItem[];\n  cssClasses: CurrentRefinementsComponentCSSClasses;\n  canRefine: boolean;\n};\n\nconst createItemKey = ({\n  attribute,\n  value,\n  type,\n  operator,\n}: CurrentRefinementsConnectorParamsRefinement): string =>\n  [attribute, type, value, operator]\n    .map((key) => key)\n    .filter(Boolean)\n    .join(':');\n\nconst handleClick = (callback: () => void) => (event: any) => {\n  if (isSpecialClick(event)) {\n    return;\n  }\n\n  event.preventDefault();\n  callback();\n};\n\nconst CurrentRefinements = ({\n  items,\n  cssClasses,\n  canRefine,\n}: CurrentRefinementsProps) => (\n  <div\n    className={cx(cssClasses.root, !canRefine && cssClasses.noRefinementRoot)}\n  >\n    <ul className={cssClasses.list}>\n      {items.map((item, index) => (\n        <li\n          key={`${item.indexName}-${item.attribute}-${index}`}\n          className={cssClasses.item}\n        >\n          <span className={cssClasses.label}>{capitalize(item.label)}:</span>\n\n          {item.refinements.map((refinement) => (\n            <span\n              key={createItemKey(refinement)}\n              className={cssClasses.category}\n            >\n              <span className={cssClasses.categoryLabel}>\n                {refinement.attribute === 'query' ? (\n                  <q>{refinement.label}</q>\n                ) : (\n                  refinement.label\n                )}\n              </span>\n\n              <button\n                className={cssClasses.delete}\n                onClick={handleClick(item.refine.bind(null, refinement))}\n              >\n                ✕\n              </button>\n            </span>\n          ))}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default CurrentRefinements;\n","export function capitalize(text: string): string {\n  return text.toString().charAt(0).toUpperCase() + text.toString().slice(1);\n}\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport CurrentRefinements from '../../components/CurrentRefinements/CurrentRefinements';\nimport type {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsRenderState,\n  CurrentRefinementsWidgetDescription,\n} from '../../connectors/current-refinements/connectCurrentRefinements';\nimport connectCurrentRefinements from '../../connectors/current-refinements/connectCurrentRefinements';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { ComponentCSSClasses, Renderer, WidgetFactory } from '../../types';\n\nexport type CurrentRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to the category element.\n   */\n  category: string | string[];\n\n  /**\n   * CSS class to add to the categoryLabel element.\n   */\n  categoryLabel: string | string[];\n\n  /**\n   * CSS class to add to the delete element.\n   */\n  delete: string | string[];\n}>;\n\nexport type CurrentRefinementsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: CurrentRefinementsCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'current-refinements',\n});\nconst suit = component('CurrentRefinements');\n\nconst renderer: Renderer<\n  CurrentRefinementsRenderState,\n  Partial<CurrentRefinementsWidgetParams>\n> = ({ items, widgetParams, canRefine }, isFirstRender) => {\n  if (isFirstRender) {\n    return;\n  }\n\n  const { container, cssClasses } = widgetParams as {\n    container: HTMLElement;\n    cssClasses: ComponentCSSClasses<CurrentRefinementsCSSClasses>;\n  };\n\n  render(\n    <CurrentRefinements\n      cssClasses={cssClasses}\n      items={items}\n      canRefine={canRefine}\n    />,\n    container\n  );\n};\n\nexport type CurrentRefinementsWidget = WidgetFactory<\n  CurrentRefinementsWidgetDescription & {\n    $$widgetType: 'ais.currentRefinements';\n  },\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsWidgetParams\n>;\n\nconst currentRefinements: CurrentRefinementsWidget =\n  function currentRefinements(widgetParams) {\n    const {\n      container,\n      includedAttributes,\n      excludedAttributes,\n      cssClasses: userCssClasses = {},\n      transformItems,\n    } = widgetParams || {};\n\n    if (!container) {\n      throw new Error(withUsage('The `container` option is required.'));\n    }\n\n    const containerNode = getContainerNode(container);\n    const cssClasses: CurrentRefinementsCSSClasses = {\n      root: cx(suit(), userCssClasses.root),\n      noRefinementRoot: cx(\n        suit({ modifierName: 'noRefinement' }),\n        userCssClasses.noRefinementRoot\n      ),\n      list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n      item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n      label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n      category: cx(\n        suit({ descendantName: 'category' }),\n        userCssClasses.category\n      ),\n      categoryLabel: cx(\n        suit({ descendantName: 'categoryLabel' }),\n        userCssClasses.categoryLabel\n      ),\n      delete: cx(suit({ descendantName: 'delete' }), userCssClasses.delete),\n    };\n\n    const makeWidget =\n      connectCurrentRefinements<CurrentRefinementsWidgetParams>(renderer, () =>\n        render(null, containerNode)\n      );\n\n    return {\n      ...makeWidget({\n        container: containerNode,\n        cssClasses,\n        includedAttributes,\n        excludedAttributes,\n        transformItems,\n      }),\n      $$widgetType: 'ais.currentRefinements',\n    };\n  };\n\nexport default currentRefinements;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  AnswersCSSClasses,\n  AnswersTemplates,\n} from '../../widgets/answers/answers';\nimport type { ComponentCSSClasses, Hit } from '../../types';\n\nexport type AnswersComponentCSSClasses = ComponentCSSClasses<AnswersCSSClasses>;\n\nexport type AnswersComponentTemplates = Required<AnswersTemplates>;\n\nexport type AnswersProps = {\n  hits: Hit[];\n  isLoading: boolean;\n  cssClasses: AnswersComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: AnswersComponentTemplates;\n  };\n};\n\nconst Answers = ({\n  hits,\n  isLoading,\n  cssClasses,\n  templateProps,\n}: AnswersProps) => (\n  <div\n    className={cx(cssClasses.root, hits.length === 0 && cssClasses.emptyRoot)}\n  >\n    <Template\n      {...templateProps}\n      templateKey=\"header\"\n      rootProps={{ className: cssClasses.header }}\n      data={{\n        hits,\n        isLoading,\n      }}\n    />\n    {isLoading ? (\n      <Template\n        {...templateProps}\n        templateKey=\"loader\"\n        rootProps={{ className: cssClasses.loader }}\n      />\n    ) : (\n      <ul className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n          />\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default Answers;\n","import type { BreadcrumbComponentTemplates } from '../../components/Breadcrumb/Breadcrumb';\n\nconst defaultTemplates: BreadcrumbComponentTemplates = {\n  home() {\n    return 'Home';\n  },\n  separator() {\n    return '>';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  BreadcrumbComponentCSSClasses,\n  BreadcrumbComponentTemplates,\n} from '../../components/Breadcrumb/Breadcrumb';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport type {\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams,\n  BreadcrumbRenderState,\n} from '../../connectors/breadcrumb/connectBreadcrumb';\nimport connectBreadcrumb from '../../connectors/breadcrumb/connectBreadcrumb';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'breadcrumb' });\nconst suit = component('Breadcrumb');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: BreadcrumbComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<BreadcrumbComponentTemplates>;\n    };\n    templates: BreadcrumbTemplates;\n  }): Renderer<BreadcrumbRenderState, Partial<BreadcrumbWidgetParams>> =>\n  (\n    { canRefine, createURL, instantSearchInstance, items, refine },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Breadcrumb\n        canRefine={canRefine}\n        cssClasses={cssClasses}\n        createURL={createURL}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type BreadcrumbCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to the items of the list. The items contains the link and the separator.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to the selected item in the list: the last one or the home if there are no refinements.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to the separator.\n   */\n  separator: string | string[];\n\n  /**\n   * CSS class to add to the links in the items.\n   */\n  link: string | string[];\n}>;\n\nexport type BreadcrumbTemplates = Partial<{\n  /**\n   * Label of the breadcrumb's first element.\n   */\n  home: Template;\n\n  /**\n   * Symbol used to separate the elements of the breadcrumb.\n   */\n  separator: Template;\n}>;\n\nexport type BreadcrumbWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: BreadcrumbTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: BreadcrumbCSSClasses;\n};\n\nexport type BreadcrumbWidget = WidgetFactory<\n  BreadcrumbWidgetDescription & { $$widgetType: 'ais.breadcrumb' },\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetParams\n>;\n\nconst breadcrumb: BreadcrumbWidget = function breadcrumb(widgetParams) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectBreadcrumb(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attributes, separator, rootPath, transformItems }),\n    $$widgetType: 'ais.breadcrumb',\n  };\n};\n\nexport default breadcrumb;\n","import type { ClearRefinementsComponentTemplates } from '../../components/ClearRefinements/ClearRefinements';\n\nconst defaultTemplates: ClearRefinementsComponentTemplates = {\n  resetLabel() {\n    return 'Clear refinements';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport type {\n  ClearRefinementsComponentCSSClasses,\n  ClearRefinementsComponentTemplates,\n} from '../../components/ClearRefinements/ClearRefinements';\nimport ClearRefinements from '../../components/ClearRefinements/ClearRefinements';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsRenderState,\n  ClearRefinementsWidgetDescription,\n} from '../../connectors/clear-refinements/connectClearRefinements';\nimport connectClearRefinements from '../../connectors/clear-refinements/connectClearRefinements';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'clear-refinements',\n});\nconst suit = component('ClearRefinements');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ClearRefinementsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ClearRefinementsComponentTemplates>;\n    };\n    templates: ClearRefinementsTemplates;\n  }): Renderer<\n    ClearRefinementsRenderState,\n    Partial<ClearRefinementsWidgetParams>\n  > =>\n  ({ refine, canRefine, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <ClearRefinements\n        refine={refine}\n        cssClasses={cssClasses}\n        hasRefinements={canRefine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type ClearRefinementsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapper element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the button of the widget.\n   */\n  button: string | string[];\n\n  /**\n   * CSS class to add to the button when there are no refinements.\n   */\n  disabledButton: string | string[];\n}>;\n\nexport type ClearRefinementsTemplates = Partial<{\n  /**\n   * Template for the content of the button\n   */\n  resetLabel: Template<{ hasRefinements: boolean }>;\n}>;\n\nexport type ClearRefinementsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ClearRefinementsTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ClearRefinementsCSSClasses;\n};\n\nexport type ClearRefinementsWidget = WidgetFactory<\n  ClearRefinementsWidgetDescription & { $$widgetType: 'ais.clearRefinements' },\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetParams\n>;\n\nconst clearRefinements: ClearRefinementsWidget = (widgetParams) => {\n  const {\n    container,\n    templates = {},\n    includedAttributes,\n    excludedAttributes,\n    transformItems,\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    disabledButton: cx(\n      suit({ descendantName: 'button', modifierName: 'disabled' }),\n      userCssClasses.disabledButton\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectClearRefinements(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      includedAttributes,\n      excludedAttributes,\n      transformItems,\n    }),\n    $$widgetType: 'ais.clearRefinements',\n  };\n};\n\nexport default clearRefinements;\n","import type { AnswersComponentTemplates } from '../../components/Answers/Answers';\n\nconst defaultTemplates: AnswersComponentTemplates = {\n  header() {\n    return '';\n  },\n  loader() {\n    return '';\n  },\n  item(item) {\n    return JSON.stringify(item);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { WidgetFactory, Template, Hit, Renderer } from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  AnswersComponentCSSClasses,\n  AnswersComponentTemplates,\n} from '../../components/Answers/Answers';\nimport Answers from '../../components/Answers/Answers';\nimport type {\n  AnswersRenderState,\n  AnswersConnectorParams,\n  AnswersWidgetDescription,\n} from '../../connectors/answers/connectAnswers';\nimport connectAnswers from '../../connectors/answers/connectAnswers';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'answers' });\nconst suit = component('Answers');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: AnswersComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<AnswersComponentTemplates>;\n    };\n    templates: AnswersTemplates;\n  }): Renderer<AnswersRenderState, Partial<AnswersWidgetParams>> =>\n  ({ hits, isLoading, instantSearchInstance }, isFirstRendering) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <Answers\n        cssClasses={cssClasses}\n        hits={hits}\n        isLoading={isLoading}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type AnswersTemplates = Partial<{\n  /**\n   * Template to use for the header. This template will receive an object containing `hits` and `isLoading`.\n   */\n  header: Template<{\n    hits: Hit[];\n    isLoading: boolean;\n  }>;\n\n  /**\n   * Template to use for the loader.\n   */\n  loader: Template;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   */\n  item: Template<Hit>;\n}>;\n\nexport type AnswersCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the loader.\n   */\n  loader: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type AnswersWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: AnswersTemplates;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: AnswersCSSClasses;\n};\n\nexport type AnswersWidget = WidgetFactory<\n  AnswersWidgetDescription & { $$widgetType: 'ais.answers' },\n  AnswersConnectorParams,\n  AnswersWidgetParams\n>;\n\nconst answersWidget: AnswersWidget = (widgetParams) => {\n  const {\n    container,\n    attributesForPrediction,\n    queryLanguages,\n    nbHits,\n    searchDebounceTime,\n    renderDebounceTime,\n    escapeHTML,\n    extraParameters,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    loader: cx(suit({ descendantName: 'loader' }), userCssClasses.loader),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectAnswers(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributesForPrediction,\n      queryLanguages,\n      nbHits,\n      searchDebounceTime,\n      renderDebounceTime,\n      escapeHTML,\n      extraParameters,\n    }),\n    $$widgetType: 'ais.answers',\n  };\n};\n\nexport default answersWidget;\n","import type {\n  DynamicWidgetsConnectorParams,\n  DynamicWidgetsWidgetDescription,\n} from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport connectDynamicWidgets from '../../connectors/dynamic-widgets/connectDynamicWidgets';\nimport { component } from '../../lib/suit';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getWidgetAttribute,\n} from '../../lib/utils';\nimport type { Widget, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'dynamic-widgets',\n});\nconst suit = component('DynamicWidgets');\n\nexport type DynamicWidgetsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * An array of widget creator functions, displayed in the order defined by\n   * `facetOrdering`.\n   */\n  widgets: Array<(container: HTMLElement) => Widget>;\n\n  /**\n   * Function to return a fallback widget when an attribute isn't found in\n   * `widgets`.\n   */\n  fallbackWidget?(args: {\n    /** The attribute name to create a widget for. */\n    attribute: string;\n    /** CSS Selector or HTMLElement to insert the widget */\n    container: HTMLElement;\n  }): Widget;\n};\n\nexport type DynamicWidgetsWidget = WidgetFactory<\n  DynamicWidgetsWidgetDescription & { $$widgetType: 'ais.dynamicWidgets' },\n  Omit<DynamicWidgetsConnectorParams, 'widgets' | 'fallbackWidget'>,\n  DynamicWidgetsWidgetParams\n>;\n\nfunction createContainer(rootContainer: HTMLElement) {\n  const container = document.createElement('div');\n  container.className = suit({ descendantName: 'widget' });\n\n  rootContainer.appendChild(container);\n\n  return container;\n}\n\nconst dynamicWidgets: DynamicWidgetsWidget = function dynamicWidgets(\n  widgetParams\n) {\n  const {\n    container: containerSelector,\n    widgets,\n    fallbackWidget,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  if (!containerSelector) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (\n    !(\n      widgets &&\n      Array.isArray(widgets) &&\n      widgets.every((widget) => typeof widget === 'function')\n    )\n  ) {\n    throw new Error(\n      withUsage('The `widgets` option expects an array of callbacks.')\n    );\n  }\n\n  const userContainer = getContainerNode(containerSelector);\n  const rootContainer = document.createElement('div');\n  rootContainer.className = suit();\n\n  const containers = new Map<string, HTMLElement>();\n  const connectorWidgets: Widget[] = [];\n\n  const makeWidget = connectDynamicWidgets(\n    ({ attributesToRender }, isFirstRender) => {\n      if (isFirstRender) {\n        userContainer.appendChild(rootContainer);\n      }\n\n      attributesToRender.forEach((attribute) => {\n        if (!containers.has(attribute)) {\n          return;\n        }\n        const container = containers.get(attribute)!;\n        rootContainer.appendChild(container);\n      });\n    },\n    () => {\n      userContainer.removeChild(rootContainer);\n    }\n  );\n\n  const widget = makeWidget({\n    ...otherWidgetParams,\n    widgets: connectorWidgets,\n    fallbackWidget:\n      typeof fallbackWidget === 'function'\n        ? ({ attribute }) => {\n            const container = createContainer(rootContainer);\n            containers.set(attribute, container);\n            return fallbackWidget({ attribute, container });\n          }\n        : undefined,\n  });\n\n  return {\n    ...widget,\n    init(initOptions) {\n      widgets.forEach((cb) => {\n        const container = createContainer(rootContainer);\n\n        const childWidget = cb(container);\n        const attribute = getWidgetAttribute(childWidget, initOptions);\n\n        containers.set(attribute, container);\n        connectorWidgets.push(childWidget);\n      });\n\n      widget.init!(initOptions);\n    },\n    $$widgetType: 'ais.dynamicWidgets',\n  };\n};\nexport default dynamicWidgets;\n","/** @jsx h */\n\nimport type { ComponentChildren } from 'preact';\nimport { h } from 'preact';\n\ntype Props = {\n  className: string;\n  onClick(event: MouseEvent): void;\n  children: ComponentChildren;\n  disabled?: boolean;\n};\n\nconst GeoSearchButton = ({\n  className,\n  disabled = false,\n  onClick,\n  children,\n}: Props) => (\n  <button className={className} onClick={onClick} disabled={disabled}>\n    {children}\n  </button>\n);\n\nexport default GeoSearchButton;\n","/** @jsx h */\n\nimport type { ComponentChildren } from 'preact';\nimport { h } from 'preact';\n\ntype Props = {\n  classNameLabel: string;\n  classNameInput: string;\n  checked: boolean;\n  onToggle(event: Event): void;\n  children: ComponentChildren;\n};\n\nconst GeoSearchToggle = ({\n  classNameLabel,\n  classNameInput,\n  checked,\n  onToggle,\n  children,\n}: Props) => (\n  <label className={classNameLabel}>\n    <input\n      className={classNameInput}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onToggle}\n    />\n    {children}\n  </label>\n);\n\nexport default GeoSearchToggle;\n","/** @jsx h */\n\nimport { h, Fragment } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport GeoSearchButton from './GeoSearchButton';\nimport GeoSearchToggle from './GeoSearchToggle';\nimport type {\n  GeoSearchCSSClasses,\n  GeoSearchTemplates,\n} from '../../widgets/geo-search/geo-search';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\ntype Props = {\n  cssClasses: ComponentCSSClasses<GeoSearchCSSClasses>;\n  enableRefine: boolean;\n  enableRefineControl: boolean;\n  enableClearMapRefinement: boolean;\n  isRefineOnMapMove: boolean;\n  isRefinedWithMap: boolean;\n  hasMapMoveSinceLastRefine: boolean;\n  onRefineToggle(event: Event): void;\n  onRefineClick(event: MouseEvent): void;\n  onClearClick(event: MouseEvent): void;\n  templateProps: PreparedTemplateProps<GeoSearchTemplates>;\n};\n\nconst GeoSearchControls = ({\n  cssClasses,\n  enableRefine,\n  enableRefineControl,\n  enableClearMapRefinement,\n  isRefineOnMapMove,\n  isRefinedWithMap,\n  hasMapMoveSinceLastRefine,\n  onRefineToggle,\n  onRefineClick,\n  onClearClick,\n  templateProps,\n}: Props) => (\n  <Fragment>\n    {enableRefine && (\n      <div>\n        {enableRefineControl && (\n          <div className={cssClasses.control}>\n            {isRefineOnMapMove || !hasMapMoveSinceLastRefine ? (\n              <GeoSearchToggle\n                classNameLabel={cx(\n                  cssClasses.label,\n                  isRefineOnMapMove && cssClasses.selectedLabel\n                )}\n                classNameInput={cssClasses.input}\n                checked={isRefineOnMapMove}\n                onToggle={onRefineToggle}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"toggle\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchToggle>\n            ) : (\n              <GeoSearchButton\n                className={cssClasses.redo}\n                disabled={!hasMapMoveSinceLastRefine}\n                onClick={onRefineClick}\n              >\n                <Template\n                  {...templateProps}\n                  templateKey=\"redo\"\n                  rootTagName=\"span\"\n                />\n              </GeoSearchButton>\n            )}\n          </div>\n        )}\n\n        {!enableRefineControl && !isRefineOnMapMove && (\n          <div className={cssClasses.control}>\n            <GeoSearchButton\n              className={cx(\n                cssClasses.redo,\n                !hasMapMoveSinceLastRefine && cssClasses.disabledRedo\n              )}\n              disabled={!hasMapMoveSinceLastRefine}\n              onClick={onRefineClick}\n            >\n              <Template\n                {...templateProps}\n                templateKey=\"redo\"\n                rootTagName=\"span\"\n              />\n            </GeoSearchButton>\n          </div>\n        )}\n\n        {enableClearMapRefinement && isRefinedWithMap && (\n          <GeoSearchButton className={cssClasses.reset} onClick={onClearClick}>\n            <Template\n              {...templateProps}\n              templateKey=\"reset\"\n              rootTagName=\"span\"\n            />\n          </GeoSearchButton>\n        )}\n      </div>\n    )}\n  </Fragment>\n);\n\nexport default GeoSearchControls;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport GeoSearchControls from '../../components/GeoSearchControls/GeoSearchControls';\n\nconst refineWithMap = ({ refine, mapInstance }) =>\n  refine({\n    northEast: mapInstance.getBounds().getNorthEast().toJSON(),\n    southWest: mapInstance.getBounds().getSouthWest().toJSON(),\n  });\n\nconst collectMarkersForNextRender = (markers, nextIds) =>\n  markers.reduce(\n    ([update, exit], marker) => {\n      const persist = nextIds.includes(marker.__id);\n\n      return persist\n        ? [update.concat(marker), exit]\n        : [update, exit.concat(marker)];\n    },\n    [[], []]\n  );\n\nconst createBoundingBoxFromMarkers = (google, markers) => {\n  const latLngBounds = markers.reduce(\n    (acc, marker) => acc.extend(marker.getPosition()),\n    new google.maps.LatLngBounds()\n  );\n\n  return {\n    northEast: latLngBounds.getNorthEast().toJSON(),\n    southWest: latLngBounds.getSouthWest().toJSON(),\n  };\n};\n\nconst lockUserInteraction = (renderState, functionThatAltersTheMapPosition) => {\n  renderState.isUserInteraction = false;\n  functionThatAltersTheMapPosition();\n  renderState.isUserInteraction = true;\n};\n\nconst renderer = (\n  {\n    items,\n    position,\n    currentRefinement,\n    refine,\n    clearMapRefinement,\n    toggleRefineOnMapMove,\n    isRefineOnMapMove,\n    setMapMoveSinceLastRefine,\n    hasMapMoveSinceLastRefine,\n    isRefinedWithMap,\n    widgetParams,\n    instantSearchInstance,\n  },\n  isFirstRendering\n) => {\n  const {\n    container,\n    googleReference,\n    cssClasses,\n    templates,\n    initialZoom,\n    initialPosition,\n    enableRefine,\n    enableClearMapRefinement,\n    enableRefineControl,\n    mapOptions,\n    createMarker,\n    markerOptions,\n    renderState,\n  } = widgetParams;\n\n  if (isFirstRendering) {\n    renderState.isUserInteraction = true;\n    renderState.isPendingRefine = false;\n    renderState.markers = [];\n\n    const rootElement = document.createElement('div');\n    rootElement.className = cssClasses.root;\n    container.appendChild(rootElement);\n\n    const mapElement = document.createElement('div');\n    mapElement.className = cssClasses.map;\n    rootElement.appendChild(mapElement);\n\n    const treeElement = document.createElement('div');\n    treeElement.className = cssClasses.tree;\n    rootElement.appendChild(treeElement);\n\n    renderState.mapInstance = new googleReference.maps.Map(mapElement, {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      streetViewControl: false,\n      clickableIcons: false,\n      zoomControlOptions: {\n        position: googleReference.maps.ControlPosition.LEFT_TOP,\n      },\n      ...mapOptions,\n    });\n\n    const setupListenersWhenMapIsReady = () => {\n      const onChange = () => {\n        if (renderState.isUserInteraction && enableRefine) {\n          setMapMoveSinceLastRefine();\n\n          if (isRefineOnMapMove()) {\n            renderState.isPendingRefine = true;\n          }\n        }\n      };\n\n      renderState.mapInstance.addListener('center_changed', onChange);\n      renderState.mapInstance.addListener('zoom_changed', onChange);\n      renderState.mapInstance.addListener('dragstart', onChange);\n\n      renderState.mapInstance.addListener('idle', () => {\n        if (renderState.isUserInteraction && renderState.isPendingRefine) {\n          renderState.isPendingRefine = false;\n\n          refineWithMap({\n            mapInstance: renderState.mapInstance,\n            refine,\n          });\n        }\n      });\n    };\n\n    googleReference.maps.event.addListenerOnce(\n      renderState.mapInstance,\n      'idle',\n      setupListenersWhenMapIsReady\n    );\n\n    renderState.templateProps = prepareTemplateProps({\n      templatesConfig: instantSearchInstance.templatesConfig,\n      templates,\n    });\n\n    return;\n  }\n\n  // Collect markers that need to be updated or removed\n  const nextItemsIds = items.map((_) => _.objectID);\n  const [updateMarkers, exitMarkers] = collectMarkersForNextRender(\n    renderState.markers,\n    nextItemsIds\n  );\n\n  // Collect items that will be added\n  const updateMarkerIds = updateMarkers.map((_) => _.__id);\n  const nextPendingItems = items.filter(\n    (item) => !updateMarkerIds.includes(item.objectID)\n  );\n\n  // Remove all markers that need to be removed\n  exitMarkers.forEach((marker) => marker.setMap(null));\n\n  // Create the markers from the items\n  renderState.markers = updateMarkers.concat(\n    nextPendingItems.map((item) => {\n      const marker = createMarker({\n        map: renderState.mapInstance,\n        item,\n      });\n\n      Object.keys(markerOptions.events).forEach((eventName) => {\n        marker.addListener(eventName, (event) => {\n          markerOptions.events[eventName]({\n            map: renderState.mapInstance,\n            event,\n            item,\n            marker,\n          });\n        });\n      });\n\n      return marker;\n    })\n  );\n\n  const shouldUpdate = !hasMapMoveSinceLastRefine();\n\n  // We use this value for differentiate the padding to apply during\n  // fitBounds. When we don't have a currenRefinement (boundingBox)\n  // we let Google Maps compute the automatic padding. But when we\n  // provide the currentRefinement we explicitly set the padding\n  // to `0` otherwise the map will decrease the zoom on each refine.\n  const boundingBoxPadding = currentRefinement ? 0 : null;\n  const boundingBox =\n    !currentRefinement && Boolean(renderState.markers.length)\n      ? createBoundingBoxFromMarkers(googleReference, renderState.markers)\n      : currentRefinement;\n\n  if (boundingBox && shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.fitBounds(\n        new googleReference.maps.LatLngBounds(\n          boundingBox.southWest,\n          boundingBox.northEast\n        ),\n        boundingBoxPadding\n      );\n    });\n  } else if (shouldUpdate) {\n    lockUserInteraction(renderState, () => {\n      renderState.mapInstance.setCenter(position || initialPosition);\n      renderState.mapInstance.setZoom(initialZoom);\n    });\n  }\n\n  render(\n    <GeoSearchControls\n      cssClasses={cssClasses}\n      enableRefine={enableRefine}\n      enableRefineControl={enableRefineControl}\n      enableClearMapRefinement={enableClearMapRefinement}\n      isRefineOnMapMove={isRefineOnMapMove()}\n      isRefinedWithMap={isRefinedWithMap()}\n      hasMapMoveSinceLastRefine={hasMapMoveSinceLastRefine()}\n      onRefineToggle={toggleRefineOnMapMove}\n      onRefineClick={() =>\n        refineWithMap({\n          mapInstance: renderState.mapInstance,\n          refine,\n        })\n      }\n      onClearClick={clearMapRefinement}\n      templateProps={renderState.templateProps}\n    />,\n    container.querySelector(`.${cssClasses.tree}`)\n  );\n};\n\nexport default renderer;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { GeoSearchComponentTemplates } from './geo-search';\n\nconst defaultTemplates: GeoSearchComponentTemplates = {\n  HTMLMarker() {\n    return <p>Your custom HTML Marker</p>;\n  },\n  reset() {\n    return 'Clear the map refinement';\n  },\n  toggle() {\n    return 'Search as I move the map';\n  },\n  redo() {\n    return 'Redo search here';\n  },\n};\n\nexport default defaultTemplates;\n","// global for TypeScript alone\n/* global google */\nimport { cx } from '@algolia/ui-components-shared';\nimport { render } from 'preact';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { renderTemplate } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  GeoSearchConnectorParams,\n  GeoSearchWidgetDescription,\n  GeoHit,\n} from '../../connectors/geo-search/connectGeoSearch';\nimport connectGeoSearch from '../../connectors/geo-search/connectGeoSearch';\nimport renderer from './GeoSearchRenderer';\nimport defaultTemplates from './defaultTemplates';\nimport type { HTMLMarkerArguments } from './createHTMLMarker';\nimport createHTMLMarker from './createHTMLMarker';\nimport type { GeoLoc, Template, WidgetFactory } from '../../types';\n\nexport type CreateMarker = (args: {\n  item: GeoHit;\n  map: google.maps.Map;\n}) => google.maps.OverlayView | google.maps.Marker;\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'geo-search' });\nconst suit = component('GeoSearch');\n\nexport type GeoSearchTemplates = Partial<{\n  /** Template to use for the marker. */\n  HTMLMarker: Template<GeoHit>;\n  /** Template for the reset button. */\n  reset: Template;\n  /** Template for the toggle label. */\n  toggle: Template;\n  /** Template for the redo button. */\n  redo: Template;\n}>;\n\nexport type GeoSearchComponentTemplates = Required<GeoSearchTemplates>;\n\nexport type GeoSearchCSSClasses = Partial<{\n  /** The root div of the widget. */\n  root: string | string[];\n  /** The map container of the widget. */\n  map: string | string[];\n  /** The control element of the widget. */\n  control: string | string[];\n  /** The label of the control element. */\n  label: string | string[];\n  /** The selected label of the control element. */\n  selectedLabel: string | string[];\n  /** The input of the control element. */\n  input: string | string[];\n  /** The redo search button. */\n  redo: string | string[];\n  /** The disabled redo search button. */\n  disabledRedo: string | string[];\n  /** The reset refinement button. */\n  reset: string | string[];\n}>;\n\nexport type GeoSearchMarker<TOptions> = {\n  /**\n   * Function used to create the options passed to the Google Maps marker.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MarkerOptions\n   */\n  createOptions?(item: GeoHit): TOptions;\n  /**\n   * Object that takes an event type (ex: `click`, `mouseover`) as key and a\n   * listener as value. The listener is provided with an object that contains:\n   * `event`, `item`, `marker`, `map`.\n   */\n  events: {\n    [key: string]: (event: {\n      item: any;\n      marker: any;\n      map: any;\n      event: any;\n    }) => void;\n  };\n};\n\nexport type GeoSearchWidgetParams = {\n  /**\n   * By default the map will set the zoom accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we\n   * need to provide a zoom to render the map.\n   * @default 1\n   */\n  initialZoom?: number;\n  /**\n   * By default the map will set the position accordingly to the markers displayed on it.\n   * When we refine it may happen that the results are empty. For those situations we need\n   * to provide a position to render the map. This option is ignored when the `position`\n   * is provided.\n   * @default { lat: 0, lng: 0 }\n   */\n  initialPosition?: GeoLoc;\n  /** Templates to use for the widget. */\n  templates?: GeoSearchTemplates;\n  /** CSS classes to add to the wrapping elements. */\n  cssClasses?: GeoSearchCSSClasses;\n  /**\n   * Options for customize the built-in Google Maps marker. This option is\n   * ignored when the `customHTMLMarker` is provided.\n   */\n  builtInMarker?: Partial<GeoSearchMarker<google.maps.MarkerOptions>>;\n  /**\n   * Options to customize the HTML marker. We provide an alternative to the\n   * built-in Google Maps marker in order to have a full control of the marker\n   * rendering. You can use plain HTML to build your marker.\n   */\n  customHTMLMarker?:\n    | Partial<GeoSearchMarker<Partial<HTMLMarkerArguments>>>\n    | boolean;\n  /**\n   * If true, the map is used to search - otherwise it's for display purposes only.\n   * @default true\n   */\n  enableRefine?: boolean;\n  /**\n   * If true, a button is displayed on the map when the refinement is coming from\n   * the map in order to remove it.\n   * @default true\n   */\n  enableClearMapRefinement?: boolean;\n  /**\n   * If true, the user can toggle the option `enableRefineOnMapMove` directly from the map.\n   * @default true\n   */\n  enableRefineControl?: boolean;\n  /**\n   * Option forwarded to the Google Maps constructor.\n   * See the documentation for more information:\n   * https://developers.google.com/maps/documentation/javascript/reference/3/#MapOptions\n   */\n  mapOptions?: google.maps.MapOptions;\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Reference to the global `window.google` object.\n   * See [the documentation](https://developers.google.com/maps/documentation/javascript/tutorial) for more information.\n   */\n  googleReference: typeof window['google'];\n};\n\nexport type GeoSearchWidget = WidgetFactory<\n  GeoSearchWidgetDescription & { $$widgetType: 'ais.geoSearch' },\n  GeoSearchConnectorParams,\n  GeoSearchWidgetParams\n>;\n\n/**\n * The **GeoSearch** widget displays the list of results from the search on a Google Maps. It also provides a way to search for results based on their position. The widget also provide some of the common GeoSearch patterns like search on map interaction.\n *\n * @requirements\n *\n * Note that the GeoSearch widget uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia. Your hits **must** have a `_geoloc` attribute in order to be displayed on the map.\n *\n * Currently, the feature is not compatible with multiple values in the _geoloc attribute.\n *\n * You are also responsible for loading the Google Maps library, it's not shipped with InstantSearch. You need to load the Google Maps library and pass a reference to the widget. You can find more information about how to install the library in [the Google Maps documentation](https://developers.google.com/maps/documentation/javascript/tutorial).\n *\n * Don't forget to explicitly set the `height` of the map container (default class `.ais-geo-search--map`), otherwise it won't be shown (it's a requirement of Google Maps).\n */\nconst geoSearch: GeoSearchWidget = (widgetParams) => {\n  const {\n    initialZoom = 1,\n    initialPosition = { lat: 0, lng: 0 },\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    builtInMarker: userBuiltInMarker = {},\n    customHTMLMarker: userCustomHTMLMarker,\n    enableRefine = true,\n    enableClearMapRefinement = true,\n    enableRefineControl = true,\n    container,\n    googleReference,\n    ...otherWidgetParams\n  } = widgetParams || {};\n\n  const defaultBuiltInMarker: GeoSearchMarker<google.maps.MarkerOptions> = {\n    createOptions: () => ({}),\n    events: {},\n  };\n\n  const defaultCustomHTMLMarker: GeoSearchMarker<Partial<HTMLMarkerArguments>> =\n    {\n      createOptions: () => ({}),\n      events: {},\n    };\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  if (!googleReference) {\n    throw new Error(withUsage('The `googleReference` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    // Required only to mount / unmount the Preact tree\n    tree: suit({ descendantName: 'tree' }),\n    map: cx(suit({ descendantName: 'map' }), userCssClasses.map),\n    control: cx(suit({ descendantName: 'control' }), userCssClasses.control),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    selectedLabel: cx(\n      suit({ descendantName: 'label', modifierName: 'selected' }),\n      userCssClasses.selectedLabel\n    ),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    redo: cx(suit({ descendantName: 'redo' }), userCssClasses.redo),\n    disabledRedo: cx(\n      suit({ descendantName: 'redo', modifierName: 'disabled' }),\n      userCssClasses.disabledRedo\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const builtInMarker = {\n    ...defaultBuiltInMarker,\n    ...userBuiltInMarker,\n  };\n\n  const isCustomHTMLMarker =\n    Boolean(userCustomHTMLMarker) || Boolean(userTemplates.HTMLMarker);\n\n  const customHTMLMarker = isCustomHTMLMarker && {\n    ...defaultCustomHTMLMarker,\n    ...(userCustomHTMLMarker as Partial<\n      GeoSearchMarker<Partial<HTMLMarkerArguments>>\n    >),\n  };\n\n  const createBuiltInMarker: CreateMarker = ({ item, ...rest }) =>\n    new googleReference.maps.Marker({\n      ...builtInMarker.createOptions!(item),\n      ...rest,\n      // @ts-expect-error @types/googlemaps doesn't document this\n      __id: item.objectID,\n      position: item._geoloc,\n    });\n\n  const HTMLMarker = createHTMLMarker(googleReference);\n  const createCustomHTMLMarker: CreateMarker = ({ item, ...rest }) =>\n    new HTMLMarker({\n      // this is only called when customHTMLMarker is defined\n      ...(customHTMLMarker as GeoSearchMarker<Partial<HTMLMarkerArguments>>)\n        .createOptions!(item),\n      ...rest,\n      __id: item.objectID,\n      position: item._geoloc,\n      className: cx(suit({ descendantName: 'marker' })),\n      template: renderTemplate({\n        templateKey: 'HTMLMarker',\n        templates,\n        data: item,\n      }),\n    });\n\n  const createMarker = !customHTMLMarker\n    ? createBuiltInMarker\n    : createCustomHTMLMarker;\n\n  const markerOptions = !customHTMLMarker ? builtInMarker : customHTMLMarker;\n\n  const makeWidget = connectGeoSearch(renderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      ...otherWidgetParams,\n      renderState: {},\n      container: containerNode,\n      googleReference,\n      initialZoom,\n      initialPosition,\n      templates,\n      cssClasses,\n      createMarker,\n      markerOptions,\n      enableRefine,\n      enableClearMapRefinement,\n      enableRefineControl,\n    }),\n    $$widgetType: 'ais.geoSearch',\n  };\n};\n\nexport default geoSearch;\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nexport type RefinementListItemProps = {\n  facetValueToRefine: string;\n  handleClick: (args: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) => void;\n  isRefined: boolean;\n  subItems?: JSX.Element;\n  templateData: Record<string, any>;\n  templateKey: string;\n  templateProps?: Record<string, any>;\n  className: string;\n};\n\nfunction RefinementListItem({\n  className,\n  handleClick,\n  facetValueToRefine,\n  isRefined,\n  templateProps,\n  templateKey,\n  templateData,\n  subItems,\n}: RefinementListItemProps) {\n  return (\n    <li\n      className={className}\n      onClick={(originalEvent) => {\n        handleClick({\n          facetValueToRefine,\n          isRefined,\n          originalEvent,\n        });\n      }}\n    >\n      {/* @MAJOR ensure conformity with InstantSearch.css specs */}\n      <Template\n        {...templateProps}\n        templateKey={templateKey}\n        data={templateData}\n      />\n      {subItems}\n    </li>\n  );\n}\n\nexport default RefinementListItem;\n","/** @jsx h */\n\nimport { h, createRef, Component } from 'preact';\nimport { noop } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport type {\n  SearchBoxCSSClasses,\n  SearchBoxTemplates,\n} from '../../widgets/search-box/search-box';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type SearchBoxComponentCSSClasses =\n  ComponentCSSClasses<SearchBoxCSSClasses>;\n\nexport type SearchBoxComponentTemplates = Required<SearchBoxTemplates>;\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  cssClasses: SearchBoxComponentCSSClasses;\n  templates: SearchBoxComponentTemplates;\n  query?: string;\n  showSubmit?: boolean;\n  showReset?: boolean;\n  showLoadingIndicator?: boolean;\n  refine?: (value: string) => void;\n  autofocus?: boolean;\n  searchAsYouType?: boolean;\n  isSearchStalled?: boolean;\n  disabled?: boolean;\n  onChange?: (event: Event) => void;\n  onSubmit?: (event: Event) => void;\n  onReset?: (event: Event) => void;\n};\n\nconst defaultProps = {\n  query: '',\n  showSubmit: true,\n  showReset: true,\n  showLoadingIndicator: true,\n  autofocus: false,\n  searchAsYouType: true,\n  isSearchStalled: false,\n  disabled: false,\n  onChange: noop,\n  onSubmit: noop,\n  onReset: noop,\n  refine: noop,\n};\n\ntype SearchBoxPropsWithDefaultProps = SearchBoxProps &\n  Readonly<typeof defaultProps>;\n\ntype SearchBoxState = {\n  query: string;\n  focused: boolean;\n};\n\nclass SearchBox extends Component<\n  SearchBoxPropsWithDefaultProps,\n  SearchBoxState\n> {\n  public static defaultProps = defaultProps;\n\n  public state = {\n    query: this.props.query,\n    focused: false,\n  };\n\n  private input = createRef<HTMLInputElement>();\n\n  /**\n   * This public method is used in the RefinementList SFFV search box\n   * to reset the input state when an item is selected.\n   *\n   * @see RefinementList#componentWillReceiveProps\n   * @return {undefined}\n   */\n  public resetInput() {\n    this.setState({ query: '' });\n  }\n\n  private onInput = (event: Event) => {\n    const { searchAsYouType, refine, onChange } = this.props;\n    const query = (event.target as HTMLInputElement).value;\n\n    if (searchAsYouType) {\n      refine(query);\n    }\n    this.setState({ query });\n\n    onChange(event);\n  };\n\n  public componentWillReceiveProps(nextProps: SearchBoxPropsWithDefaultProps) {\n    /**\n     * when the user is typing, we don't want to replace the query typed\n     * by the user (state.query) with the query exposed by the connector (props.query)\n     * see: https://github.com/algolia/instantsearch.js/issues/4141\n     */\n    if (!this.state.focused && nextProps.query !== this.state.query) {\n      this.setState({ query: nextProps.query });\n    }\n  }\n\n  private onSubmit = (event: Event) => {\n    const { searchAsYouType, refine, onSubmit } = this.props;\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.input.current) {\n      this.input.current.blur();\n    }\n\n    if (!searchAsYouType) {\n      refine(this.state.query);\n    }\n\n    onSubmit(event);\n\n    return false;\n  };\n\n  private onReset = (event: Event) => {\n    const { refine, onReset } = this.props;\n    const query = '';\n\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n\n    refine(query);\n    this.setState({ query });\n\n    onReset(event);\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  public render() {\n    const {\n      cssClasses,\n      placeholder,\n      autofocus,\n      showSubmit,\n      showReset,\n      showLoadingIndicator,\n      templates,\n      isSearchStalled,\n    } = this.props;\n\n    return (\n      <div className={cssClasses.root}>\n        <form\n          action=\"\"\n          role=\"search\"\n          className={cssClasses.form}\n          noValidate\n          onSubmit={this.onSubmit}\n          onReset={this.onReset}\n        >\n          <input\n            ref={this.input}\n            value={this.state.query}\n            disabled={this.props.disabled}\n            className={cssClasses.input}\n            type=\"search\"\n            placeholder={placeholder}\n            autoFocus={autofocus}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            // @ts-expect-error `spellCheck` attribute is missing in preact JSX types\n            spellCheck=\"false\"\n            maxLength={512}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n\n          <Template\n            templateKey=\"submit\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.submit,\n              type: 'submit',\n              title: 'Submit the search query.',\n              hidden: !showSubmit,\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          <Template\n            templateKey=\"reset\"\n            rootTagName=\"button\"\n            rootProps={{\n              className: cssClasses.reset,\n              type: 'reset',\n              title: 'Clear the search query.',\n              hidden: !(\n                showReset &&\n                this.state.query.trim() &&\n                !isSearchStalled\n              ),\n            }}\n            templates={templates}\n            data={{ cssClasses }}\n          />\n\n          {showLoadingIndicator && (\n            <Template\n              templateKey=\"loadingIndicator\"\n              rootTagName=\"span\"\n              rootProps={{\n                className: cssClasses.loadingIndicator,\n                hidden: !isSearchStalled,\n              }}\n              templates={templates}\n              data={{ cssClasses }}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","/** @jsx h */\n\nimport type { JSX } from 'preact';\nimport { h, createRef, Component } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { isSpecialClick, isEqual } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport Template from '../Template/Template';\nimport RefinementListItem from './RefinementListItem';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../SearchBox/SearchBox';\nimport SearchBox from '../SearchBox/SearchBox';\nimport type { HierarchicalMenuItem } from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport type { ComponentCSSClasses, CreateURL, Templates } from '../../types';\nimport type { RefinementListOwnCSSClasses } from '../../widgets/refinement-list/refinement-list';\nimport type { RatingMenuComponentCSSClasses } from '../../widgets/rating-menu/rating-menu';\nimport type { HierarchicalMenuComponentCSSClasses } from '../../widgets/hierarchical-menu/hierarchical-menu';\n\n// CSS types\ntype RefinementListOptionalClasses =\n  | 'noResults'\n  | 'checkbox'\n  | 'labelText'\n  | 'showMore'\n  | 'disabledShowMore'\n  | 'searchBox'\n  | 'count';\n\ntype RefinementListWidgetCSSClasses =\n  ComponentCSSClasses<RefinementListOwnCSSClasses>;\n\ntype RefinementListRequiredCSSClasses = Omit<\n  RefinementListWidgetCSSClasses,\n  RefinementListOptionalClasses\n> &\n  Partial<Pick<RefinementListWidgetCSSClasses, RefinementListOptionalClasses>>;\n\nexport type RefinementListComponentCSSClasses =\n  RefinementListRequiredCSSClasses & {\n    searchable?: SearchBoxComponentCSSClasses;\n  } & Partial<Pick<RatingMenuComponentCSSClasses, 'disabledItem'>> &\n    Partial<\n      Pick<HierarchicalMenuComponentCSSClasses, 'childList' | 'parentItem'>\n    >;\n\ntype FacetValue = {\n  value: string;\n  label: string;\n  highlighted?: string;\n  count?: number;\n  isRefined: boolean;\n  data?: HierarchicalMenuItem[] | null;\n};\n\nexport type RefinementListProps<TTemplates extends Templates> = {\n  createURL: CreateURL<string>;\n  cssClasses: RefinementListComponentCSSClasses;\n  depth?: number;\n  facetValues?: FacetValue[];\n  attribute?: string;\n  templateProps: PreparedTemplateProps<TTemplates>;\n  toggleRefinement: (value: string) => void;\n  showMore?: boolean;\n  toggleShowMore?: () => void;\n  isShowingMore?: boolean;\n  hasExhaustiveItems?: boolean;\n  canToggleShowMore?: boolean;\n  className?: string;\n  children?: JSX.Element;\n\n  // searchable props are optional, but will definitely be present in a searchable context\n  isFromSearch?: boolean;\n  searchIsAlwaysActive?: boolean;\n  searchFacetValues?: (query: string) => void;\n  searchPlaceholder?: string;\n  searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n};\n\nconst defaultProps = {\n  cssClasses: {},\n  depth: 0,\n};\n\ntype RefinementListPropsWithDefaultProps<TTemplates extends Templates> =\n  RefinementListProps<TTemplates> & Readonly<typeof defaultProps>;\n\ntype RefinementListItemTemplateData<TTemplates extends Templates> =\n  FacetValue & {\n    url: string;\n  } & Pick<\n      RefinementListProps<TTemplates>,\n      'attribute' | 'cssClasses' | 'isFromSearch'\n    >;\n\nfunction isHierarchicalMenuItem(\n  facetValue: FacetValue\n): facetValue is HierarchicalMenuItem {\n  return (facetValue as HierarchicalMenuItem).data !== undefined;\n}\n\nclass RefinementList<TTemplates extends Templates> extends Component<\n  RefinementListPropsWithDefaultProps<TTemplates>\n> {\n  public static defaultProps = defaultProps;\n\n  private searchBox = createRef<SearchBox>();\n\n  public constructor(props: RefinementListPropsWithDefaultProps<TTemplates>) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  public shouldComponentUpdate(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    const areFacetValuesDifferent = !isEqual(\n      this.props.facetValues,\n      nextProps.facetValues\n    );\n\n    return areFacetValuesDifferent;\n  }\n\n  private refine(facetValueToRefine: string) {\n    this.props.toggleRefinement(facetValueToRefine);\n  }\n\n  private _generateFacetItem(facetValue: FacetValue) {\n    let subItems;\n    if (\n      isHierarchicalMenuItem(facetValue) &&\n      Array.isArray(facetValue.data) &&\n      facetValue.data.length > 0\n    ) {\n      const { root, ...cssClasses } = this.props.cssClasses;\n\n      subItems = (\n        <RefinementList\n          {...this.props}\n          // We want to keep `root` required for external usage but not for the\n          // sub items.\n          cssClasses={cssClasses as RefinementListComponentCSSClasses}\n          depth={this.props.depth + 1}\n          facetValues={facetValue.data}\n          showMore={false}\n          className={this.props.cssClasses.childList}\n        />\n      );\n    }\n\n    const url = this.props.createURL(facetValue.value);\n    const templateData: RefinementListItemTemplateData<TTemplates> = {\n      ...facetValue,\n      url,\n      attribute: this.props.attribute,\n      cssClasses: this.props.cssClasses,\n      isFromSearch: this.props.isFromSearch,\n    };\n\n    let { value: key } = facetValue;\n    if (facetValue.isRefined !== undefined) {\n      key += `/${facetValue.isRefined}`;\n    }\n\n    if (facetValue.count !== undefined) {\n      key += `/${facetValue.count}`;\n    }\n\n    const refinementListItemClassName = cx(\n      this.props.cssClasses.item,\n      facetValue.isRefined && this.props.cssClasses.selectedItem,\n      !facetValue.count && this.props.cssClasses.disabledItem,\n      Boolean(\n        isHierarchicalMenuItem(facetValue) &&\n          Array.isArray(facetValue.data) &&\n          facetValue.data.length > 0\n      ) && this.props.cssClasses.parentItem!\n    );\n\n    return (\n      <RefinementListItem\n        templateKey=\"item\"\n        key={key}\n        facetValueToRefine={facetValue.value}\n        handleClick={this.handleItemClick}\n        isRefined={facetValue.isRefined}\n        className={refinementListItemClassName}\n        subItems={subItems}\n        templateData={templateData}\n        templateProps={this.props.templateProps}\n      />\n    );\n  }\n\n  // Click events on DOM tree like LABEL > INPUT will result in two click events\n  // instead of one.\n  // No matter the framework, see https://www.google.com/search?q=click+label+twice\n  //\n  // Thus making it hard to distinguish activation from deactivation because both click events\n  // are very close. Debounce is a solution but hacky.\n  //\n  // So the code here checks if the click was done on or in a LABEL. If this LABEL\n  // has a checkbox inside, we ignore the first click event because we will get another one.\n  //\n  // We also check if the click was done inside a link and then e.preventDefault() because we already\n  // handle the url\n  //\n  // Finally, we always stop propagation of the event to avoid multiple levels RefinementLists to fail: click\n  // on child would click on parent also\n  private handleItemClick({\n    facetValueToRefine,\n    isRefined,\n    originalEvent,\n  }: {\n    facetValueToRefine: string;\n    isRefined: boolean;\n    originalEvent: MouseEvent;\n  }) {\n    if (isSpecialClick(originalEvent)) {\n      // do not alter the default browser behavior\n      // if one special key is down\n      return;\n    }\n\n    if (\n      !(originalEvent.target instanceof HTMLElement) ||\n      !(originalEvent.target.parentNode instanceof HTMLElement)\n    ) {\n      return;\n    }\n\n    if (\n      isRefined &&\n      originalEvent.target.parentNode.querySelector(\n        'input[type=\"radio\"]:checked'\n      )\n    ) {\n      // Prevent refinement for being reset if the user clicks on an already checked radio button\n      return;\n    }\n\n    if (originalEvent.target.tagName === 'INPUT') {\n      this.refine(facetValueToRefine);\n      return;\n    }\n\n    let parent = originalEvent.target;\n\n    while (parent !== originalEvent.currentTarget) {\n      if (\n        parent.tagName === 'LABEL' &&\n        (parent.querySelector('input[type=\"checkbox\"]') ||\n          parent.querySelector('input[type=\"radio\"]'))\n      ) {\n        return;\n      }\n\n      if (parent.tagName === 'A' && (parent as HTMLAnchorElement).href) {\n        originalEvent.preventDefault();\n      }\n\n      parent = parent.parentNode as HTMLElement;\n    }\n\n    originalEvent.stopPropagation();\n\n    this.refine(facetValueToRefine);\n  }\n\n  public componentWillReceiveProps(\n    nextProps: RefinementListPropsWithDefaultProps<TTemplates>\n  ) {\n    if (this.searchBox.current && !nextProps.isFromSearch) {\n      this.searchBox.current.resetInput();\n    }\n  }\n\n  private refineFirstValue() {\n    const firstValue = this.props.facetValues && this.props.facetValues[0];\n    if (firstValue) {\n      const actualValue = firstValue.value;\n      this.props.toggleRefinement(actualValue);\n    }\n  }\n\n  public render() {\n    const showMoreButtonClassName = cx(\n      this.props.cssClasses.showMore,\n      !(this.props.showMore === true && this.props.canToggleShowMore) &&\n        this.props.cssClasses.disabledShowMore\n    );\n\n    const showMoreButton = this.props.showMore === true && (\n      <Template\n        {...this.props.templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: showMoreButtonClassName,\n          disabled: !this.props.canToggleShowMore,\n          onClick: this.props.toggleShowMore,\n        }}\n        data={{\n          isShowingMore: this.props.isShowingMore,\n        }}\n      />\n    );\n\n    const shouldDisableSearchBox =\n      this.props.searchIsAlwaysActive !== true &&\n      !(this.props.isFromSearch || !this.props.hasExhaustiveItems);\n\n    const searchBox = this.props.searchFacetValues && (\n      <div className={this.props.cssClasses.searchBox}>\n        <SearchBox\n          ref={this.searchBox}\n          placeholder={this.props.searchPlaceholder}\n          disabled={shouldDisableSearchBox}\n          cssClasses={this.props.cssClasses.searchable!}\n          templates={this.props.searchBoxTemplateProps!.templates}\n          onChange={(event: Event) =>\n            this.props.searchFacetValues!(\n              (event.target as HTMLInputElement).value\n            )\n          }\n          onReset={() => this.props.searchFacetValues!('')}\n          onSubmit={() => this.refineFirstValue()}\n          // This sets the search box to a controlled state because\n          // we don't rely on the `refine` prop but on `onChange`.\n          searchAsYouType={false}\n        />\n      </div>\n    );\n\n    const facetValues = this.props.facetValues &&\n      this.props.facetValues.length > 0 && (\n        <ul className={this.props.cssClasses.list}>\n          {this.props.facetValues.map(this._generateFacetItem, this)}\n        </ul>\n      );\n\n    const noResults = this.props.searchFacetValues &&\n      this.props.isFromSearch &&\n      (!this.props.facetValues || this.props.facetValues.length === 0) && (\n        <Template\n          {...this.props.templateProps}\n          templateKey=\"searchableNoResults\"\n          rootProps={{ className: this.props.cssClasses.noResults }}\n        />\n      );\n\n    const rootClassName = cx(\n      this.props.cssClasses.root,\n      (!this.props.facetValues || this.props.facetValues.length === 0) &&\n        this.props.cssClasses.noRefinementRoot,\n      this.props.className\n    );\n\n    return (\n      <div className={rootClassName}>\n        {this.props.children}\n        {searchBox}\n        {facetValues}\n        {noResults}\n        {showMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default RefinementList;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { HierarchicalMenuComponentTemplates } from './hierarchical-menu';\n\nconst defaultTemplates: HierarchicalMenuComponentTemplates = {\n  item({ url, label, count, cssClasses, isRefined }) {\n    return (\n      <a\n        className={cx(\n          cx(cssClasses.link),\n          cx(isRefined ? cssClasses.selectedItemLink : undefined)\n        )}\n        href={url}\n      >\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  HierarchicalMenuItem,\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuRenderState,\n  HierarchicalMenuWidgetDescription,\n} from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport connectHierarchicalMenu from '../../connectors/hierarchical-menu/connectHierarchicalMenu';\nimport defaultTemplates from './defaultTemplates';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type {\n  TransformItems,\n  Template,\n  WidgetFactory,\n  RendererOptions,\n  SortBy,\n  ComponentCSSClasses,\n} from '../../types';\nimport { component } from '../../lib/suit';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hierarchical-menu',\n});\nconst suit = component('HierarchicalMenu');\n\ntype HierarchicalMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    label: string;\n    cssClasses: HierarchicalMenuCSSClasses;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n}>;\n\nexport type HierarchicalMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to the child list element.\n   */\n  childList: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each parent item element.\n   */\n  parentItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to the link of each selected item element (when using the default template).\n   */\n  selectedItemLink: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more element.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type HierarchicalMenuComponentCSSClasses =\n  ComponentCSSClasses<HierarchicalMenuCSSClasses>;\n\nexport type HierarchicalMenuComponentTemplates =\n  Required<HierarchicalMenuTemplates>;\n\nexport type HierarchicalMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of attributes to use to generate the hierarchy of the menu.\n   */\n  attributes: string[];\n  /**\n   * Separator used in the attributes to separate level values.\n   */\n  separator?: string;\n  /**\n   * Prefix path to use if the first level is not the root level.\n   */\n  rootPath?: string;\n  /**\n   * Show the siblings of the selected parent level of the current refined value.\n   *\n   * With `showParentLevel` set to `true` (default):\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   *     - lvl2\n   *     - lvl2\n   *   - lvl 1\n   *   - lvl 1\n   * - Parent lvl0\n   * - Parent lvl0\n   *\n   * With `showParentLevel` set to `false`:\n   * - Parent lvl0\n   *   - **lvl1**\n   *     - **lvl2**\n   * - Parent lvl0\n   * - Parent lvl0\n   */\n  showParentLevel?: boolean;\n  /**\n   * Max number of values to display.\n   */\n  limit?: number;\n  /**\n   * Whether to display the \"show more\" button.\n   */\n  showMore?: boolean;\n  /**\n   * Max number of values to display when showing more.\n   * does not impact the root level.\n   */\n  showMoreLimit?: number;\n  /**\n   * How to sort refinements. Possible values: `count|isRefined|name:asc|name:desc`.\n   * You can also use a sort function that behaves like the standard Javascript [compareFunction](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Syntax).\n   */\n  sortBy?: SortBy<HierarchicalMenuItem>;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<HierarchicalMenuItem>;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HierarchicalMenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: HierarchicalMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    cssClasses,\n    containerNode,\n    showMore,\n    templates,\n    renderState,\n  }: {\n    cssClasses: HierarchicalMenuComponentCSSClasses;\n    containerNode: HTMLElement;\n    showMore: boolean;\n    templates: HierarchicalMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HierarchicalMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      createURL,\n      items,\n      refine,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: HierarchicalMenuRenderState &\n      RendererOptions<HierarchicalMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        showMore={showMore}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The hierarchical menu widget is used to create a navigation based on a hierarchy of facet attributes.\n *\n * It is commonly used for categories with subcategories.\n *\n * All attributes (lvl0, lvl1 here) must be declared as [attributes for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting) in your\n * Algolia settings.\n *\n * By default, the separator we expect is ` > ` (with spaces) but you can use\n * a different one by using the `separator` option.\n * @requirements\n * Your objects must be formatted in a specific way to be\n * able to display hierarchical menus. Here's an example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": \"fruits\",\n *     \"lvl1\": \"fruits > citrus\"\n *   }\n * }\n * ```\n *\n * Every level must be specified entirely.\n * It's also possible to have multiple values per level, for example:\n *\n * ```javascript\n * {\n *   \"objectID\": \"123\",\n *   \"name\": \"orange\",\n *   \"categories\": {\n *     \"lvl0\": [\"fruits\", \"vitamins\"],\n *     \"lvl1\": [\"fruits > citrus\", \"vitamins > C\"]\n *   }\n * }\n * ```\n * @type {WidgetFactory}\n * @devNovel HierarchicalMenu\n * @category filter\n * @param {HierarchicalMenuWidgetParams} widgetParams The HierarchicalMenu widget options.\n * @return {Widget} A new HierarchicalMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.hierarchicalMenu({\n *     container: '#hierarchical-categories',\n *     attributes: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2'],\n *   })\n * ]);\n */\nexport type HierarchicalMenuWidget = WidgetFactory<\n  HierarchicalMenuWidgetDescription & { $$widgetType: 'ais.hierarchicalMenu' },\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetParams\n>;\n\nconst hierarchicalMenu: HierarchicalMenuWidget = function hierarchicalMenu(\n  widgetParams\n) {\n  const {\n    container,\n    attributes,\n    separator,\n    rootPath,\n    showParentLevel,\n    limit,\n    showMore = false,\n    showMoreLimit,\n    sortBy,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    childList: cx(\n      suit({ descendantName: 'list', modifierName: 'child' }),\n      userCssClasses.childList\n    ),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    parentItem: cx(\n      suit({ descendantName: 'item', modifierName: 'parent' }),\n      userCssClasses.parentItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    selectedItemLink: cx(\n      suit({ descendantName: 'link', modifierName: 'selected' }),\n      userCssClasses.selectedItemLink\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    cssClasses,\n    containerNode,\n    templates,\n    showMore,\n    renderState: {},\n  });\n\n  const makeWidget = connectHierarchicalMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attributes,\n      separator,\n      rootPath,\n      showParentLevel,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.hierarchicalMenu',\n  };\n};\n\nexport default hierarchicalMenu;\n","import type { HitsComponentTemplates } from '../../components/Hits/Hits';\n\nconst defaultTemplates: HitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  HitsConnectorParams,\n  HitsRenderState,\n  HitsWidgetDescription,\n} from '../../connectors/hits/connectHits';\nimport connectHits from '../../connectors/hits/connectHits';\nimport type {\n  HitsComponentCSSClasses,\n  HitsComponentTemplates,\n} from '../../components/Hits/Hits';\nimport Hits from '../../components/Hits/Hits';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport type {\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  WidgetFactory,\n  Renderer,\n  InsightsClient,\n} from '../../types';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { SearchResults } from 'algoliasearch-helper';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'hits' });\nconst suit = component('Hits');\nconst HitsWithInsightsListener = withInsightsListener(Hits);\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: HitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<HitsComponentTemplates>;\n    };\n    templates: HitsTemplates;\n  }): Renderer<HitsRenderState, Partial<HitsWidgetParams>> =>\n  (\n    { hits: receivedHits, results, instantSearchInstance, insights, bindEvent },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <HitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={receivedHits}\n        results={results}\n        templateProps={renderState.templateProps}\n        insights={insights as InsightsClient}\n        sendEvent={(event: InsightsEvent) => {\n          instantSearchInstance.sendEventToInsights(event);\n        }}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nexport type HitsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the wrapping element when no results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * CSS class to add to the list of results.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each result.\n   */\n  item: string | string[];\n}>;\n\nexport type HitsTemplates = Partial<{\n  /**\n   * Template to use when there are no results.\n   *\n   * @default 'No Results'\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * Template to use for each result. This template will receive an object containing a single record.\n   *\n   * @default ''\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type HitsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: HitsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: HitsCSSClasses;\n};\n\nexport type HitsWidget = WidgetFactory<\n  HitsWidgetDescription & { $$widgetType: 'ais.hits' },\n  HitsConnectorParams,\n  HitsWidgetParams\n>;\n\nconst hits: HitsWidget = function hits(widgetParams) {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = withInsights(connectHits)(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ escapeHTML, transformItems }),\n    $$widgetType: 'ais.hits',\n  };\n};\n\nexport default hits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type { BindEventForHits, SendEventForHits } from '../../lib/utils';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type { HitsCSSClasses, HitsTemplates } from '../../widgets/hits/hits';\n\nexport type HitsComponentCSSClasses = ComponentCSSClasses<HitsCSSClasses>;\nexport type HitsComponentTemplates = Required<HitsTemplates>;\n\nexport type HitsProps = {\n  results: SearchResults;\n  hits: Hit[];\n  sendEvent?: SendEventForHits;\n  bindEvent?: BindEventForHits;\n  cssClasses: HitsComponentCSSClasses;\n  templateProps: PreparedTemplateProps<HitsComponentTemplates>;\n};\n\nconst Hits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  cssClasses,\n  templateProps,\n}: HitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      <ol className={cssClasses.list}>\n        {hits.map((hit, index) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: index,\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Hits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\n\nexport type SelectorOption = {\n  value?: string | number;\n  label: string;\n};\n\nexport type SelectorComponentCSSClasses = {\n  root: string;\n  select: string;\n  option: string;\n};\n\nexport type SelectorProps = {\n  cssClasses: SelectorComponentCSSClasses;\n  currentValue?: string | number;\n  options: SelectorOption[];\n  setValue(value: SelectorOption['value']): void;\n};\n\nfunction Selector({\n  currentValue,\n  options,\n  cssClasses,\n  setValue,\n}: SelectorProps) {\n  return (\n    <select\n      className={cx(cssClasses.select)}\n      onChange={(event) => setValue((event.target as HTMLSelectElement).value)}\n      value={`${currentValue}`}\n    >\n      {options.map((option) => (\n        <option\n          className={cx(cssClasses.option)}\n          key={option.label + option.value}\n          value={`${option.value}`}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Selector;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Selector from '../../components/Selector/Selector';\nimport type {\n  HitsPerPageConnectorParams,\n  HitsPerPageRenderState,\n  HitsPerPageWidgetDescription,\n} from '../../connectors/hits-per-page/connectHitsPerPage';\nimport connectHitsPerPage from '../../connectors/hits-per-page/connectHitsPerPage';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n  find,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { ComponentCSSClasses, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'hits-per-page',\n});\nconst suit = component('HitsPerPage');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ComponentCSSClasses<HitsPerPageCSSClasses>;\n  }) =>\n  ({ items, refine }: HitsPerPageRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    const { value: currentValue } =\n      find(items, ({ isRefined }) => isRefined) || {};\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentValue}\n          options={items}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\nexport type HitsPerPageCSSClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type HitsPerPageWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: HitsPerPageCSSClasses;\n};\n\nexport type HitsPerPageWidget = WidgetFactory<\n  HitsPerPageWidgetDescription & { $$widgetType: 'ais.hitsPerPage' },\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetParams\n>;\n\nconst hitsPerPage: HitsPerPageWidget = function hitsPerPage(widgetParams) {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectHitsPerPage(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ items, transformItems }),\n    $$widgetType: 'ais.hitsPerPage',\n  };\n};\n\nexport default hitsPerPage;\n","import type { InfiniteHitsComponentTemplates } from '../../components/InfiniteHits/InfiniteHits';\n\nconst defaultTemplates: InfiniteHitsComponentTemplates = {\n  empty() {\n    return 'No results';\n  },\n  showPreviousText() {\n    return 'Show previous results';\n  },\n  showMoreText() {\n    return 'Show more results';\n  },\n  item(data) {\n    return JSON.stringify(data, null, 2);\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type {\n  InfiniteHitsComponentCSSClasses,\n  InfiniteHitsComponentTemplates,\n} from '../../components/InfiniteHits/InfiniteHits';\nimport InfiniteHits from '../../components/InfiniteHits/InfiniteHits';\nimport type {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsRenderState,\n  InfiniteHitsCache,\n  InfiniteHitsWidgetDescription,\n} from '../../connectors/infinite-hits/connectInfiniteHits';\nimport connectInfiniteHits from '../../connectors/infinite-hits/connectInfiniteHits';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport { withInsights, withInsightsListener } from '../../lib/insights';\nimport type {\n  WidgetFactory,\n  Template,\n  TemplateWithBindEvent,\n  Hit,\n  InsightsClient,\n  Renderer,\n} from '../../types';\nimport defaultTemplates from './defaultTemplates';\nimport type { InsightsEvent } from '../../middlewares/createInsightsMiddleware';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'infinite-hits',\n});\nconst suit = component('InfiniteHits');\nconst InfiniteHitsWithInsightsListener = withInsightsListener(InfiniteHits);\n\nexport type InfiniteHitsCSSClasses = Partial<{\n  /**\n   * The root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * The root container without results.\n   */\n  emptyRoot: string | string[];\n\n  /**\n   * The list of results.\n   */\n  list: string | string[];\n\n  /**\n   * The list item.\n   */\n  item: string | string[];\n\n  /**\n   * The “Show previous” button.\n   */\n  loadPrevious: string | string[];\n\n  /**\n   * The disabled “Show previous” button.\n   */\n  disabledLoadPrevious: string | string[];\n\n  /**\n   * The “Show more” button.\n   */\n  loadMore: string | string[];\n\n  /**\n   * The disabled “Show more” button.\n   */\n  disabledLoadMore: string | string[];\n}>;\n\nexport type InfiniteHitsTemplates = Partial<{\n  /**\n   * The template to use when there are no results.\n   */\n  empty: Template<SearchResults>;\n\n  /**\n   * The template to use for the “Show previous” label.\n   */\n  showPreviousText: Template;\n\n  /**\n   * The template to use for the “Show more” label.\n   */\n  showMoreText: Template;\n\n  /**\n   * The template to use for each result.\n   */\n  item: TemplateWithBindEvent<\n    Hit & {\n      // @deprecated the index in the hits array, use __position instead, which is the absolute position\n      __hitIndex: number;\n    }\n  >;\n}>;\n\nexport type InfiniteHitsWidgetParams = {\n  /**\n   * The CSS Selector or `HTMLElement` to insert the widget into.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: InfiniteHitsCSSClasses;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: InfiniteHitsTemplates;\n\n  /**\n   * Reads and writes hits from/to cache.\n   * When user comes back to the search page after leaving for product page,\n   * this helps restore InfiniteHits and its scroll position.\n   */\n  cache?: InfiniteHitsCache;\n};\n\nexport type InfiniteHitsWidget = WidgetFactory<\n  InfiniteHitsWidgetDescription & { $$widgetType: 'ais.infiniteHits' },\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showPrevious: hasShowPrevious,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: InfiniteHitsComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<InfiniteHitsComponentTemplates>;\n    };\n    templates: InfiniteHitsTemplates;\n    showPrevious?: boolean;\n  }): Renderer<InfiniteHitsRenderState, Partial<InfiniteHitsWidgetParams>> =>\n  (\n    {\n      hits,\n      results,\n      showMore,\n      showPrevious,\n      isFirstPage,\n      isLastPage,\n      instantSearchInstance,\n      insights,\n      bindEvent,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <InfiniteHitsWithInsightsListener\n        cssClasses={cssClasses}\n        hits={hits}\n        results={results}\n        hasShowPrevious={hasShowPrevious}\n        showPrevious={showPrevious}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        insights={insights as InsightsClient}\n        sendEvent={(event: InsightsEvent) => {\n          instantSearchInstance.sendEventToInsights(event);\n        }}\n        bindEvent={bindEvent}\n      />,\n      containerNode\n    );\n  };\n\nconst infiniteHits: InfiniteHitsWidget = (widgetParams) => {\n  const {\n    container,\n    escapeHTML,\n    transformItems,\n    templates = {},\n    cssClasses: userCssClasses = {},\n    showPrevious,\n    cache,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    emptyRoot: cx(suit({ modifierName: 'empty' }), userCssClasses.emptyRoot),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    loadPrevious: cx(\n      suit({ descendantName: 'loadPrevious' }),\n      userCssClasses.loadPrevious\n    ),\n    disabledLoadPrevious: cx(\n      suit({ descendantName: 'loadPrevious', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadPrevious\n    ),\n    loadMore: cx(suit({ descendantName: 'loadMore' }), userCssClasses.loadMore),\n    disabledLoadMore: cx(\n      suit({ descendantName: 'loadMore', modifierName: 'disabled' }),\n      userCssClasses.disabledLoadMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showPrevious,\n    renderState: {},\n  });\n\n  const makeWidget = withInsights(connectInfiniteHits)(\n    specializedRenderer,\n    () => render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      escapeHTML,\n      transformItems,\n      showPrevious,\n      cache,\n    }),\n    $$widgetType: 'ais.infiniteHits',\n  };\n};\n\nexport default infiniteHits;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type { SearchResults } from 'algoliasearch-helper';\nimport type { ComponentCSSClasses, Hit } from '../../types';\nimport type {\n  InfiniteHitsCSSClasses,\n  InfiniteHitsTemplates,\n} from '../../widgets/infinite-hits/infinite-hits';\nimport type { SendEventForHits, BindEventForHits } from '../../lib/utils';\n\nexport type InfiniteHitsComponentCSSClasses =\n  ComponentCSSClasses<InfiniteHitsCSSClasses>;\nexport type InfiniteHitsComponentTemplates = Required<InfiniteHitsTemplates>;\n\nexport type InfiniteHitsProps = {\n  cssClasses: InfiniteHitsComponentCSSClasses;\n  hits: Hit[];\n  results: SearchResults;\n  hasShowPrevious: boolean;\n  showPrevious: () => void;\n  showMore: () => void;\n  templateProps: {\n    [key: string]: any;\n    templates: InfiniteHitsComponentTemplates;\n  };\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  sendEvent: SendEventForHits;\n  bindEvent: BindEventForHits;\n};\n\nconst InfiniteHits = ({\n  results,\n  hits,\n  bindEvent,\n  sendEvent,\n  hasShowPrevious,\n  showPrevious,\n  showMore,\n  isFirstPage,\n  isLastPage,\n  cssClasses,\n  templateProps,\n}: InfiniteHitsProps) => {\n  if (results.hits.length === 0) {\n    return (\n      <Template\n        {...templateProps}\n        templateKey=\"empty\"\n        rootProps={{\n          className: cx(cssClasses.root, cssClasses.emptyRoot),\n        }}\n        data={results}\n      />\n    );\n  }\n\n  return (\n    <div className={cssClasses.root}>\n      {hasShowPrevious && (\n        <Template\n          {...templateProps}\n          templateKey=\"showPreviousText\"\n          rootTagName=\"button\"\n          rootProps={{\n            className: cx(\n              cssClasses.loadPrevious,\n              isFirstPage && cssClasses.disabledLoadPrevious\n            ),\n            disabled: isFirstPage,\n            onClick: showPrevious,\n          }}\n        />\n      )}\n\n      <ol className={cssClasses.list}>\n        {hits.map((hit, position) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"li\"\n            rootProps={{ className: cssClasses.item }}\n            key={hit.objectID}\n            data={{\n              ...hit,\n              __hitIndex: position,\n            }}\n            bindEvent={bindEvent}\n            sendEvent={sendEvent}\n          />\n        ))}\n      </ol>\n\n      <Template\n        {...templateProps}\n        templateKey=\"showMoreText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cx(\n            cssClasses.loadMore,\n            isLastPage && cssClasses.disabledLoadMore\n          ),\n          disabled: isLastPage,\n          onClick: showMore,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InfiniteHits;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\nimport type { MenuComponentTemplates } from './menu';\n\nconst defaultTemplates: MenuComponentTemplates = {\n  item({ cssClasses, url, label, count }) {\n    return (\n      <a className={cx(cssClasses.link)} href={url}>\n        <span className={cx(cssClasses.label)}>{label}</span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </a>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu' });\nconst suit = component('Menu');\n\nexport type MenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each link (when using the default template).\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each label (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the show more button.\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more button.\n   */\n  disabledShowMore: string | string[];\n}>;\n\nexport type MenuTemplates = Partial<{\n  /**\n   * Item template. The string template gets the same values as the function.\n   */\n  item: Template<{\n    count: number;\n    cssClasses: MenuCSSClasses;\n    isRefined: boolean;\n    label: string;\n    url: string;\n    value: string;\n  }>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{\n    isShowingMore: boolean;\n  }>;\n}>;\n\nexport type MenuComponentCSSClasses = ComponentCSSClasses<MenuCSSClasses>;\n\nexport type MenuComponentTemplates = Required<MenuTemplates>;\n\nexport type MenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n    showMore,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuComponentTemplates>;\n    };\n    templates: MenuTemplates;\n    showMore?: boolean;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n      isShowingMore,\n      toggleShowMore,\n      canToggleShowMore,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const facetValues = items.map((facetValue) => ({\n      ...facetValue,\n      url: createURL(facetValue.value),\n    }));\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={facetValues}\n        showMore={showMore}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menu' },\n  MenuConnectorParams,\n  MenuWidgetParams\n>;\n\nconst menu: MenuWidget = function menu(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n    showMore,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      transformItems,\n    }),\n    $$widgetType: 'ais.menu',\n  };\n};\n\nexport default menu;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport { find } from '../../lib/utils';\nimport Template from '../Template/Template';\nimport type {\n  MenuSelectCSSClasses,\n  MenuSelectTemplates,\n} from '../../widgets/menu-select/menu-select';\nimport type { MenuRenderState } from '../../connectors/menu/connectMenu';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type MenuSelectComponentCSSClasses =\n  ComponentCSSClasses<MenuSelectCSSClasses>;\n\nexport type MenuSelectComponentTemplates = Required<MenuSelectTemplates>;\n\ntype MenuItem = {\n  /**\n   * The value of the menu item.\n   **/\n  value: string;\n  /**\n   * Human-readable value of the menu item.\n   **/\n  label: string;\n  /**\n   * Number of results matched after refinement is applied.\n   **/\n  count: number;\n  /**\n   * Indicates if the refinement is applied.\n   **/\n  isRefined: boolean;\n};\n\ntype Props = {\n  cssClasses: MenuSelectComponentCSSClasses;\n  items: MenuItem[];\n  refine: MenuRenderState['refine'];\n  templateProps: {\n    templates: MenuSelectComponentTemplates;\n  };\n};\n\nfunction MenuSelect({ cssClasses, templateProps, items, refine }: Props) {\n  const { value: selectedValue } = find(items, (item) => item.isRefined) || {\n    value: '',\n  };\n\n  return (\n    <div\n      className={cx(\n        cssClasses.root,\n        items.length === 0 && cssClasses.noRefinementRoot\n      )}\n    >\n      <select\n        className={cssClasses.select}\n        value={selectedValue}\n        onChange={(event) => {\n          refine((event.target as HTMLSelectElement).value);\n        }}\n      >\n        <Template\n          {...templateProps}\n          templateKey=\"defaultOption\"\n          rootTagName=\"option\"\n          rootProps={{\n            value: '',\n            className: cssClasses.option,\n          }}\n        />\n\n        {items.map((item) => (\n          <Template\n            {...templateProps}\n            templateKey=\"item\"\n            rootTagName=\"option\"\n            rootProps={{\n              value: item.value,\n              className: cssClasses.option,\n            }}\n            key={item.value}\n            data={item}\n          />\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default MenuSelect;\n","import type { MenuSelectComponentTemplates } from '../../components/MenuSelect/MenuSelect';\nimport { formatNumber } from '../../lib/formatNumber';\n\nconst defaultTemplates: MenuSelectComponentTemplates = {\n  item({ label, count }) {\n    return `${label} (${formatNumber(count)})`;\n  },\n  defaultOption() {\n    return 'See all';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  MenuConnectorParams,\n  MenuRenderState,\n  MenuWidgetDescription,\n} from '../../connectors/menu/connectMenu';\nimport connectMenu from '../../connectors/menu/connectMenu';\nimport type {\n  MenuSelectComponentCSSClasses,\n  MenuSelectComponentTemplates,\n} from '../../components/MenuSelect/MenuSelect';\nimport MenuSelect from '../../components/MenuSelect/MenuSelect';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'menu-select' });\nconst suit = component('MenuSelect');\n\nexport type MenuSelectCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root when there are no items to display\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the select element.\n   */\n  select: string | string[];\n  /**\n   * CSS class to add to the option element.\n   */\n  option: string | string[];\n}>;\n\nexport type MenuSelectTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `count`, `isRefined` and `value` data properties.\n   */\n  item: Template<{\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n  }>;\n  /**\n   * Label of the \"see all\" option in the select.\n   */\n  defaultOption: Template;\n}>;\n\nexport type MenuSelectWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Customize the output through templating.\n   */\n  templates?: MenuSelectTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: MenuSelectCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: MenuSelectComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<MenuSelectComponentTemplates>;\n    };\n    templates: MenuSelectTemplates;\n  }) =>\n  (\n    {\n      refine,\n      items,\n      instantSearchInstance,\n    }: MenuRenderState & RendererOptions<MenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <MenuSelect\n        cssClasses={cssClasses}\n        items={items}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type MenuSelectWidget = WidgetFactory<\n  MenuWidgetDescription & { $$widgetType: 'ais.menuSelect' },\n  MenuConnectorParams,\n  MenuSelectWidgetParams\n>;\n\nconst menuSelect: MenuSelectWidget = function menuSelect(widgetParams) {\n  const {\n    container,\n    attribute,\n    sortBy = ['name:asc'],\n    limit = 10,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, limit, sortBy, transformItems }),\n    $$widgetType: 'ais.menuSelect',\n  };\n};\n\nexport default menuSelect;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { NumericMenuComponentTemplates } from './numeric-menu';\n\nconst defaultTemplates: NumericMenuComponentTemplates = {\n  item({ cssClasses, attribute, label, isRefined }) {\n    return (\n      <label className={cssClasses.label}>\n        <input\n          type=\"radio\"\n          className={cssClasses.radio}\n          name={attribute}\n          defaultChecked={isRefined}\n        />\n        <span className={cssClasses.labelText}>{label}</span>\n      </label>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  NumericMenuConnectorParams,\n  NumericMenuRenderState,\n  NumericMenuWidgetDescription,\n} from '../../connectors/numeric-menu/connectNumericMenu';\nimport connectNumericMenu from '../../connectors/numeric-menu/connectNumericMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  Renderer,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'numeric-menu' });\nconst suit = component('NumericMenu');\n\nconst renderer =\n  ({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    attribute: string;\n    cssClasses: NumericMenuComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<NumericMenuTemplates>;\n    };\n    templates: NumericMenuTemplates;\n  }): Renderer<NumericMenuRenderState, Partial<NumericMenuWidgetParams>> =>\n  (\n    { createURL, instantSearchInstance, refine, items },\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n        attribute={attribute}\n      />,\n      containerNode\n    );\n  };\n\nexport type NumericMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n\n  /**\n   * CSS class to add to each selected item element.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS class to add to each label element.\n   */\n  label: string | string[];\n\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n\n  /**\n   * CSS class to add to each radio element (when using the default template).\n   */\n  radio: string | string[];\n}>;\n\nexport type NumericMenuComponentCSSClasses =\n  ComponentCSSClasses<NumericMenuCSSClasses>;\n\nexport type NumericMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `label` (the name in the configuration), `isRefined`, `url`, `value` (the setting for the filter) data properties.\n   */\n  item: Template<{\n    /**\n     * The name of the attribute.\n     */\n    attribute: string;\n\n    /**\n     * The label for the option.\n     */\n    label: string;\n\n    /**\n     * The encoded URL of the bounds object with a {start, end} form. This\n     * value can be used verbatim in the webpage and can be read by refine\n     * directly. If you want to inspect the value, you can do JSON.parse(window.decodeURI(value))\n     * to get the object.\n     */\n    value: string;\n\n    /**\n     *  Whether or not the refinement is selected.\n     */\n    isRefined: boolean;\n\n    /**\n     * The URL with the applied refinement.\n     */\n    url: string;\n\n    /**\n     * The CSS classes provided to the widget.\n     */\n    cssClasses: NumericMenuComponentCSSClasses;\n  }>;\n}>;\n\nexport type NumericMenuComponentTemplates = Required<NumericMenuTemplates>;\n\nexport type NumericMenuWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: NumericMenuTemplates;\n\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: NumericMenuCSSClasses;\n};\n\nexport type NumericMenuWidget = WidgetFactory<\n  NumericMenuWidgetDescription & { $$widgetType: 'ais.numericMenu' },\n  NumericMenuConnectorParams,\n  NumericMenuWidgetParams\n>;\n\nconst numericMenu: NumericMenuWidget = function numericMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    items,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    radio: cx(suit({ descendantName: 'radio' }), userCssClasses.radio),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    attribute,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectNumericMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      items,\n      transformItems,\n    }),\n    $$widgetType: 'ais.numericMenu',\n  };\n};\n\nexport default numericMenu;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\n\nimport { isSpecialClick } from '../../lib/utils';\nimport type {\n  PaginationCSSClasses,\n  PaginationTemplates,\n} from '../../widgets/pagination/pagination';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type PaginationComponentCSSClasses =\n  ComponentCSSClasses<PaginationCSSClasses>;\n\nexport type PaginationComponentTemplates = Required<PaginationTemplates>;\n\nexport type PaginationProps = {\n  createURL(value: number): string;\n  cssClasses: PaginationComponentCSSClasses;\n  templates: PaginationComponentTemplates;\n  currentPage: number;\n  nbPages: number;\n  pages: number[];\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  setCurrentPage(value: number): void;\n  showFirst?: boolean;\n  showLast?: boolean;\n  showPrevious?: boolean;\n  showNext?: boolean;\n};\n\nfunction Pagination(props: PaginationProps) {\n  function createClickHandler(pageNumber: number) {\n    return (event: MouseEvent) => {\n      if (isSpecialClick(event)) {\n        // do not alter the default browser behavior\n        // if one special key is down\n        return;\n      }\n      event.preventDefault();\n      props.setCurrentPage(pageNumber);\n    };\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.nbPages <= 1 && props.cssClasses.noRefinementRoot\n      )}\n    >\n      <ul className={props.cssClasses.list}>\n        {props.showFirst && (\n          <PaginationLink\n            ariaLabel=\"First\"\n            className={props.cssClasses.firstPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.first}\n            pageNumber={0}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showPrevious && (\n          <PaginationLink\n            ariaLabel=\"Previous\"\n            className={props.cssClasses.previousPageItem}\n            isDisabled={props.isFirstPage}\n            label={props.templates.previous}\n            pageNumber={props.currentPage - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.pages.map((pageNumber) => (\n          <PaginationLink\n            key={pageNumber}\n            ariaLabel={`${pageNumber + 1}`}\n            className={props.cssClasses.pageItem}\n            isSelected={pageNumber === props.currentPage}\n            label={`${pageNumber + 1}`}\n            pageNumber={pageNumber}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        ))}\n\n        {props.showNext && (\n          <PaginationLink\n            ariaLabel=\"Next\"\n            className={props.cssClasses.nextPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.next}\n            pageNumber={props.currentPage + 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n\n        {props.showLast && (\n          <PaginationLink\n            ariaLabel=\"Last\"\n            className={props.cssClasses.lastPageItem}\n            isDisabled={props.isLastPage}\n            label={props.templates.last}\n            pageNumber={props.nbPages - 1}\n            createURL={props.createURL}\n            cssClasses={props.cssClasses}\n            createClickHandler={createClickHandler}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\ntype PaginationLinkProps = {\n  label: string;\n  ariaLabel: string;\n  pageNumber: number;\n  isDisabled?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  cssClasses: PaginationComponentCSSClasses;\n  createURL(value: number): string;\n  createClickHandler: (pageNumber: number) => (event: MouseEvent) => void;\n};\n\nfunction PaginationLink({\n  label,\n  ariaLabel,\n  pageNumber,\n  className,\n  isDisabled = false,\n  isSelected = false,\n  cssClasses,\n  createURL,\n  createClickHandler,\n}: PaginationLinkProps) {\n  return (\n    <li\n      className={cx(\n        cssClasses.item,\n        className,\n        isDisabled && cssClasses.disabledItem,\n        isSelected && cssClasses.selectedItem\n      )}\n    >\n      {isDisabled ? (\n        <span\n          className={cssClasses.link}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      ) : (\n        <a\n          className={cssClasses.link}\n          aria-label={ariaLabel}\n          href={createURL(pageNumber)}\n          onClick={createClickHandler(pageNumber)}\n          dangerouslySetInnerHTML={{ __html: label }}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Pagination;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  PaginationComponentCSSClasses,\n  PaginationComponentTemplates,\n} from '../../components/Pagination/Pagination';\nimport Pagination from '../../components/Pagination/Pagination';\nimport type {\n  PaginationConnectorParams,\n  PaginationRenderState,\n  PaginationWidgetDescription,\n} from '../../connectors/pagination/connectPagination';\nimport connectPagination from '../../connectors/pagination/connectPagination';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('Pagination');\nconst withUsage = createDocumentationMessageGenerator({ name: 'pagination' });\n\nconst defaultTemplates: PaginationComponentTemplates = {\n  previous: '‹',\n  next: '›',\n  first: '«',\n  last: '»',\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PaginationComponentCSSClasses;\n    templates: PaginationComponentTemplates;\n    showFirst: boolean;\n    showLast: boolean;\n    showPrevious: boolean;\n    showNext: boolean;\n    scrollToNode: HTMLElement | false;\n  }): Renderer<PaginationRenderState, Partial<PaginationWidgetParams>> =>\n  (\n    {\n      createURL,\n      currentRefinement,\n      nbPages,\n      pages,\n      isFirstPage,\n      isLastPage,\n      refine,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) return;\n\n    const setCurrentPage = (pageNumber: number) => {\n      refine(pageNumber);\n\n      if (scrollToNode !== false) {\n        scrollToNode.scrollIntoView();\n      }\n    };\n\n    render(\n      <Pagination\n        createURL={createURL}\n        cssClasses={cssClasses}\n        currentPage={currentRefinement}\n        templates={templates}\n        nbPages={nbPages}\n        pages={pages}\n        isFirstPage={isFirstPage}\n        isLastPage={isLastPage}\n        setCurrentPage={setCurrentPage}\n        showFirst={showFirst}\n        showLast={showLast}\n        showPrevious={showPrevious}\n        showNext={showNext}\n      />,\n      containerNode\n    );\n  };\n\nexport type PaginationCSSClasses = Partial<{\n  /**\n   * CSS classes added to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the root element of the widget if there are no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes added to the wrapping `<ul>`.\n   */\n  list: string | string[];\n\n  /**\n   * CSS classes added to each `<li>`.\n   */\n  item: string | string[];\n\n  /**\n   * CSS classes added to the first `<li>`.\n   */\n  firstPageItem: string | string[];\n\n  /**\n   * CSS classes added to the last `<li>`.\n   */\n  lastPageItem: string | string[];\n\n  /**\n   * CSS classes added to the previous `<li>`.\n   */\n  previousPageItem: string | string[];\n\n  /**\n   * CSS classes added to the next `<li>`.\n   */\n  nextPageItem: string | string[];\n\n  /**\n   * CSS classes added to page `<li>`.\n   */\n  pageItem: string | string[];\n\n  /**\n   * CSS classes added to the selected `<li>`.\n   */\n  selectedItem: string | string[];\n\n  /**\n   * CSS classes added to the disabled `<li>`.\n   */\n  disabledItem: string | string[];\n\n  /**\n   * CSS classes added to each link.\n   */\n  link: string | string[];\n}>;\n\nexport type PaginationTemplates = Partial<{\n  /**\n   * Label for the Previous link.\n   */\n  previous: string;\n\n  /**\n   * Label for the Next link.\n   */\n  next: string;\n\n  /**\n   * Label for the First link.\n   */\n  first: string;\n\n  /**\n   * Label for the Last link.\n   */\n  last: string;\n}>;\n\nexport type PaginationWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The max number of pages to browse.\n   */\n  totalPages?: number;\n\n  /**\n   * The number of pages to display on each side of the current page.\n   * @default 3\n   */\n  padding?: number;\n\n  /**\n   * Where to scroll after a click, set to `false` to disable.\n   * @default body\n   */\n  scrollTo?: string | HTMLElement | boolean;\n\n  /**\n   * Whether to show the \"first page\" control\n   * @default true\n   */\n  showFirst?: boolean;\n\n  /**\n   * Whether to show the \"last page\" control\n   * @default true\n   */\n  showLast?: boolean;\n\n  /**\n   * Whether to show the \"next page\" control\n   * @default true\n   */\n  showNext?: boolean;\n\n  /**\n   * Whether to show the \"previous page\" control\n   * @default true\n   */\n  showPrevious?: boolean;\n\n  /**\n   * Text to display in the links.\n   */\n  templates?: PaginationTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: PaginationCSSClasses;\n};\n\nexport type PaginationWidget = WidgetFactory<\n  PaginationWidgetDescription & { $$widgetType: 'ais.pagination' },\n  PaginationConnectorParams,\n  PaginationWidgetParams\n>;\n\nconst pagination: PaginationWidget = function pagination(widgetParams) {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n    totalPages,\n    padding,\n    showFirst = true,\n    showLast = true,\n    showPrevious = true,\n    showNext = true,\n    scrollTo: userScrollTo = 'body',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const scrollTo = userScrollTo === true ? 'body' : userScrollTo;\n  const scrollToNode = scrollTo !== false ? getContainerNode(scrollTo) : false;\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    firstPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'firstPage' }),\n      userCssClasses.firstPageItem\n    ),\n    lastPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'lastPage' }),\n      userCssClasses.lastPageItem\n    ),\n    previousPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'previousPage' }),\n      userCssClasses.previousPageItem\n    ),\n    nextPageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'nextPage' }),\n      userCssClasses.nextPageItem\n    ),\n    pageItem: cx(\n      suit({ descendantName: 'item', modifierName: 'page' }),\n      userCssClasses.pageItem\n    ),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n  };\n\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    showFirst,\n    showLast,\n    showPrevious,\n    showNext,\n    scrollToNode,\n  });\n\n  const makeWidget = connectPagination(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ totalPages, padding }),\n    $$widgetType: 'ais.pagination',\n  };\n};\n\nexport default pagination;\n","import{options as n}from\"preact\";var t,r,u,i,o=0,c=[],f=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:f}),i.__[t]}function p(n){return o=1,y(z,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):z(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var c=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});return u.every(function(n){return!n.__N})?!c||c.call(this,n,t,r):!u.every(function(n){if(!n.__N)return!0;var t=n.__[0];return n.__=n.__N,n.__N=void 0,t===n.__[0]})&&(!c||c.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return w(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n){u.__&&u.__(n),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(j),t.__H.__h.forEach(k),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=f,n.__N=n.i=void 0})):(i.__h.forEach(j),i.__h.forEach(k),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==c.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||function(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))})(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==f&&(n.__=n.__V),n.i=void 0,n.__V=f})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(j),t.__h=t.__h.filter(function(n){return!n.__||k(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{j(n)}catch(n){r=n}}),r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function k(n){var t=r;n.__c=n.__(),r=t}function w(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function z(n,t){return\"function\"==typeof t?t(n):t}export{p as useState,y as useReducer,h as useEffect,s as useLayoutEffect,_ as useRef,A as useImperativeHandle,F as useMemo,T as useCallback,q as useContext,x as useDebugValue,V as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  PanelCSSClasses,\n  PanelSharedOptions,\n  PanelTemplates,\n} from '../../widgets/panel/panel';\nimport type { ComponentCSSClasses, UnknownWidgetFactory } from '../../types';\n\nexport type PanelComponentCSSClasses = ComponentCSSClasses<\n  // `collapseIcon` is only used in the default templates of the widget\n  Omit<PanelCSSClasses, 'collapseIcon'>\n>;\n\nexport type PanelComponentTemplates<TWidget extends UnknownWidgetFactory> =\n  Required<PanelTemplates<TWidget>>;\n\nexport type PanelProps<TWidget extends UnknownWidgetFactory> = {\n  hidden: boolean;\n  collapsible: boolean;\n  isCollapsed: boolean;\n  data: PanelSharedOptions<TWidget>;\n  cssClasses: PanelComponentCSSClasses;\n  templates: PanelComponentTemplates<TWidget>;\n  bodyElement: HTMLElement;\n};\n\nfunction Panel<TWidget extends UnknownWidgetFactory>(\n  props: PanelProps<TWidget>\n) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(props.isCollapsed);\n  const [isControlled, setIsControlled] = useState<boolean>(false);\n  const bodyRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = bodyRef.current;\n    if (!node) {\n      return undefined;\n    }\n\n    node.appendChild(props.bodyElement);\n\n    return () => {\n      node.removeChild(props.bodyElement);\n    };\n  }, [bodyRef, props.bodyElement]);\n\n  if (!isControlled && props.isCollapsed !== isCollapsed) {\n    setIsCollapsed(props.isCollapsed);\n  }\n\n  return (\n    <div\n      className={cx(\n        props.cssClasses.root,\n        props.hidden && props.cssClasses.noRefinementRoot,\n        props.collapsible && props.cssClasses.collapsibleRoot,\n        isCollapsed && props.cssClasses.collapsedRoot\n      )}\n      hidden={props.hidden}\n    >\n      {props.templates.header && (\n        <div className={props.cssClasses.header}>\n          <Template\n            templates={props.templates}\n            templateKey=\"header\"\n            rootTagName=\"span\"\n            data={props.data}\n          />\n\n          {props.collapsible && (\n            <button\n              className={props.cssClasses.collapseButton}\n              aria-expanded={!isCollapsed}\n              onClick={(event) => {\n                event.preventDefault();\n\n                setIsControlled(true);\n                setIsCollapsed((prevIsCollapsed) => !prevIsCollapsed);\n              }}\n            >\n              <Template\n                templates={props.templates}\n                templateKey=\"collapseButtonText\"\n                rootTagName=\"span\"\n                data={{ collapsed: isCollapsed }}\n              />\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className={props.cssClasses.body} ref={bodyRef} />\n\n      {props.templates.footer && (\n        <Template\n          templates={props.templates}\n          templateKey=\"footer\"\n          rootProps={{\n            className: props.cssClasses.footer,\n          }}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Panel;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { ComponentCSSClasses } from '../../types';\nimport type { PoweredByCSSClasses } from '../../widgets/powered-by/powered-by';\n\nexport type PoweredByComponentCSSClasses =\n  ComponentCSSClasses<PoweredByCSSClasses>;\n\nexport type PoweredByProps = {\n  url: string;\n  theme: string;\n  cssClasses: PoweredByComponentCSSClasses;\n};\n\nconst PoweredBy = ({ url, theme, cssClasses }: PoweredByProps) => (\n  <div className={cssClasses.root}>\n    <a\n      href={url}\n      target=\"_blank\"\n      className={cssClasses.link}\n      aria-label=\"Search by Algolia\"\n      rel=\"noopener noreferrer\"\n    >\n      <svg\n        height=\"1.2em\"\n        className={cssClasses.logo}\n        viewBox=\"0 0 572 64\"\n        // This style is necessary as long as it's not included in InstantSearch.css.\n        // For now, InstantSearch.css sets a maximum width of 70px.\n        style={{\n          width: 'auto',\n        }}\n      >\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#36395A'}\n          d=\"M16 48.3c-3.4 0-6.3-.6-8.7-1.7A12.4 12.4 0 0 1 1.9 42C.6 40 0 38 0 35.4h6.5a6.7 6.7 0 0 0 3.9 6c1.4.7 3.3 1.1 5.6 1.1 2.2 0 4-.3 5.4-1a7 7 0 0 0 3-2.4 6 6 0 0 0 1-3.4c0-1.5-.6-2.8-1.9-3.7-1.3-1-3.3-1.6-5.9-1.8l-4-.4c-3.7-.3-6.6-1.4-8.8-3.4a10 10 0 0 1-3.3-7.9c0-2.4.6-4.6 1.8-6.4a12 12 0 0 1 5-4.3c2.2-1 4.7-1.6 7.5-1.6s5.5.5 7.6 1.6a12 12 0 0 1 5 4.4c1.2 1.8 1.8 4 1.8 6.7h-6.5a6.4 6.4 0 0 0-3.5-5.9c-1-.6-2.6-1-4.4-1s-3.2.3-4.4 1c-1.1.6-2 1.4-2.6 2.4-.5 1-.8 2-.8 3.1a5 5 0 0 0 1.5 3.6c1 1 2.6 1.7 4.7 1.9l4 .3c2.8.2 5.2.8 7.2 1.8 2.1 1 3.7 2.2 4.9 3.8a9.7 9.7 0 0 1 1.7 5.8c0 2.5-.7 4.7-2 6.6a13 13 0 0 1-5.6 4.4c-2.4 1-5.2 1.6-8.4 1.6Zm35.6 0c-2.6 0-4.8-.4-6.7-1.3a13 13 0 0 1-4.7-3.5 17.1 17.1 0 0 1-3.6-10.4v-1c0-2 .3-3.8 1-5.6a13 13 0 0 1 7.3-8.3 15 15 0 0 1 6.3-1.4A13.2 13.2 0 0 1 64 24.3c1 2.2 1.6 4.6 1.6 7.2V34H39.4v-4.3h21.8l-1.8 2.2c0-2-.3-3.7-.9-5.1a7.3 7.3 0 0 0-2.7-3.4c-1.2-.7-2.7-1.1-4.6-1.1s-3.4.4-4.7 1.3a8 8 0 0 0-2.9 3.6c-.6 1.5-.9 3.3-.9 5.4 0 2 .3 3.7 1 5.3a7.9 7.9 0 0 0 2.8 3.7c1.3.8 3 1.3 5 1.3s3.8-.5 5.1-1.3c1.3-1 2.1-2 2.4-3.2h6a11.8 11.8 0 0 1-7 8.7 16 16 0 0 1-6.4 1.2ZM80 48c-2.2 0-4-.3-5.7-1a8.4 8.4 0 0 1-3.7-3.3 9.7 9.7 0 0 1-1.3-5.2c0-2 .5-3.8 1.5-5.2a9 9 0 0 1 4.3-3.1c1.8-.7 4-1 6.7-1H89v4.1h-7.5c-2 0-3.4.5-4.4 1.4-1 1-1.6 2.1-1.6 3.6s.5 2.7 1.6 3.6c1 1 2.5 1.4 4.4 1.4 1.1 0 2.2-.2 3.2-.7 1-.4 1.9-1 2.6-2 .6-1 1-2.4 1-4.2l1.7 2.1c-.2 2-.7 3.8-1.5 5.2a9 9 0 0 1-3.4 3.3 12 12 0 0 1-5.3 1Zm9.5-.7v-8.8h-1v-10c0-1.8-.5-3.2-1.4-4.1-1-1-2.4-1.4-4.2-1.4a142.9 142.9 0 0 0-10.2.4v-5.6a74.8 74.8 0 0 1 8.6-.4c3 0 5.5.4 7.5 1.2s3.4 2 4.4 3.6c1 1.7 1.4 4 1.4 6.7v18.4h-5Zm12.9 0V17.8h5v12.3h-.2c0-4.2 1-7.4 2.8-9.5a11 11 0 0 1 8.3-3.1h1v5.6h-2a9 9 0 0 0-6.3 2.2c-1.5 1.5-2.2 3.6-2.2 6.4v15.6h-6.4Zm34.4 1a15 15 0 0 1-6.6-1.3c-1.9-.9-3.4-2-4.7-3.5a15.5 15.5 0 0 1-2.7-5c-.6-1.7-1-3.6-1-5.4v-1c0-2 .4-3.8 1-5.6a15 15 0 0 1 2.8-4.9c1.3-1.5 2.8-2.6 4.6-3.5a16.4 16.4 0 0 1 13.3.2c2 1 3.5 2.3 4.8 4a12 12 0 0 1 2 6H144c-.2-1.6-1-3-2.2-4.1a7.5 7.5 0 0 0-5.2-1.7 8 8 0 0 0-4.7 1.3 8 8 0 0 0-2.8 3.6 13.8 13.8 0 0 0 0 10.3c.6 1.5 1.5 2.7 2.8 3.6s2.8 1.3 4.8 1.3c1.5 0 2.7-.2 3.8-.8a7 7 0 0 0 2.6-2c.7-1 1-2 1.2-3.2h6.2a11 11 0 0 1-2 6.2 15.1 15.1 0 0 1-11.8 5.5Zm19.7-1v-40h6.4V31h-1.3c0-3 .4-5.5 1.1-7.6a9.7 9.7 0 0 1 3.5-4.8A9.9 9.9 0 0 1 172 17h.3c3.5 0 6 1.1 7.9 3.5 1.7 2.3 2.6 5.7 2.6 10v16.8h-6.4V29.6c0-2.1-.6-3.8-1.8-5a6.4 6.4 0 0 0-4.8-1.8c-2 0-3.7.7-5 2a7.8 7.8 0 0 0-1.9 5.5v17h-6.4Zm63.8 1a12.2 12.2 0 0 1-10.9-6.2 19 19 0 0 1-1.8-7.3h1.4v12.5h-5.1v-40h6.4v19.8l-2 3.5c.2-3.1.8-5.7 1.9-7.7a11 11 0 0 1 4.4-4.5c1.8-1 3.9-1.5 6.1-1.5a13.4 13.4 0 0 1 12.8 9.1c.7 1.9 1 3.8 1 6v1c0 2.2-.3 4.1-1 6a13.6 13.6 0 0 1-13.2 9.4Zm-1.2-5.5a8.4 8.4 0 0 0 7.9-5c.7-1.5 1.1-3.3 1.1-5.3s-.4-3.8-1.1-5.3a8.7 8.7 0 0 0-3.2-3.6 9.6 9.6 0 0 0-9.2-.2 8.5 8.5 0 0 0-3.3 3.2c-.8 1.4-1.3 3-1.3 5v2.3a9 9 0 0 0 1.3 4.8 9 9 0 0 0 3.4 3c1.4.7 2.8 1 4.4 1Zm27.3 3.9-10-28.9h6.5l9.5 28.9h-6Zm-7.5 12.2v-5.7h4.9c1 0 2-.1 2.9-.4a4 4 0 0 0 2-1.4c.4-.7.9-1.6 1.2-2.7l8.6-30.9h6.2l-9.3 32.4a14 14 0 0 1-2.5 5 8.9 8.9 0 0 1-4 2.8c-1.5.6-3.4.9-5.6.9h-4.4Zm9-12.2v-5.2h6.4v5.2H248Z\"\n        />\n        <path\n          fill={theme === 'dark' ? '#FFF' : '#003DFF'}\n          d=\"M534.4 9.1H528a.8.8 0 0 1-.7-.7V1.8c0-.4.2-.7.6-.8l6.5-1c.4 0 .8.2.9.6v7.8c0 .4-.4.7-.8.7zM428 35.2V.8c0-.5-.3-.8-.7-.8h-.2l-6.4 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.5 0 .8-.4.8-.8V43c0-.4-.3-.7-.6-.8-4.5-.5-4.5-6-4.5-7zm106.5-21.8H528c-.4 0-.7.4-.7.8v34c0 .4.3.8.7.8h6.5c.4 0 .8-.4.8-.8v-34c0-.5-.4-.8-.8-.8zm-17.7 21.8V.8c0-.5-.3-.8-.8-.8l-6.5 1c-.4 0-.7.4-.7.8v35c0 1.6 0 11.8 12.3 12.2.4 0 .8-.4.8-.8V43c0-.4-.3-.7-.7-.8-4.4-.5-4.4-6-4.4-7zm-22.2-20.6a16.5 16.5 0 0 1 8.6 9.3c.8 2.2 1.3 4.8 1.3 7.5a19.4 19.4 0 0 1-4.6 12.6 14.8 14.8 0 0 1-5.2 3.6c-2 .9-5.2 1.4-6.8 1.4a21 21 0 0 1-6.7-1.4 15.4 15.4 0 0 1-8.6-9.3 21.3 21.3 0 0 1 0-14.4 15.2 15.2 0 0 1 8.6-9.3c2-.8 4.3-1.2 6.7-1.2s4.6.4 6.7 1.2zm-6.7 27.6c2.7 0 4.7-1 6.2-3s2.2-4.3 2.2-7.8-.7-6.3-2.2-8.3-3.5-3-6.2-3-4.7 1-6.1 3c-1.5 2-2.2 4.8-2.2 8.3s.7 5.8 2.2 7.8 3.5 3 6.2 3zm-88.8-28.8c-6.2 0-11.7 3.3-14.8 8.2a18.6 18.6 0 0 0 4.8 25.2c1.8 1.2 4 1.8 6.2 1.7s.1 0 .1 0h.9c4.2-.7 8-4 9.1-8.1v7.4c0 .4.3.7.8.7h6.4a.7.7 0 0 0 .7-.7V14.2c0-.5-.3-.8-.7-.8h-13.5zm6.3 26.5a9.8 9.8 0 0 1-5.7 2h-.5a10 10 0 0 1-9.2-14c1.4-3.7 5-6.3 9-6.3h6.4v18.3zm152.3-26.5h13.5c.5 0 .8.3.8.7v33.7c0 .4-.3.7-.8.7h-6.4a.7.7 0 0 1-.8-.7v-7.4c-1.2 4-4.8 7.4-9 8h-.1a4.2 4.2 0 0 1-.5.1h-.9a10.3 10.3 0 0 1-7-2.6c-4-3.3-6.5-8.4-6.5-14.2 0-3.7 1-7.2 3-10 3-5 8.5-8.3 14.7-8.3zm.6 28.4c2.2-.1 4.2-.6 5.7-2V21.7h-6.3a9.8 9.8 0 0 0-9 6.4 10.2 10.2 0 0 0 9.1 13.9h.5zM452.8 13.4c-6.2 0-11.7 3.3-14.8 8.2a18.5 18.5 0 0 0 3.6 24.3 10.4 10.4 0 0 0 13 .6c2.2-1.5 3.8-3.7 4.5-6.1v7.8c0 2.8-.8 5-2.2 6.3-1.5 1.5-4 2.2-7.5 2.2l-6-.3c-.3 0-.7.2-.8.5l-1.6 5.5c-.1.4.1.8.5 1h.1c2.8.4 5.5.6 7 .6 6.3 0 11-1.4 14-4.1 2.7-2.5 4.2-6.3 4.5-11.4V14.2c0-.5-.4-.8-.8-.8h-13.5zm6.3 8.2v18.3a9.6 9.6 0 0 1-5.6 2h-1a10.3 10.3 0 0 1-8.8-14c1.4-3.7 5-6.3 9-6.3h6.4zM291 31.5A32 32 0 0 1 322.8 0h30.8c.6 0 1.2.5 1.2 1.2v61.5c0 1.1-1.3 1.7-2.2 1l-19.2-17a18 18 0 0 1-11 3.4 18.1 18.1 0 1 1 18.2-14.8c-.1.4-.5.7-.9.6-.1 0-.3 0-.4-.2l-3.8-3.4c-.4-.3-.6-.8-.7-1.4a12 12 0 1 0-2.4 8.3c.4-.4 1-.5 1.6-.2l14.7 13.1v-46H323a26 26 0 1 0 10 49.7c.8-.4 1.6-.2 2.3.3l3 2.7c.3.2.3.7 0 1l-.2.2a32 32 0 0 1-47.2-28.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n);\n\nexport default PoweredBy;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  QueryRuleCustomDataCSSClasses,\n  QueryRuleCustomDataTemplates,\n} from '../../widgets/query-rule-custom-data/query-rule-custom-data';\nimport Template from '../Template/Template';\n\nexport type QueryRuleCustomDataComponentCSSClasses =\n  ComponentCSSClasses<QueryRuleCustomDataCSSClasses>;\n\nexport type QueryRuleCustomDataComponentTemplates =\n  Required<QueryRuleCustomDataTemplates>;\n\nexport type QueryRuleCustomDataProps = {\n  cssClasses: QueryRuleCustomDataComponentCSSClasses;\n  templates: QueryRuleCustomDataComponentTemplates;\n  items: any[];\n};\n\nconst QueryRuleCustomData = ({\n  cssClasses,\n  templates,\n  items,\n}: QueryRuleCustomDataProps) => (\n  <Template\n    templateKey=\"default\"\n    templates={templates}\n    rootProps={{ className: cssClasses.root }}\n    data={{ items }}\n  />\n);\n\nexport default QueryRuleCustomData;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  createDocumentationMessageGenerator,\n  getContainerNode,\n  getObjectType,\n  warning,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { PanelComponentCSSClasses } from '../../components/Panel/Panel';\nimport Panel from '../../components/Panel/Panel';\nimport type {\n  Template,\n  RenderOptions,\n  WidgetFactory,\n  InitOptions,\n  Widget,\n} from '../../types';\n\nexport type PanelCSSClasses = Partial<{\n  /**\n   * CSS classes to add to the root element of the widget.\n   */\n  root: string | string[];\n\n  /**\n   * CSS classes to add to the root element of the widget when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsible (`collapse` is defined).\n   */\n  collapsibleRoot: string | string[];\n\n  /**\n   * CSS classes to add to the root element when collapsed.\n   */\n  collapsedRoot: string | string[];\n\n  /**\n   * CSS classes to add to the collapse button element.\n   */\n  collapseButton: string | string[];\n\n  /**\n   * CSS classes to add to the collapse icon of the button.\n   */\n  collapseIcon: string | string[];\n\n  /**\n   * CSS classes to add to the header.\n   */\n  header: string | string[];\n\n  /**\n   * CSS classes to add to the body.\n   */\n  body: string | string[];\n\n  /**\n   * CSS classes to add to the footer.\n   */\n  footer: string | string[];\n}>;\n\ntype AnyWidgetFactory = WidgetFactory<\n  {\n    $$type: string;\n  },\n  Record<string, any>,\n  // @TODO: this really should be _at least_ { container: string | HTMLElement }\n  // but that or { container: string | HTMLElement; [key: string]: any }\n  // still doesn't allow wider types with another key required.\n  any\n>;\n\nexport type PanelTemplates<TWidget extends AnyWidgetFactory> = Partial<{\n  /**\n   * Template to use for the header.\n   */\n  header: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for the footer.\n   */\n  footer: Template<PanelRenderOptions<TWidget>>;\n\n  /**\n   * Template to use for collapse button.\n   */\n  collapseButtonText: Template<{ collapsed: boolean }>;\n}>;\n\ntype GetWidgetRenderState<TWidgetFactory extends AnyWidgetFactory> =\n  ReturnType<TWidgetFactory>['getWidgetRenderState'] extends (\n    renderOptions: any\n  ) => infer TRenderState\n    ? TRenderState extends Record<string, unknown>\n      ? TRenderState\n      : never\n    : Record<string, unknown>;\n\nexport type PanelRenderOptions<TWidgetFactory extends AnyWidgetFactory> =\n  RenderOptions & GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelSharedOptions<TWidgetFactory extends AnyWidgetFactory> = (\n  | InitOptions\n  | RenderOptions\n) &\n  GetWidgetRenderState<TWidgetFactory>;\n\nexport type PanelWidgetParams<TWidgetFactory extends AnyWidgetFactory> = {\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be hidden based on the render options.\n   */\n  hidden?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * A function that is called on each render to determine if the\n   * panel should be collapsed based on the render options.\n   */\n  collapsed?(options: PanelRenderOptions<TWidgetFactory>): boolean;\n\n  /**\n   * The templates to use for the widget.\n   */\n  templates?: PanelTemplates<TWidgetFactory>;\n\n  /**\n   * The CSS classes to override.\n   */\n  cssClasses?: PanelCSSClasses;\n};\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'panel' });\nconst suit = component('Panel');\n\nconst renderer =\n  <TWidget extends AnyWidgetFactory>({\n    containerNode,\n    bodyContainerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    bodyContainerNode: HTMLElement;\n    cssClasses: PanelComponentCSSClasses;\n    templates: Required<PanelTemplates<TWidget>>;\n  }) =>\n  ({\n    options,\n    hidden,\n    collapsible,\n    collapsed,\n  }: {\n    options: PanelSharedOptions<TWidget>;\n    hidden: boolean;\n    collapsible: boolean;\n    collapsed: boolean;\n  }) => {\n    render(\n      <Panel<TWidget>\n        cssClasses={cssClasses}\n        hidden={hidden}\n        collapsible={collapsible}\n        isCollapsed={collapsed}\n        templates={templates}\n        data={options}\n        bodyElement={bodyContainerNode}\n      />,\n      containerNode\n    );\n  };\n\ntype AugmentedWidget<\n  TWidgetFactory extends AnyWidgetFactory,\n  TOverriddenKeys extends keyof Widget = 'init' | 'render' | 'dispose'\n> = Omit<ReturnType<TWidgetFactory>, TOverriddenKeys> &\n  Pick<Required<Widget>, TOverriddenKeys>;\n\nexport type PanelWidget = <TWidgetFactory extends AnyWidgetFactory>(\n  panelWidgetParams?: PanelWidgetParams<TWidgetFactory>\n) => (\n  widgetFactory: TWidgetFactory\n) => (\n  widgetParams: Parameters<TWidgetFactory>[0]\n) => AugmentedWidget<TWidgetFactory>;\n\n/**\n * The panel widget wraps other widgets in a consistent panel design.\n * It also reacts, indicates and sets CSS classes when widgets are no longer relevant for refining.\n */\nconst panel: PanelWidget = (panelWidgetParams) => {\n  const {\n    templates = {},\n    hidden = () => false,\n    collapsed,\n    cssClasses: userCssClasses = {},\n  } = panelWidgetParams || {};\n\n  warning(\n    typeof hidden === 'function',\n    `The \\`hidden\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      hidden\n    )}).`\n  );\n\n  warning(\n    typeof collapsed === 'undefined' || typeof collapsed === 'function',\n    `The \\`collapsed\\` option in the \"panel\" widget expects a function returning a boolean (received type ${getObjectType(\n      collapsed\n    )}).`\n  );\n\n  const bodyContainerNode = document.createElement('div');\n  const collapsible = Boolean(collapsed);\n  const collapsedFn = typeof collapsed === 'function' ? collapsed : () => false;\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    collapsibleRoot: cx(\n      suit({ modifierName: 'collapsible' }),\n      userCssClasses.collapsibleRoot\n    ),\n    collapsedRoot: cx(\n      suit({ modifierName: 'collapsed' }),\n      userCssClasses.collapsedRoot\n    ),\n    collapseButton: cx(\n      suit({ descendantName: 'collapseButton' }),\n      userCssClasses.collapseButton\n    ),\n    collapseIcon: cx(\n      suit({ descendantName: 'collapseIcon' }),\n      userCssClasses.collapseIcon\n    ),\n    body: cx(suit({ descendantName: 'body' }), userCssClasses.body),\n    header: cx(suit({ descendantName: 'header' }), userCssClasses.header),\n    footer: cx(suit({ descendantName: 'footer' }), userCssClasses.footer),\n  };\n\n  return (widgetFactory) => (widgetParams) => {\n    if (!(widgetParams && widgetParams.container)) {\n      throw new Error(\n        withUsage(\n          `The \\`container\\` option is required in the widget within the panel.`\n        )\n      );\n    }\n\n    const containerNode = getContainerNode(widgetParams.container);\n\n    const defaultTemplates: Required<PanelTemplates<typeof widgetFactory>> = {\n      header: '',\n      footer: '',\n      collapseButtonText: ({ collapsed: isCollapsed }) =>\n        `<svg\n          class=\"${cssClasses.collapseIcon}\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 500 500\"\n        >\n        <path d=\"${\n          isCollapsed ? 'M100 250l300-150v300z' : 'M250 400l150-300H100z'\n        }\" fill=\"currentColor\" />\n        </svg>`,\n    };\n\n    const renderPanel = renderer<typeof widgetFactory>({\n      containerNode,\n      bodyContainerNode,\n      cssClasses,\n      templates: {\n        ...defaultTemplates,\n        ...templates,\n      },\n    });\n\n    const widget = widgetFactory({\n      ...widgetParams,\n      container: bodyContainerNode,\n    });\n\n    // TypeScript somehow loses track of the ...widget type, since it's\n    // not directly returned. Eventually the \"as AugmentedWidget<typeof widgetFactory>\"\n    // will not be needed anymore.\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return {\n      ...widget,\n      init(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...(widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: true,\n          collapsible,\n          collapsed: false,\n        });\n\n        if (typeof widget.init === 'function') {\n          widget.init.call(this, ...args);\n        }\n      },\n      render(...args) {\n        const [renderOptions] = args;\n\n        const options = {\n          ...((widget.getWidgetRenderState\n            ? widget.getWidgetRenderState(renderOptions)\n            : {}) as GetWidgetRenderState<typeof widgetFactory>),\n          ...renderOptions,\n        };\n\n        renderPanel({\n          options,\n          hidden: Boolean(hidden(options)),\n          collapsible,\n          collapsed: Boolean(collapsedFn(options)),\n        });\n\n        if (typeof widget.render === 'function') {\n          widget.render.call(this, ...args);\n        }\n      },\n      dispose(...args) {\n        render(null, containerNode);\n\n        if (typeof widget.dispose === 'function') {\n          return widget.dispose.call(this, ...args);\n        }\n\n        return undefined;\n      },\n    } as AugmentedWidget<typeof widgetFactory>;\n  };\n};\n\nexport default panel;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PoweredByComponentCSSClasses } from '../../components/PoweredBy/PoweredBy';\nimport PoweredBy from '../../components/PoweredBy/PoweredBy';\nimport type {\n  PoweredByConnectorParams,\n  PoweredByRenderState,\n  PoweredByWidgetDescription,\n} from '../../connectors/powered-by/connectPoweredBy';\nimport connectPoweredBy from '../../connectors/powered-by/connectPoweredBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst suit = component('PoweredBy');\nconst withUsage = createDocumentationMessageGenerator({ name: 'powered-by' });\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: PoweredByComponentCSSClasses;\n  }): Renderer<PoweredByRenderState, Partial<PoweredByWidgetParams>> =>\n  ({ url, widgetParams }, isFirstRendering) => {\n    if (isFirstRendering) {\n      const { theme = 'light' } = widgetParams;\n\n      render(\n        <PoweredBy cssClasses={cssClasses} url={url} theme={theme} />,\n        containerNode\n      );\n\n      return;\n    }\n  };\n\nexport type PoweredByCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the link.\n   */\n  link: string | string[];\n\n  /**\n   * CSS class to add to the SVG logo.\n   */\n  logo: string | string[];\n}>;\n\nexport type PoweredByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * The theme of the logo.\n   * @default 'light'\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: PoweredByCSSClasses;\n};\n\nexport type PoweredByWidget = WidgetFactory<\n  PoweredByWidgetDescription & { $$widgetType: 'ais.poweredBy' },\n  PoweredByConnectorParams,\n  PoweredByWidgetParams\n>;\n\nconst poweredBy: PoweredByWidget = function poweredBy(widgetParams) {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    theme = 'light',\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(\n      suit(),\n      suit({ modifierName: theme === 'dark' ? 'dark' : 'light' }),\n      userCssClasses.root\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    logo: cx(suit({ descendantName: 'logo' }), userCssClasses.logo),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectPoweredBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ theme }),\n    $$widgetType: 'ais.poweredBy',\n  };\n};\n\nexport default poweredBy;\n","import type { WidgetFactory } from '../../types';\nimport { createDocumentationMessageGenerator, noop } from '../../lib/utils';\nimport type {\n  ParamTrackedFilters,\n  ParamTransformRuleContexts,\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\n\nexport type QueryRuleContextWidgetParams = {\n  trackedFilters: ParamTrackedFilters;\n  transformRuleContexts?: ParamTransformRuleContexts;\n};\n\nexport type QueryRuleContextWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleContext' },\n  QueryRulesConnectorParams,\n  QueryRuleContextWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-context',\n});\n\nconst queryRuleContext: QueryRuleContextWidget = (\n  widgetParams = {} as QueryRuleContextWidgetParams\n) => {\n  if (!widgetParams.trackedFilters) {\n    throw new Error(withUsage('The `trackedFilters` option is required.'));\n  }\n\n  return {\n    ...connectQueryRules<QueryRuleContextWidgetParams>(noop)(widgetParams),\n    $$widgetType: 'ais.queryRuleContext',\n  };\n};\n\nexport default queryRuleContext;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template } from '../../types';\nimport type {\n  QueryRulesConnectorParams,\n  QueryRulesRenderState,\n  QueryRulesWidgetDescription,\n} from '../../connectors/query-rules/connectQueryRules';\nimport connectQueryRules from '../../connectors/query-rules/connectQueryRules';\nimport type {\n  QueryRuleCustomDataComponentCSSClasses,\n  QueryRuleCustomDataComponentTemplates,\n} from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport CustomData from '../../components/QueryRuleCustomData/QueryRuleCustomData';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type QueryRuleCustomDataCSSClasses = Partial<{\n  root: string | string[];\n}>;\n\nexport type QueryRuleCustomDataTemplates = Partial<{\n  default: Template<{ items: any[] }>;\n}>;\n\nexport type QueryRuleCustomDataWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: QueryRuleCustomDataCSSClasses;\n  templates?: QueryRuleCustomDataTemplates;\n};\n\nexport type QueryRuleCustomDataWidget = WidgetFactory<\n  QueryRulesWidgetDescription & { $$widgetType: 'ais.queryRuleCustomData' },\n  QueryRulesConnectorParams,\n  QueryRuleCustomDataWidgetParams\n>;\n\nexport const defaultTemplates: QueryRuleCustomDataComponentTemplates = {\n  default: ({ items }) => JSON.stringify(items, null, 2),\n};\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'query-rule-custom-data',\n});\n\nconst suit = component('QueryRuleCustomData');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: QueryRuleCustomDataComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<QueryRuleCustomDataComponentTemplates>;\n    };\n    templates: QueryRuleCustomDataComponentTemplates;\n  }) =>\n  ({ items }: QueryRulesRenderState) => {\n    render(\n      <CustomData\n        cssClasses={cssClasses}\n        templates={templates}\n        items={items}\n      />,\n      containerNode\n    );\n  };\n\nconst queryRuleCustomData: QueryRuleCustomDataWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    transformItems = ((items) =>\n      items) as QueryRulesConnectorParams['transformItems'],\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n  };\n\n  const containerNode = getContainerNode(container);\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectQueryRules(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({\n      transformItems,\n    }),\n    $$widgetType: 'ais.queryRuleCustomData',\n  };\n};\n\nexport default queryRuleCustomData;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport Template from '../Template/Template';\nimport type {\n  RangeInputCSSClasses,\n  RangeInputTemplates,\n} from '../../widgets/range-input/range-input';\nimport type {\n  Range,\n  RangeBoundaries,\n} from '../../connectors/range/connectRange';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RangeInputComponentCSSClasses =\n  ComponentCSSClasses<RangeInputCSSClasses>;\n\nexport type RangeInputComponentTemplates = Required<RangeInputTemplates>;\n\nexport type RangeInputProps = {\n  min?: number;\n  max?: number;\n  step: number;\n  values: Partial<Range>;\n  cssClasses: RangeInputComponentCSSClasses;\n  templateProps: {\n    templates: RangeInputComponentTemplates;\n  };\n  refine(rangeValue: RangeBoundaries): void;\n};\n\nclass RangeInput extends Component<RangeInputProps, Partial<Range>> {\n  public state = {\n    min: this.props.values.min,\n    max: this.props.values.max,\n  };\n\n  public componentWillReceiveProps(nextProps: RangeInputProps) {\n    this.setState({\n      min: nextProps.values.min,\n      max: nextProps.values.max,\n    });\n  }\n\n  private onInput = (key: string) => (event: Event) => {\n    const { value } = event.currentTarget as HTMLInputElement;\n\n    this.setState({\n      [key]: Number(value),\n    });\n  };\n\n  private onSubmit = (event: Event) => {\n    event.preventDefault();\n\n    this.props.refine([this.state.min, this.state.max]);\n  };\n\n  public render() {\n    const { min: minValue, max: maxValue } = this.state;\n    const { min, max, step, cssClasses, templateProps } = this.props;\n    const isDisabled = min && max ? min >= max : false;\n    const hasRefinements = Boolean(minValue || maxValue);\n    const rootClassNames = cx(\n      cssClasses.root,\n      !hasRefinements && cssClasses.noRefinement\n    );\n\n    return (\n      <div className={rootClassNames}>\n        <form className={cssClasses.form} onSubmit={this.onSubmit}>\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMin)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={minValue ?? ''}\n              onInput={this.onInput('min')}\n              placeholder={min?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"separatorText\"\n            rootTagName=\"span\"\n            rootProps={{\n              className: cssClasses.separator,\n            }}\n          />\n\n          <label className={cssClasses.label}>\n            <input\n              className={cx(cssClasses.input, cssClasses.inputMax)}\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={maxValue ?? ''}\n              onInput={this.onInput('max')}\n              placeholder={max?.toString()}\n              disabled={isDisabled}\n            />\n          </label>\n\n          <Template\n            {...templateProps}\n            templateKey=\"submitText\"\n            rootTagName=\"button\"\n            rootProps={{\n              type: 'submit',\n              className: cssClasses.submit,\n              disabled: isDisabled,\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RangeInput;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  RangeInputComponentCSSClasses,\n  RangeInputComponentTemplates,\n} from '../../components/RangeInput/RangeInput';\nimport RangeInput from '../../components/RangeInput/RangeInput';\nimport type {\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport connectRange from '../../connectors/range/connectRange';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-input' });\nconst suit = component('RangeInput');\n\nconst defaultTemplates: RangeInputComponentTemplates = {\n  separatorText() {\n    return 'to';\n  },\n  submitText() {\n    return 'Go';\n  },\n};\n\nexport type RangeInputTemplates = Partial<{\n  /**\n   * The label of the separator, between min and max.\n   * @default \"to\"\n   */\n  separatorText: Template;\n  /**\n   * The label of the submit button\n   * @default \"Go\"\n   */\n  submitText: Template;\n}>;\n\nexport type RangeInputCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinement: string | string[];\n  /**\n   * CSS class to add to the form element.\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the label element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the input element.\n   */\n  input: string | string[];\n  /**\n   * CSS class to add to the min input element.\n   */\n  inputMin: string | string[];\n  /**\n   * CSS class to add to the max input element.\n   */\n  separator: string | string[];\n  /**\n   * CSS class to add to the separator of the form.\n   */\n  inputMax: string | string[];\n  /**\n   * CSS class to add to the submit button of the form.\n   */\n  submit: string | string[];\n}>;\n\nexport type RangeInputWidgetParams = {\n  /**\n   * Valid CSS Selector as a string or DOMElement.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.\n   */\n  attribute: string;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Labels to use for the widget.\n   */\n  templates?: RangeInputTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RangeInputCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeInputComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RangeInputComponentTemplates>;\n    };\n    templates: RangeInputTemplates;\n  }): Renderer<RangeRenderState, Partial<RangeInputWidgetParams>> =>\n  (\n    { refine, range, start, widgetParams, instantSearchInstance },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      return;\n    }\n\n    const { min: rangeMin, max: rangeMax } = range;\n    const [minValue, maxValue] = start;\n\n    const step = 1 / Math.pow(10, widgetParams.precision || 0);\n\n    const values = {\n      min:\n        minValue !== -Infinity && minValue !== rangeMin ? minValue : undefined,\n      max:\n        maxValue !== Infinity && maxValue !== rangeMax ? maxValue : undefined,\n    };\n\n    render(\n      <RangeInput\n        min={rangeMin}\n        max={rangeMax}\n        step={step}\n        values={values}\n        cssClasses={cssClasses}\n        refine={refine}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeInputWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeInput';\n    $$type: 'ais.rangeInput';\n  },\n  RangeConnectorParams,\n  RangeInputWidgetParams\n>;\n\nconst rangeInput: RangeInputWidget = function rangeInput(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    precision = 0,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinement: cx(suit({ modifierName: 'noRefinement' })),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    inputMin: cx(\n      suit({ descendantName: 'input', modifierName: 'min' }),\n      userCssClasses.inputMin\n    ),\n    inputMax: cx(\n      suit({ descendantName: 'input', modifierName: 'max' }),\n      userCssClasses.inputMax\n    ),\n    separator: cx(\n      suit({ descendantName: 'separator' }),\n      userCssClasses.separator\n    ),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      min,\n      max,\n      precision,\n    }),\n\n    $$type: 'ais.rangeInput',\n    $$widgetType: 'ais.rangeInput',\n  };\n};\n\nexport default rangeInput;\n","/**\n * This is a fork of Rheostat for Preact X.\n *\n * @see https://github.com/airbnb/rheostat\n */\n\n/** @jsx h */\n\nimport type { ComponentChildren, ComponentType, JSX } from 'preact';\nimport { h, Component, createRef } from 'preact';\n\ntype BoundingBox = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nconst KEYS = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  LEFT: 37,\n  PAGE_DOWN: 34,\n  PAGE_UP: 33,\n  RIGHT: 39,\n  UP: 38,\n} as const;\nconst PERCENT_EMPTY = 0;\nconst PERCENT_FULL = 100;\n\nfunction getPosition(value: number, min: number, max: number) {\n  return ((value - min) / (max - min)) * 100;\n}\n\nfunction getValue(pos: number, min: number, max: number) {\n  const decimal = pos / 100;\n\n  if (pos === 0) {\n    return min;\n  } else if (pos === 100) {\n    return max;\n  }\n\n  return Math.round((max - min) * decimal + min);\n}\n\nfunction getClassName(props: Props) {\n  const orientation =\n    props.orientation === 'vertical'\n      ? 'rheostat-vertical'\n      : 'rheostat-horizontal';\n\n  return ['rheostat', orientation]\n    .concat(props.className!.split(' '))\n    .join(' ');\n}\n\nfunction getHandleFor(ev: Event) {\n  return Number(\n    (ev.currentTarget as HTMLElement).getAttribute('data-handle-key')\n  );\n}\n\nfunction killEvent(ev: Event) {\n  ev.stopPropagation();\n  ev.preventDefault();\n}\n\nfunction Button(props: JSX.IntrinsicElements['button']) {\n  return <button {...props} type=\"button\" />;\n}\n\n// Preact doesn't have builtin types for Style, JSX.HTMLAttributes['style'] is just object\n// maybe migrate to csstype later?\ntype Style = {\n  position?: 'absolute';\n  top?: number | string;\n  left?: number | string;\n  height?: string;\n  width?: string;\n};\n\nexport type PitProps = {\n  children: number | string;\n  style: Style;\n};\n\nexport type HandleProps = {\n  'aria-valuemax'?: number;\n  'aria-valuemin'?: number;\n  'aria-valuenow'?: number;\n  'aria-disabled': boolean;\n  'data-handle-key': number;\n  className: 'rheostat-handle';\n  key: string;\n  onClick: (e: MouseEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onMouseDown?: (e: MouseEvent) => void;\n  onTouchStart?: (e: TouchEvent) => void;\n  role: 'slider';\n  style: JSX.HTMLAttributes['style'];\n  tabIndex: number;\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  className?: string;\n  disabled?: boolean;\n  handle?: ComponentType<HandleProps>;\n  max?: number;\n  min?: number;\n  onClick?(...args: unknown[]): unknown;\n  onChange?(...args: unknown[]): unknown;\n  onKeyPress?(...args: unknown[]): unknown;\n  onSliderDragEnd?(...args: unknown[]): unknown;\n  onSliderDragMove?(...args: unknown[]): unknown;\n  onSliderDragStart?(...args: unknown[]): unknown;\n  onValuesUpdated?(...args: unknown[]): unknown;\n  orientation?: 'horizontal' | 'vertical';\n  pitComponent?: ComponentType<PitProps>;\n  pitPoints?: number[];\n  progressBar?: ComponentType<JSX.HTMLAttributes>;\n  snap?: boolean;\n  snapPoints?: number[];\n  values?: number[];\n};\n\ntype State = {\n  className: string;\n  handlePos: number[];\n  handleDimensions: number;\n  mousePos: { x: number; y: number } | null;\n  sliderBox: Partial<BoundingBox>;\n  slidingIndex: number | null;\n  values: number[];\n};\n\nclass Rheostat extends Component<Props, State> {\n  public static defaultProps = {\n    className: '',\n    children: null,\n    disabled: false,\n    handle: Button,\n    max: PERCENT_FULL,\n    min: PERCENT_EMPTY,\n    onClick: null,\n    onChange: null,\n    onKeyPress: null,\n    onSliderDragEnd: null,\n    onSliderDragMove: null,\n    onSliderDragStart: null,\n    onValuesUpdated: null,\n    orientation: 'horizontal',\n    pitComponent: null,\n    pitPoints: [],\n    progressBar: 'div',\n    snap: false,\n    snapPoints: [],\n    values: [PERCENT_EMPTY],\n  };\n\n  public state: State = {\n    className: getClassName(this.props),\n    // non-null thanks to defaultProps\n    handlePos: this.props.values!.map((value) =>\n      getPosition(value, this.props.min!, this.props.max!)\n    ),\n    handleDimensions: 0,\n    mousePos: null,\n    sliderBox: {},\n    slidingIndex: null,\n    // non-null thanks to defaultProps\n    values: this.props.values!,\n  };\n\n  private rheostat = createRef<HTMLDivElement>();\n\n  public constructor(props: Props) {\n    super(props);\n\n    this.getPublicState = this.getPublicState.bind(this);\n    this.getSliderBoundingBox = this.getSliderBoundingBox.bind(this);\n    this.getProgressStyle = this.getProgressStyle.bind(this);\n    this.getMinValue = this.getMinValue.bind(this);\n    this.getMaxValue = this.getMaxValue.bind(this);\n    this.getHandleDimensions = this.getHandleDimensions.bind(this);\n    this.getClosestSnapPoint = this.getClosestSnapPoint.bind(this);\n    this.getSnapPosition = this.getSnapPosition.bind(this);\n    this.getNextPositionForKey = this.getNextPositionForKey.bind(this);\n    this.getNextState = this.getNextState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getClosestHandle = this.getClosestHandle.bind(this);\n    this.setStartSlide = this.setStartSlide.bind(this);\n    this.startMouseSlide = this.startMouseSlide.bind(this);\n    this.startTouchSlide = this.startTouchSlide.bind(this);\n    this.handleMouseSlide = this.handleMouseSlide.bind(this);\n    this.handleTouchSlide = this.handleTouchSlide.bind(this);\n    this.handleSlide = this.handleSlide.bind(this);\n    this.endSlide = this.endSlide.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.validatePosition = this.validatePosition.bind(this);\n    this.validateValues = this.validateValues.bind(this);\n    this.canMove = this.canMove.bind(this);\n    this.fireChangeEvent = this.fireChangeEvent.bind(this);\n    this.slideTo = this.slideTo.bind(this);\n    this.updateNewValues = this.updateNewValues.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: Required<Props>) {\n    const { className, disabled, min, max, orientation } = this.props;\n    const { values, slidingIndex } = this.state;\n\n    const minMaxChanged = nextProps.min !== min || nextProps.max !== max;\n\n    const valuesChanged =\n      values.length !== nextProps.values.length ||\n      values.some((value, idx) => nextProps.values[idx] !== value);\n\n    const orientationChanged =\n      nextProps.className !== className ||\n      nextProps.orientation !== orientation;\n\n    const willBeDisabled = nextProps.disabled && !disabled;\n\n    if (orientationChanged) {\n      this.setState({\n        className: getClassName(nextProps),\n      });\n    }\n\n    if (minMaxChanged || valuesChanged) this.updateNewValues(nextProps);\n\n    if (willBeDisabled && slidingIndex !== null) {\n      this.endSlide();\n    }\n  }\n\n  private getPublicState() {\n    const { min, max } = this.props;\n    const { values } = this.state;\n\n    return { max, min, values };\n  }\n\n  private getSliderBoundingBox(): BoundingBox {\n    // only gets called after render, so it will always be defined\n    const node = this.rheostat.current!;\n    const rect = node.getBoundingClientRect();\n\n    return {\n      height: rect.height || node.clientHeight,\n      left: rect.left,\n      top: rect.top,\n      width: rect.width || node.clientWidth,\n    };\n  }\n\n  private getProgressStyle(idx: number): Style {\n    const { handlePos } = this.state;\n\n    const value = handlePos[idx];\n\n    if (idx === 0) {\n      return this.props.orientation === 'vertical'\n        ? { height: `${value}%`, top: 0 }\n        : { left: 0, width: `${value}%` };\n    }\n\n    const prevValue = handlePos[idx - 1];\n    const diffValue = value - prevValue;\n\n    return this.props.orientation === 'vertical'\n      ? { height: `${diffValue}%`, top: `${prevValue}%` }\n      : { left: `${prevValue}%`, width: `${diffValue}%` };\n  }\n\n  private getMinValue(idx: number) {\n    return this.state.values[idx - 1]\n      ? Math.max(this.props.min!, this.state.values[idx - 1])\n      : this.props.min;\n  }\n\n  private getMaxValue(idx: number) {\n    return this.state.values[idx + 1]\n      ? Math.min(this.props.max!, this.state.values[idx + 1])\n      : this.props.max;\n  }\n\n  private getHandleDimensions(ev: Event, sliderBox: BoundingBox) {\n    const handleNode = (ev.currentTarget as HTMLElement) || null;\n\n    if (!handleNode) return 0;\n\n    return this.props.orientation === 'vertical'\n      ? ((handleNode.clientHeight / sliderBox.height) * PERCENT_FULL) / 2\n      : ((handleNode.clientWidth / sliderBox.width) * PERCENT_FULL) / 2;\n  }\n\n  private getClosestSnapPoint(value: number) {\n    // non-null thanks to defaultProps\n    if (!this.props.snapPoints!.length) return value;\n\n    return this.props.snapPoints!.reduce((snapTo, snap) =>\n      Math.abs(snapTo - value) < Math.abs(snap - value) ? snapTo : snap\n    );\n  }\n\n  private getSnapPosition(positionPercent: number) {\n    if (!this.props.snap) return positionPercent;\n\n    const { max, min } = this.props as Required<Props>;\n\n    const value = getValue(positionPercent, min, max);\n\n    const snapValue = this.getClosestSnapPoint(value);\n\n    return getPosition(snapValue, min, max);\n  }\n\n  private getNextPositionForKey(idx: number, keyCode: number) {\n    const { handlePos, values } = this.state;\n    const { max, min, snapPoints } = this.props as Required<Props>;\n\n    const shouldSnap = this.props.snap;\n\n    let proposedValue = values[idx];\n    let proposedPercentage = handlePos[idx];\n    const originalPercentage = proposedPercentage;\n    let stepValue = 1;\n\n    if (max >= 100) {\n      proposedPercentage = Math.round(proposedPercentage);\n    } else {\n      stepValue = 100 / (max - min);\n    }\n\n    let currentIndex: number | null = null;\n\n    if (shouldSnap) {\n      currentIndex = snapPoints.indexOf(this.getClosestSnapPoint(values[idx]));\n    }\n\n    type StepMultiplier = { [key: number]: (value: number) => number };\n\n    const stepMultiplier: StepMultiplier = {\n      [KEYS.LEFT]: (v) => v * -1,\n      [KEYS.RIGHT]: (v) => v,\n      [KEYS.UP]: (v) => v,\n      [KEYS.DOWN]: (v) => v * -1,\n      [KEYS.PAGE_DOWN]: (v) => (v > 1 ? -v : v * -10),\n      [KEYS.PAGE_UP]: (v) => (v > 1 ? v : v * 10),\n    };\n\n    if (Object.prototype.hasOwnProperty.call(stepMultiplier, keyCode)) {\n      proposedPercentage += stepMultiplier[keyCode](stepValue);\n\n      if (shouldSnap) {\n        if (!currentIndex) {\n          // nothing happens\n        } else if (proposedPercentage > originalPercentage) {\n          // move cursor right unless overflow\n          if (currentIndex < snapPoints.length - 1) {\n            proposedValue = snapPoints[currentIndex + 1];\n          }\n          // move cursor left unless there is overflow\n        } else if (currentIndex > 0) {\n          proposedValue = snapPoints[currentIndex - 1];\n        }\n      }\n    } else if (keyCode === KEYS.HOME) {\n      proposedPercentage = PERCENT_EMPTY;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[0];\n      }\n    } else if (keyCode === KEYS.END) {\n      proposedPercentage = PERCENT_FULL;\n\n      if (shouldSnap) {\n        proposedValue = snapPoints[snapPoints.length - 1];\n      }\n    } else {\n      return null;\n    }\n\n    return shouldSnap\n      ? getPosition(proposedValue, min, max)\n      : proposedPercentage;\n  }\n\n  private getNextState(idx: number, proposedPosition: number) {\n    const { handlePos } = this.state;\n    const { max, min } = this.props as Required<Props>;\n\n    const actualPosition = this.validatePosition(idx, proposedPosition);\n\n    const nextHandlePos = handlePos.map((pos, index) =>\n      index === idx ? actualPosition : pos\n    );\n\n    return {\n      handlePos: nextHandlePos,\n      values: nextHandlePos.map((pos) => getValue(pos, min, max)),\n    };\n  }\n\n  private getClosestHandle(positionPercent: number) {\n    const { handlePos } = this.state;\n\n    return handlePos.reduce((closestIdx, _node, idx) => {\n      const challenger = Math.abs(handlePos[idx] - positionPercent);\n      const current = Math.abs(handlePos[closestIdx] - positionPercent);\n      return challenger < current ? idx : closestIdx;\n    }, 0);\n  }\n\n  private setStartSlide(ev: MouseEvent | TouchEvent, x: number, y: number) {\n    const sliderBox = this.getSliderBoundingBox();\n\n    this.setState({\n      handleDimensions: this.getHandleDimensions(ev, sliderBox),\n      mousePos: { x, y },\n      sliderBox,\n      slidingIndex: getHandleFor(ev),\n    });\n  }\n\n  private startMouseSlide(ev: MouseEvent) {\n    this.setStartSlide(ev, ev.clientX, ev.clientY);\n\n    document.addEventListener('mousemove', this.handleMouseSlide, false);\n    document.addEventListener('mouseup', this.endSlide, false);\n\n    killEvent(ev);\n  }\n\n  private startTouchSlide(ev: TouchEvent) {\n    if (ev.changedTouches.length > 1) return;\n\n    const touch = ev.changedTouches[0];\n\n    this.setStartSlide(ev, touch.clientX, touch.clientY);\n\n    document.addEventListener('touchmove', this.handleTouchSlide, false);\n    document.addEventListener('touchend', this.endSlide, false);\n\n    if (this.props.onSliderDragStart) this.props.onSliderDragStart();\n\n    killEvent(ev);\n  }\n\n  private handleMouseSlide(ev: MouseEvent) {\n    if (this.state.slidingIndex === null) return;\n    this.handleSlide(ev.clientX, ev.clientY);\n    killEvent(ev);\n  }\n\n  private handleTouchSlide(ev: TouchEvent) {\n    if (this.state.slidingIndex === null) return;\n\n    if (ev.changedTouches.length > 1) {\n      this.endSlide();\n      return;\n    }\n\n    const touch = ev.changedTouches[0];\n\n    this.handleSlide(touch.clientX, touch.clientY);\n    killEvent(ev);\n  }\n\n  private handleSlide(x: number, y: number) {\n    const { slidingIndex: idx, sliderBox } = this.state;\n\n    const positionPercent =\n      this.props.orientation === 'vertical'\n        ? ((y - sliderBox.top!) / sliderBox.height!) * PERCENT_FULL\n        : ((x - sliderBox.left!) / sliderBox.width!) * PERCENT_FULL;\n\n    this.slideTo(idx!, positionPercent);\n\n    if (this.canMove(idx!, positionPercent)) {\n      // update mouse positions\n      this.setState({ mousePos: { x, y } });\n      if (this.props.onSliderDragMove) this.props.onSliderDragMove();\n    }\n  }\n\n  private endSlide() {\n    const idx = this.state.slidingIndex;\n\n    this.setState({ slidingIndex: null });\n\n    document.removeEventListener('mouseup', this.endSlide, false);\n    document.removeEventListener('touchend', this.endSlide, false);\n    document.removeEventListener('touchmove', this.handleTouchSlide, false);\n    document.removeEventListener('mousemove', this.handleMouseSlide, false);\n\n    if (this.props.onSliderDragEnd) this.props.onSliderDragEnd();\n    if (this.props.snap) {\n      const positionPercent = this.getSnapPosition(this.state.handlePos[idx!]);\n      this.slideTo(idx!, positionPercent, () => this.fireChangeEvent());\n    } else {\n      this.fireChangeEvent();\n    }\n  }\n\n  private handleClick(ev: MouseEvent) {\n    if ((ev.target as HTMLDivElement).getAttribute('data-handle-key')) {\n      return;\n    }\n\n    // Calculate the position of the slider on the page so we can determine\n    // the position where you click in relativity.\n    const sliderBox = this.getSliderBoundingBox();\n\n    const positionDecimal =\n      this.props.orientation === 'vertical'\n        ? (ev.clientY - sliderBox.top) / sliderBox.height\n        : (ev.clientX - sliderBox.left) / sliderBox.width;\n\n    const positionPercent = positionDecimal * PERCENT_FULL;\n\n    const handleId = this.getClosestHandle(positionPercent);\n\n    const validPositionPercent = this.getSnapPosition(positionPercent);\n\n    // Move the handle there\n    this.slideTo(handleId, validPositionPercent, () => this.fireChangeEvent());\n\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private handleKeydown(ev: KeyboardEvent) {\n    const idx = getHandleFor(ev);\n\n    if (ev.keyCode === KEYS.ESC) {\n      (ev.currentTarget as HTMLElement).blur();\n      return;\n    }\n\n    const proposedPercentage = this.getNextPositionForKey(idx, ev.keyCode);\n\n    if (proposedPercentage === null) return;\n\n    if (this.canMove(idx, proposedPercentage)) {\n      this.slideTo(idx, proposedPercentage, () => this.fireChangeEvent());\n      if (this.props.onKeyPress) this.props.onKeyPress();\n    }\n\n    killEvent(ev);\n  }\n\n  // Make sure the proposed position respects the bounds and\n  // does not collide with other handles too much.\n  private validatePosition(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    return Math.max(\n      Math.min(\n        proposedPosition,\n        handlePos[idx + 1] !== undefined\n          ? handlePos[idx + 1] - handleDimensions\n          : PERCENT_FULL // 100% is the highest value\n      ),\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : PERCENT_EMPTY // 0% is the lowest value\n    );\n  }\n\n  private validateValues(proposedValues: number[], props: Required<Props>) {\n    const { max, min } = props || this.props;\n\n    return proposedValues.map((value, idx, values) => {\n      const realValue = Math.max(Math.min(value, max), min);\n\n      if (values.length && realValue < values[idx - 1]) {\n        return values[idx - 1];\n      }\n\n      return realValue;\n    });\n  }\n\n  public canMove(idx: number, proposedPosition: number) {\n    const { handlePos, handleDimensions } = this.state;\n\n    if (proposedPosition < PERCENT_EMPTY) return false;\n    if (proposedPosition > PERCENT_FULL) return false;\n\n    const nextHandlePosition =\n      handlePos[idx + 1] !== undefined\n        ? handlePos[idx + 1] - handleDimensions\n        : Infinity;\n\n    if (proposedPosition > nextHandlePosition) return false;\n\n    const prevHandlePosition =\n      handlePos[idx - 1] !== undefined\n        ? handlePos[idx - 1] + handleDimensions\n        : -Infinity;\n\n    if (proposedPosition < prevHandlePosition) return false;\n\n    return true;\n  }\n\n  public fireChangeEvent() {\n    const { onChange } = this.props;\n    if (onChange) onChange(this.getPublicState());\n  }\n\n  public slideTo(\n    idx: number,\n    proposedPosition: number,\n    onAfterSet?: () => void\n  ) {\n    const nextState = this.getNextState(idx, proposedPosition);\n\n    this.setState(nextState, () => {\n      const { onValuesUpdated } = this.props;\n      if (onValuesUpdated) onValuesUpdated(this.getPublicState());\n      if (onAfterSet) onAfterSet();\n    });\n  }\n\n  public updateNewValues(nextProps: Required<Props>) {\n    const { slidingIndex } = this.state;\n\n    // Don't update while the slider is sliding\n    if (slidingIndex !== null) {\n      return;\n    }\n\n    const { max, min, values } = nextProps;\n\n    const nextValues = this.validateValues(values, nextProps);\n\n    this.setState(\n      {\n        handlePos: nextValues.map((value) => getPosition(value, min, max)),\n        values: nextValues,\n      },\n      () => this.fireChangeEvent()\n    );\n  }\n\n  public render() {\n    const {\n      children,\n      disabled,\n      handle: Handle,\n      max,\n      min,\n      orientation,\n      pitComponent: PitComponent,\n      pitPoints,\n      progressBar: ProgressBar,\n    } = this.props as Required<Props>; // all required thanks to defaultProps\n    const { className, handlePos, values } = this.state;\n\n    return (\n      <div\n        className={className}\n        ref={this.rheostat}\n        onClick={disabled ? undefined : this.handleClick}\n        style={{ position: 'relative' }}\n      >\n        <div className=\"rheostat-background\" />\n        {handlePos.map((pos, idx) => {\n          const handleStyle: Style =\n            orientation === 'vertical'\n              ? { top: `${pos}%`, position: 'absolute' }\n              : { left: `${pos}%`, position: 'absolute' };\n\n          return (\n            <Handle\n              aria-valuemax={this.getMaxValue(idx)}\n              aria-valuemin={this.getMinValue(idx)}\n              aria-valuenow={values[idx]}\n              aria-disabled={disabled}\n              data-handle-key={idx}\n              className=\"rheostat-handle\"\n              key={`handle-${idx}`}\n              onClick={killEvent}\n              onKeyDown={disabled ? undefined : this.handleKeydown}\n              onMouseDown={disabled ? undefined : this.startMouseSlide}\n              onTouchStart={disabled ? undefined : this.startTouchSlide}\n              role=\"slider\"\n              style={handleStyle}\n              tabIndex={0}\n            />\n          );\n        })}\n\n        {handlePos.map((_node, idx, arr) => {\n          if (idx === 0 && arr.length > 1) {\n            return null;\n          }\n\n          return (\n            <ProgressBar\n              className=\"rheostat-progress\"\n              key={`progress-bar-${idx}`}\n              style={this.getProgressStyle(idx)}\n            />\n          );\n        })}\n\n        {PitComponent &&\n          pitPoints.map((n) => {\n            const pos = getPosition(n, min, max);\n            const pitStyle: Style =\n              orientation === 'vertical'\n                ? { top: `${pos}%`, position: 'absolute' }\n                : { left: `${pos}%`, position: 'absolute' };\n\n            return (\n              <PitComponent key={`pit-${n}`} style={pitStyle}>\n                {n}\n              </PitComponent>\n            );\n          })}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Rheostat;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PitProps } from './Rheostat';\n\nconst Pit = ({ style, children }: PitProps) => {\n  // first, end & middle\n  const positionValue = Math.round(parseFloat(style.left as string));\n  const shouldDisplayValue = [0, 50, 100].includes(positionValue);\n\n  const value = children as string;\n  const pitValue = Math.round(parseInt(value, 10) * 100) / 100;\n\n  return (\n    <div\n      style={{ ...style, marginLeft: positionValue === 100 ? '-2px' : 0 }}\n      className={cx(\n        'rheostat-marker',\n        'rheostat-marker-horizontal',\n        shouldDisplayValue && 'rheostat-marker-large'\n      )}\n    >\n      {shouldDisplayValue && <div className={'rheostat-value'}>{pitValue}</div>}\n    </div>\n  );\n};\n\nexport default Pit;\n","/** @jsx h */\n\nimport { h, Component } from 'preact';\nimport type { HandleProps } from './Rheostat';\nimport Rheostat from './Rheostat';\nimport { cx } from '@algolia/ui-components-shared';\nimport { range } from '../../lib/utils';\nimport Pit from './Pit';\nimport type { RangeBoundaries } from '../../connectors/range/connectRange';\nimport type {\n  RangeSliderCssClasses,\n  RangeSliderWidgetParams,\n} from '../../widgets/range-slider/range-slider';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RangeSliderComponentCSSClasses =\n  ComponentCSSClasses<RangeSliderCssClasses>;\n\nexport type SliderProps = {\n  refine(values: RangeBoundaries): void;\n  min?: number;\n  max?: number;\n  values: RangeBoundaries;\n  pips?: boolean;\n  step?: number;\n  tooltips?: RangeSliderWidgetParams['tooltips'];\n  cssClasses: RangeSliderComponentCSSClasses;\n};\n\nclass Slider extends Component<SliderProps> {\n  private get isDisabled() {\n    return this.props.min! >= this.props.max!;\n  }\n\n  private handleChange = ({ values }: { values: RangeBoundaries }) => {\n    if (!this.isDisabled) {\n      this.props.refine(values);\n    }\n  };\n\n  // creates an array number where to display a pit point on the slider\n  private computeDefaultPitPoints({ min, max }: { min: number; max: number }) {\n    const totalLength = max - min;\n    const steps = 34;\n    const stepsLength = totalLength / steps;\n\n    const pitPoints = [\n      min,\n      ...range({\n        end: steps - 1,\n      }).map((step) => min + stepsLength * (step + 1)),\n      max,\n    ];\n\n    return pitPoints;\n  }\n\n  // creates an array of values where the slider should snap to\n  private computeSnapPoints({\n    min,\n    max,\n    step,\n  }: {\n    min: number;\n    max: number;\n    step?: number;\n  }) {\n    if (!step) return undefined;\n    return [...range({ start: min, end: max, step }), max];\n  }\n\n  private createHandleComponent =\n    (tooltips: RangeSliderWidgetParams['tooltips']) => (props: HandleProps) => {\n      // display only two decimals after comma,\n      // and apply `tooltips.format()` if any\n      const roundedValue =\n        Math.round(\n          // have to cast as a string, as the value given to the prop is a number, but becomes a string when read\n          parseFloat(props['aria-valuenow'] as unknown as string) * 100\n        ) / 100;\n      const value =\n        typeof tooltips === 'object' && tooltips.format\n          ? tooltips.format(roundedValue)\n          : roundedValue;\n\n      const className = cx(\n        props.className,\n        props['data-handle-key'] === 0 && 'rheostat-handle-lower',\n        props['data-handle-key'] === 1 && 'rheostat-handle-upper'\n      );\n\n      return (\n        <div {...props} className={className}>\n          {tooltips && <div className=\"rheostat-tooltip\">{value}</div>}\n        </div>\n      );\n    };\n\n  public render() {\n    const { tooltips, step, pips, values, cssClasses } = this.props;\n\n    // @TODO: figure out why this.props needs to be non-null asserted\n    const { min, max } = this.isDisabled\n      ? { min: this.props.min!, max: this.props.max! + 0.001 }\n      : (this.props as Required<SliderProps>);\n\n    const snapPoints = this.computeSnapPoints({ min, max, step });\n    const pitPoints =\n      pips === false ? [] : this.computeDefaultPitPoints({ min, max });\n\n    return (\n      <div\n        className={cx(\n          cssClasses.root,\n          this.isDisabled && cssClasses.disabledRoot\n        )}\n      >\n        <Rheostat\n          handle={this.createHandleComponent(tooltips)}\n          onChange={this.handleChange}\n          min={min}\n          max={max}\n          pitComponent={Pit}\n          pitPoints={pitPoints}\n          snap={true}\n          snapPoints={snapPoints}\n          values={(this.isDisabled ? [min, max] : values) as number[]}\n          disabled={this.isDisabled}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { RangeSliderComponentCSSClasses } from '../../components/Slider/Slider';\nimport Slider from '../../components/Slider/Slider';\nimport type {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeRenderState,\n  RangeWidgetDescription,\n} from '../../connectors/range/connectRange';\nimport connectRange from '../../connectors/range/connectRange';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'range-slider' });\nconst suit = component('RangeSlider');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    pips,\n    step,\n    tooltips,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RangeSliderComponentCSSClasses;\n    pips: boolean;\n    step?: number;\n    tooltips: RangeSliderWidgetParams['tooltips'];\n  }): Renderer<RangeRenderState, Partial<RangeSliderWidgetParams>> =>\n  ({ refine, range, start }, isFirstRendering) => {\n    if (isFirstRendering) {\n      // There's no information at this point, let's render nothing.\n      return;\n    }\n\n    const { min: minRange, max: maxRange } = range;\n\n    const [minStart, maxStart] = start;\n    const minFinite = minStart === -Infinity ? minRange : minStart;\n    const maxFinite = maxStart === Infinity ? maxRange : maxStart;\n\n    // Clamp values to the range for avoid extra rendering & refinement\n    // Should probably be done on the connector side, but we need to stay\n    // backward compatible so we still need to pass [-Infinity, Infinity]\n    const values: RangeBoundaries = [\n      minFinite! > maxRange! ? maxRange : minFinite,\n      maxFinite! < minRange! ? minRange : maxFinite,\n    ];\n\n    render(\n      <Slider\n        cssClasses={cssClasses}\n        refine={refine}\n        min={minRange}\n        max={maxRange}\n        values={values}\n        tooltips={tooltips}\n        step={step}\n        pips={pips}\n      />,\n      containerNode\n    );\n  };\n\nexport type RangeSliderCssClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the disabled root element.\n   */\n  disabledRoot: string | string[];\n}>;\n\ntype RangeSliderTooltipOptions = {\n  /**\n   * The function takes the raw value as input, and should return\n   * a string for the label that should be used for this value.\n   * @example\n   * { format(rawValue) {return '$' + Math.round(rawValue).toLocaleString() } }\n   */\n  format(value: number): string;\n};\n\nexport type RangeSliderWidgetParams = {\n  /**\n   * CSS Selector or DOMElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute for faceting.;\n   */\n  attribute: string;\n  /**\n   * Should we show tooltips or not.\n   * The default tooltip will show the raw value.\n   * You can also provide an object with a format function as an attribute.\n   * So that you can format the tooltip display value as you want.\n   * @default true\n   */\n  tooltips?: boolean | RangeSliderTooltipOptions;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RangeSliderCssClasses;\n  /**\n   * Show slider pips.\n   * @default true\n   */\n  pips?: boolean;\n  /**\n   * Number of digits after decimal point to use.\n   * @default 0\n   */\n  precision?: number;\n  /**\n   * Every handle move will jump that number of steps.\n   */\n  step?: number;\n  /**\n   * Minimal slider value, default to automatically computed from the result set.\n   */\n  min?: number;\n  /**\n   * Maximal slider value, defaults to automatically computed from the result set.\n   */\n  max?: number;\n};\n\nexport type RangeSliderWidget = WidgetFactory<\n  Omit<RangeWidgetDescription, '$$type'> & {\n    $$widgetType: 'ais.rangeSlider';\n    $$type: 'ais.rangeSlider';\n  },\n  RangeConnectorParams,\n  RangeSliderWidgetParams\n>;\n\n/**\n * The range slider is a widget which provides a user-friendly way to filter the\n * results based on a single numeric range.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n */\nconst rangeSlider: RangeSliderWidget = function rangeSlider(widgetParams) {\n  const {\n    container,\n    attribute,\n    min,\n    max,\n    cssClasses: userCssClasses = {},\n    step,\n    pips = true,\n    precision = 0,\n    tooltips = true,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    disabledRoot: cx(\n      suit({ modifierName: 'disabled' }),\n      userCssClasses.disabledRoot\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    step,\n    pips,\n    tooltips,\n    cssClasses,\n  });\n\n  const makeWidget = connectRange(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, min, max, precision }),\n\n    $$type: 'ais.rangeSlider',\n    $$widgetType: 'ais.rangeSlider',\n  };\n};\n\nexport default rangeSlider;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { ComponentChild } from 'preact';\nimport type {\n  RatingMenuComponentTemplates,\n  RatingMenuCSSClasses,\n} from './rating-menu';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\ntype ItemWrapperProps = { children: ComponentChild } & {\n  value: string;\n  count: number;\n  url: string;\n  cssClasses: RatingMenuCSSClasses;\n};\n\nfunction ItemWrapper({\n  children,\n  count,\n  value,\n  url,\n  cssClasses,\n}: ItemWrapperProps) {\n  if (count) {\n    return (\n      <a\n        className={cx(cssClasses.link)}\n        aria-label={`${value} & up`}\n        href={url}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <div className={cx(cssClasses.link)} aria-label={`${value} & up`} disabled>\n      {children}\n    </div>\n  );\n}\n\nconst defaultTemplates: RatingMenuComponentTemplates = {\n  item({ count, value, url, stars, cssClasses }) {\n    return (\n      <ItemWrapper\n        count={count}\n        value={value}\n        url={url}\n        cssClasses={cssClasses}\n      >\n        {stars.map((isFull, index) => (\n          <svg\n            key={index}\n            className={cx(\n              cssClasses.starIcon,\n              isFull ? cssClasses.fullStarIcon : cssClasses.emptyStarIcon\n            )}\n            aria-hidden=\"true\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <use\n              xlinkHref={\n                isFull\n                  ? '#ais-RatingMenu-starSymbol'\n                  : '#ais-RatingMenu-starEmptySymbol'\n              }\n            />\n          </svg>\n        ))}\n        <span className={cx(cssClasses.label)}>&amp; Up</span>\n        {count && (\n          <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n        )}\n      </ItemWrapper>\n    );\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\nimport type {\n  RelevantSortCSSClasses,\n  RelevantSortTemplates,\n} from '../../widgets/relevant-sort/relevant-sort';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type RelevantSortComponentCSSClasses =\n  ComponentCSSClasses<RelevantSortCSSClasses>;\n\nexport type RelevantSortComponentTemplates = Required<RelevantSortTemplates>;\n\ntype RelevantSortProps = {\n  cssClasses: RelevantSortComponentCSSClasses;\n  templates: RelevantSortComponentTemplates;\n  isRelevantSorted: boolean;\n  isVirtualReplica: boolean;\n  refine(relevancyStrictness: number | undefined): void;\n};\n\nconst RelevantSort = ({\n  cssClasses,\n  templates,\n  isRelevantSorted,\n  isVirtualReplica,\n  refine,\n}: RelevantSortProps) =>\n  isVirtualReplica ? (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"text\"\n        templates={templates}\n        rootProps={{\n          className: cssClasses.text,\n        }}\n        data={{ isRelevantSorted }}\n      />\n      <button\n        type=\"button\"\n        className={cssClasses.button}\n        onClick={() => {\n          if (isRelevantSorted) {\n            refine(0);\n          } else {\n            refine(undefined);\n          }\n        }}\n      >\n        <Template\n          rootTagName=\"span\"\n          templateKey=\"button\"\n          templates={templates}\n          data={{ isRelevantSorted }}\n        />\n      </button>\n    </div>\n  ) : null;\n\nexport default RelevantSort;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  StatsCSSClasses,\n  StatsTemplates,\n} from '../../widgets/stats/stats';\nimport Template from '../Template/Template';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type StatsComponentCSSClasses = ComponentCSSClasses<StatsCSSClasses>;\n\nexport type StatsComponentTemplates = Required<StatsTemplates>;\n\ntype StatsProps = {\n  cssClasses: StatsComponentCSSClasses;\n  templateProps: {\n    [key: string]: any;\n    templates: StatsComponentTemplates;\n  };\n  hitsPerPage: number | undefined;\n  nbHits: number;\n  nbSortedHits: number | undefined;\n  areHitsSorted: boolean;\n  nbPages: number;\n  page: number;\n  processingTimeMS: number;\n  query: string;\n};\n\nconst Stats = ({\n  nbHits,\n  nbSortedHits,\n  cssClasses,\n  templateProps,\n  ...rest\n}: StatsProps) => (\n  <div className={cx(cssClasses.root)}>\n    <Template\n      {...templateProps}\n      templateKey=\"text\"\n      rootTagName=\"span\"\n      rootProps={{ className: cssClasses.text }}\n      data={{\n        hasManySortedResults: nbSortedHits && nbSortedHits > 1,\n        hasNoSortedResults: nbSortedHits === 0,\n        hasOneSortedResults: nbSortedHits === 1,\n        hasManyResults: nbHits > 1,\n        hasNoResults: nbHits === 0,\n        hasOneResult: nbHits === 1,\n        nbHits,\n        nbSortedHits,\n        cssClasses,\n        ...rest,\n      }}\n    />\n  </div>\n);\n\nexport default Stats;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams,\n  RatingMenuRenderState,\n} from '../../connectors/rating-menu/connectRatingMenu';\nimport connectRatingMenu from '../../connectors/rating-menu/connectRatingMenu';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type {\n  ComponentCSSClasses,\n  RendererOptions,\n  Template,\n  WidgetFactory,\n} from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'rating-menu' });\nconst suit = component('RatingMenu');\n\nexport type RatingMenuTemplates = Partial<{\n  /**\n   * Item template, provided with `name`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<{\n    name: string;\n    label: string;\n    value: string;\n    count: number;\n    isRefined: boolean;\n    url: string;\n    stars: [boolean, boolean, boolean, boolean, boolean];\n    cssClasses: RatingMenuCSSClasses;\n    attribute?: string;\n    isFromSearch?: boolean;\n  }>;\n}>;\n\nexport type RatingMenuCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when there's no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add the selected item element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add a disabled item element.\n   */\n  disabledItem: string | string[];\n  /**\n   * CSS class to add to each link element.\n   */\n  link: string | string[];\n  /**\n   * CSS class to add to each star element (when using the default template).\n   */\n  starIcon: string | string[];\n  /**\n   * CSS class to add to each full star element (when using the default template).\n   */\n  fullStarIcon: string | string[];\n  /**\n   * CSS class to add to each empty star element (when using the default template).\n   */\n  emptyStarIcon: string | string[];\n  /**\n   * CSS class to add to each label.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each counter.\n   */\n  count: string | string[];\n}>;\n\nexport type RatingMenuComponentCSSClasses =\n  ComponentCSSClasses<RatingMenuCSSClasses>;\n\nexport type RatingMenuComponentTemplates = Required<RatingMenuTemplates>;\n\nexport type RatingMenuWidgetParams = {\n  /**\n   * Place where to insert the widget in your webpage.\n   */\n  container: string | HTMLElement;\n  /**\n   * Name of the attribute in your records that contains the ratings.\n   */\n  attribute: string;\n  /**\n   * The maximum rating value.\n   */\n  max?: number;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RatingMenuTemplates;\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: RatingMenuCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RatingMenuComponentCSSClasses;\n    templates: RatingMenuTemplates;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RatingMenuComponentTemplates>;\n    };\n  }) =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      instantSearchInstance,\n    }: RatingMenuRenderState & RendererOptions<RatingMenuConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        toggleRefinement={refine}\n      >\n        <svg style=\"display:none;\">\n          <symbol\n            id={suit({ descendantName: 'starSymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n          </symbol>\n          <symbol\n            id={suit({ descendantName: 'starEmptySymbol' })}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n          </symbol>\n        </svg>\n      </RefinementList>,\n      containerNode\n    );\n  };\n\n/**\n * Rating menu is used for displaying grade like filters. The values are normalized within boundaries.\n *\n * The maximum value can be set (with `max`), the minimum is always 0.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * The values inside this attribute must be JavaScript numbers (not strings).\n *\n * @type {WidgetFactory}\n * @devNovel RatingMenu\n * @category filter\n * @param {RatingMenuWidgetParams} widgetParams RatingMenu widget options.\n * @return {Widget} A new RatingMenu widget instance.\n * @example\n * search.addWidgets([\n *   instantsearch.widgets.ratingMenu({\n *     container: '#stars',\n *     attribute: 'rating',\n *     max: 5,\n *   })\n * ]);\n */\nexport type RatingMenuWidget = WidgetFactory<\n  RatingMenuWidgetDescription & { $$widgetType: 'ais.ratingMenu' },\n  RatingMenuConnectorParams,\n  RatingMenuWidgetParams\n>;\n\nconst ratingMenu: RatingMenuWidget = function ratingMenu(widgetParams) {\n  const {\n    container,\n    attribute,\n    max = 5,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    disabledItem: cx(\n      suit({ descendantName: 'item', modifierName: 'disabled' }),\n      userCssClasses.disabledItem\n    ),\n    link: cx(suit({ descendantName: 'link' }), userCssClasses.link),\n    starIcon: cx(suit({ descendantName: 'starIcon' }), userCssClasses.starIcon),\n    fullStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'full' }),\n      userCssClasses.fullStarIcon\n    ),\n    emptyStarIcon: cx(\n      suit({ descendantName: 'starIcon', modifierName: 'empty' }),\n      userCssClasses.emptyStarIcon\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRatingMenu(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, max }),\n    $$widgetType: 'ais.ratingMenu',\n  };\n};\n\nexport default ratingMenu;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\n\nconst defaultTemplate: SearchBoxComponentTemplates = {\n  reset({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.resetIcon}\n        viewBox=\"0 0 20 20\"\n        width=\"10\"\n        height=\"10\"\n      >\n        <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\" />\n      </svg>\n    );\n  },\n  submit({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.submitIcon}\n        width=\"10\"\n        height=\"10\"\n        viewBox=\"0 0 40 40\"\n      >\n        <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\" />\n      </svg>\n    );\n  },\n  loadingIndicator({ cssClasses }) {\n    return (\n      <svg\n        className={cssClasses.loadingIcon}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 38 38\"\n        stroke=\"#444\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"1s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </svg>\n    );\n  },\n};\n\nexport default defaultTemplate;\n","/** @jsx h */\nimport { h } from 'preact';\n\nimport type { RefinementListComponentTemplates } from './refinement-list';\nimport { formatNumber } from '../../lib/formatNumber';\nimport { cx } from '@algolia/ui-components-shared';\n\nconst defaultTemplates: RefinementListComponentTemplates = {\n  item({ cssClasses, count, value, highlighted, isRefined, isFromSearch }) {\n    return (\n      <label className={cx(cssClasses.label)}>\n        <input\n          type=\"checkbox\"\n          className={cx(cssClasses.checkbox)}\n          value={value}\n          defaultChecked={isRefined}\n        />\n        {/* @MAJOR: use the `<Highlight>` component instead */}\n        <span\n          className={cx(cssClasses.labelText)}\n          dangerouslySetInnerHTML={\n            isFromSearch ? { __html: highlighted } : undefined\n          }\n        >\n          {!isFromSearch && highlighted}\n        </span>\n        <span className={cx(cssClasses.count)}>{formatNumber(count)}</span>\n      </label>\n    );\n  },\n  showMoreText({ isShowingMore }) {\n    return isShowingMore ? 'Show less' : 'Show more';\n  },\n  searchableNoResults() {\n    return 'No results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { RefinementListComponentCSSClasses } from '../../components/RefinementList/RefinementList';\nimport RefinementList from '../../components/RefinementList/RefinementList';\nimport type {\n  RefinementListRenderState,\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n} from '../../connectors/refinement-list/connectRefinementList';\nimport connectRefinementList from '../../connectors/refinement-list/connectRefinementList';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Template, WidgetFactory, Renderer } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport searchBoxDefaultTemplates from '../search-box/defaultTemplates';\nimport type { SearchBoxTemplates } from '../search-box/search-box';\nimport type { SearchBoxComponentTemplates } from '../../components/SearchBox/SearchBox';\nimport defaultTemplates from './defaultTemplates';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'refinement-list',\n});\nconst suit = component('RefinementList');\nconst searchBoxSuit = component('SearchBox');\n\nexport type RefinementListOwnCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the root element when no refinements.\n   */\n  noRefinementRoot: string | string[];\n  /**\n   * CSS class to add to the root element with no results.\n   */\n  noResults: string | string[];\n  /**\n   * CSS class to add to the list element.\n   */\n  list: string | string[];\n  /**\n   * CSS class to add to each item element.\n   */\n  item: string | string[];\n  /**\n   * CSS class to add to each selected element.\n   */\n  selectedItem: string | string[];\n  /**\n   * CSS class to add to each label element (when using the default template).\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to each checkbox element (when using the default template).\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to each label text element.\n   */\n  labelText: string | string[];\n  /**\n   * CSS class to add to the show more element\n   */\n  showMore: string | string[];\n  /**\n   * CSS class to add to the disabled show more element\n   */\n  disabledShowMore: string | string[];\n  /**\n   * CSS class to add to each count element (when using the default template).\n   */\n  count: string | string[];\n  /**\n   * CSS class to add to the searchable container.\n   */\n  searchBox: string | string[];\n}>;\n\ntype RefinementListSearchableCSSClasses = Partial<{\n  searchableRoot: string | string[];\n  searchableForm: string | string[];\n  searchableInput: string | string[];\n  searchableSubmit: string | string[];\n  searchableSubmitIcon: string | string[];\n  searchableReset: string | string[];\n  searchableResetIcon: string | string[];\n  searchableLoadingIndicator: string | string[];\n  searchableLoadingIcon: string | string[];\n}>;\n\nexport type RefinementListCSSClasses = RefinementListOwnCSSClasses &\n  RefinementListSearchableCSSClasses;\n\nexport type RefinementListItemData = {\n  /**\n   * The number of occurrences of the facet in the result set.\n   */\n  count: number;\n  /**\n   * True if the value is selected.\n   */\n  isRefined: boolean;\n  /**\n   * The label to display.\n   */\n  label: string;\n  /**\n   * The value used for refining.\n   */\n  value: string;\n  /**\n   * The label highlighted (when using search for facet values). This value is displayed in the default template.\n   */\n  highlighted: string;\n  /**\n   * The url with this refinement selected.\n   */\n  url: string;\n  /**\n   * Object containing all the classes computed for the item.\n   */\n  cssClasses: RefinementListCSSClasses;\n  /**\n   * Whether the `items` prop contains facet values from the global search or from the search inside the items.\n   */\n  isFromSearch: boolean;\n};\n\nexport type RefinementListOwnTemplates = Partial<{\n  /**\n   * Item template, provided with `label`, `highlighted`, `value`, `count`, `isRefined`, `url` data properties.\n   */\n  item: Template<RefinementListItemData>;\n  /**\n   * Template used for the show more text, provided with `isShowingMore` data property.\n   */\n  showMoreText: Template<{ isShowingMore: boolean }>;\n  /**\n   * Templates to use for search for facet values when there are no results.\n   */\n  searchableNoResults: Template;\n}>;\n\ntype RefinementListSearchableTemplates = Partial<{\n  /**\n   * Templates to use for search for facet values submit button.\n   */\n  searchableSubmit: SearchBoxTemplates['submit'];\n  /**\n   * Templates to use for search for facet values reset button.\n   */\n  searchableReset: SearchBoxTemplates['reset'];\n  /**\n   * Templates to use for the search for facet values loading indicator.\n   */\n  searchableLoadingIndicator: SearchBoxTemplates['loadingIndicator'];\n}>;\n\nexport type RefinementListTemplates = RefinementListOwnTemplates &\n  RefinementListSearchableTemplates;\nexport type RefinementListComponentTemplates =\n  Required<RefinementListOwnTemplates>;\n\nexport type RefinementListWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Add a search input to let the user search for more facet values. In order\n   * to make this feature work, you need to make the attribute searchable\n   * [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting)\n   * or [the dashboard](https://www.algolia.com/explorer/display/)\n   */\n  searchable?: boolean;\n  /**\n   * Value of the search field placeholder.\n   */\n  searchablePlaceholder?: string;\n  /**\n   * When `false` the search field will become disabled if there are less items\n   * to display than the `options.limit`, otherwise the search field is always usable.\n   */\n  searchableIsAlwaysActive?: boolean;\n  /**\n   * When activated, it will escape the facet values that are returned from Algolia.\n   * In this case, the surrounding tags will always be `<mark></mark>`.\n   */\n  searchableEscapeFacetValues?: boolean;\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: RefinementListTemplates;\n  /**\n   * CSS classes to add to the wrapping elements.\n   */\n  cssClasses?: RefinementListCSSClasses;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates,\n    renderState,\n    showMore,\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RefinementListComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RefinementListComponentTemplates>;\n      searchBoxTemplateProps?: PreparedTemplateProps<SearchBoxComponentTemplates>;\n    };\n    templates: RefinementListOwnTemplates;\n    searchBoxTemplates: SearchBoxTemplates;\n    showMore?: boolean;\n    searchable?: boolean;\n    searchablePlaceholder?: string;\n    searchableIsAlwaysActive?: boolean;\n  }): Renderer<RefinementListRenderState, RefinementListConnectorParams> =>\n  (\n    {\n      refine,\n      items,\n      createURL,\n      searchForItems,\n      isFromSearch,\n      instantSearchInstance,\n      toggleShowMore,\n      isShowingMore,\n      hasExhaustiveItems,\n      canToggleShowMore,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n      renderState.searchBoxTemplateProps = prepareTemplateProps({\n        defaultTemplates: searchBoxDefaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates: searchBoxTemplates,\n      });\n      return;\n    }\n\n    render(\n      <RefinementList\n        createURL={createURL}\n        cssClasses={cssClasses}\n        facetValues={items}\n        templateProps={renderState.templateProps!}\n        searchBoxTemplateProps={renderState.searchBoxTemplateProps}\n        toggleRefinement={refine}\n        searchFacetValues={searchable ? searchForItems : undefined}\n        searchPlaceholder={searchablePlaceholder}\n        searchIsAlwaysActive={searchableIsAlwaysActive}\n        isFromSearch={isFromSearch}\n        showMore={showMore && !isFromSearch && items.length > 0}\n        toggleShowMore={toggleShowMore}\n        isShowingMore={isShowingMore}\n        hasExhaustiveItems={hasExhaustiveItems}\n        canToggleShowMore={canToggleShowMore}\n      />,\n      containerNode\n    );\n  };\n\nexport type RefinementListWidget = WidgetFactory<\n  RefinementListWidgetDescription & { $$widgetType: 'ais.refinementList' },\n  RefinementListConnectorParams,\n  RefinementListWidgetParams\n>;\n\n/**\n * The refinement list widget is one of the most common widget that you can find\n * in a search UI. With this widget, the user can filter the dataset based on facets.\n *\n * The refinement list displays only the most relevant facets for the current search\n * context. The sort option only affects the facet that are returned by the engine,\n * not which facets are returned.\n *\n * This widget also implements search for facet values, which is a mini search inside the\n * values of the facets. This makes easy to deal with uncommon facet values.\n *\n * @requirements\n *\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n *\n * If you also want to use search for facet values on this attribute, you need to make it searchable using the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n */\nconst refinementList: RefinementListWidget = function refinementList(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    operator,\n    sortBy,\n    limit,\n    showMore,\n    showMoreLimit,\n    searchable = false,\n    searchablePlaceholder = 'Search...',\n    searchableEscapeFacetValues = true,\n    searchableIsAlwaysActive = true,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    transformItems,\n  } = widgetParams || {};\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const escapeFacetValues = searchable\n    ? Boolean(searchableEscapeFacetValues)\n    : false;\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    noRefinementRoot: cx(\n      suit({ modifierName: 'noRefinement' }),\n      userCssClasses.noRefinementRoot\n    ),\n    list: cx(suit({ descendantName: 'list' }), userCssClasses.list),\n    item: cx(suit({ descendantName: 'item' }), userCssClasses.item),\n    selectedItem: cx(\n      suit({ descendantName: 'item', modifierName: 'selected' }),\n      userCssClasses.selectedItem\n    ),\n    searchBox: cx(\n      suit({ descendantName: 'searchBox' }),\n      userCssClasses.searchBox\n    ),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n    count: cx(suit({ descendantName: 'count' }), userCssClasses.count),\n    noResults: cx(\n      suit({ descendantName: 'noResults' }),\n      userCssClasses.noResults\n    ),\n    showMore: cx(suit({ descendantName: 'showMore' }), userCssClasses.showMore),\n    disabledShowMore: cx(\n      suit({ descendantName: 'showMore', modifierName: 'disabled' }),\n      userCssClasses.disabledShowMore\n    ),\n    searchable: {\n      root: cx(searchBoxSuit(), userCssClasses.searchableRoot),\n      form: cx(\n        searchBoxSuit({ descendantName: 'form' }),\n        userCssClasses.searchableForm\n      ),\n      input: cx(\n        searchBoxSuit({ descendantName: 'input' }),\n        userCssClasses.searchableInput\n      ),\n      submit: cx(\n        searchBoxSuit({ descendantName: 'submit' }),\n        userCssClasses.searchableSubmit\n      ),\n      submitIcon: cx(\n        searchBoxSuit({ descendantName: 'submitIcon' }),\n        userCssClasses.searchableSubmitIcon\n      ),\n      reset: cx(\n        searchBoxSuit({ descendantName: 'reset' }),\n        userCssClasses.searchableReset\n      ),\n      resetIcon: cx(\n        searchBoxSuit({ descendantName: 'resetIcon' }),\n        userCssClasses.searchableResetIcon\n      ),\n      loadingIndicator: cx(\n        searchBoxSuit({ descendantName: 'loadingIndicator' }),\n        userCssClasses.searchableLoadingIndicator\n      ),\n      loadingIcon: cx(\n        searchBoxSuit({ descendantName: 'loadingIcon' }),\n        userCssClasses.searchableLoadingIcon\n      ),\n    },\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    searchBoxTemplates: {\n      submit: templates.searchableSubmit,\n      reset: templates.searchableReset,\n      loadingIndicator: templates.searchableLoadingIndicator,\n    },\n    renderState: {},\n    searchable,\n    searchablePlaceholder,\n    searchableIsAlwaysActive,\n    showMore,\n  });\n\n  const makeWidget = connectRefinementList(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      attribute,\n      operator,\n      limit,\n      showMore,\n      showMoreLimit,\n      sortBy,\n      escapeFacetValues,\n      transformItems,\n    }),\n    $$widgetType: 'ais.refinementList',\n  };\n};\n\nexport default refinementList;\n","import type { RelevantSortComponentTemplates } from '../../components/RelevantSort/RelevantSort';\n\nconst defaultTemplates: RelevantSortComponentTemplates = {\n  text() {\n    return '';\n  },\n  button({ isRelevantSorted }) {\n    return isRelevantSorted ? 'See all results' : 'See relevant results';\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template } from '../../types';\nimport type {\n  RelevantSortConnectorParams,\n  RelevantSortRenderState,\n  RelevantSortWidgetDescription,\n} from '../../connectors/relevant-sort/connectRelevantSort';\nimport connectRelevantSort from '../../connectors/relevant-sort/connectRelevantSort';\nimport type {\n  RelevantSortComponentCSSClasses,\n  RelevantSortComponentTemplates,\n} from '../../components/RelevantSort/RelevantSort';\nimport RelevantSort from '../../components/RelevantSort/RelevantSort';\nimport defaultTemplates from './defaultTemplates';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nexport type RelevantSortCSSClasses = Partial<{\n  root: string;\n  text: string;\n  button: string;\n}>;\n\nexport type RelevantSortTemplates = Partial<{\n  text: Template<{ isRelevantSorted: boolean }>;\n  button: Template<{ isRelevantSorted: boolean }>;\n}>;\n\nexport type RelevantSortWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: RelevantSortCSSClasses;\n  templates?: RelevantSortTemplates;\n};\n\nexport type RelevantSortWidget = WidgetFactory<\n  RelevantSortWidgetDescription & { $$widgetType: 'ais.relevantSort' },\n  RelevantSortConnectorParams,\n  RelevantSortWidgetParams\n>;\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'relevant-sort',\n});\n\nconst suit = component('RelevantSort');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: RelevantSortComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<RelevantSortComponentTemplates>;\n    };\n    templates: RelevantSortComponentTemplates;\n  }) =>\n  ({ isRelevantSorted, isVirtualReplica, refine }: RelevantSortRenderState) => {\n    render(\n      <RelevantSort\n        cssClasses={cssClasses}\n        templates={templates}\n        isRelevantSorted={isRelevantSorted}\n        isVirtualReplica={isVirtualReplica}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nconst relevantSort: RelevantSortWidget = (widgetParams) => {\n  const {\n    container,\n    templates: userTemplates = {},\n    cssClasses: userCssClasses = {},\n  } = widgetParams;\n\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectRelevantSort(specializedRenderer, () => {\n    render(null, containerNode);\n  });\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.relevantSort',\n  };\n};\n\nexport default relevantSort;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { WidgetFactory, Template, RendererOptions } from '../../types';\nimport type {\n  SearchBoxConnectorParams,\n  SearchBoxRenderState,\n  SearchBoxWidgetDescription,\n} from '../../connectors/search-box/connectSearchBox';\nimport connectSearchBox from '../../connectors/search-box/connectSearchBox';\nimport type {\n  SearchBoxComponentCSSClasses,\n  SearchBoxComponentTemplates,\n} from '../../components/SearchBox/SearchBox';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport defaultTemplates from './defaultTemplates';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'search-box' });\nconst suit = component('SearchBox');\n\nexport type SearchBoxTemplates = Partial<{\n  /**\n   * Template used for displaying the submit button. Can accept a function or a Hogan string.\n   */\n  submit: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the reset button. Can accept a function or a Hogan string.\n   */\n  reset: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n  /**\n   * Template used for displaying the loading indicator. Can accept a function or a Hogan string.\n   */\n  loadingIndicator: Template<{ cssClasses: SearchBoxComponentCSSClasses }>;\n}>;\n\nexport type SearchBoxCSSClasses = Partial<{\n  /**\n   * CSS class to add to the wrapping `<div>`\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the form\n   */\n  form: string | string[];\n  /**\n   * CSS class to add to the input.\n   */\n  input: string | string[];\n  /**\n   * CSS classes added to the submit button.\n   */\n  submit: string | string[];\n  /**\n   * CSS classes added to the submit icon.\n   */\n  submitIcon: string | string[];\n  /**\n   * CSS classes added to the reset button.\n   */\n  reset: string | string[];\n  /**\n   * CSS classes added to the reset icon.\n   */\n  resetIcon: string | string[];\n  /**\n   * CSS classes added to the loading indicator element.\n   */\n  loadingIndicator: string | string[];\n  /**\n   * CSS classes added to the loading indicator icon.\n   */\n  loadingIcon: string | string[];\n}>;\n\nexport type SearchBoxWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget\n   */\n  container: string | HTMLElement;\n  /**\n   * The placeholder of the input\n   */\n  placeholder?: string;\n  /**\n   * Whether the input should be autofocused\n   */\n  autofocus?: boolean;\n  /**\n   * If set, trigger the search\n   * once `<Enter>` is pressed only.\n   */\n  searchAsYouType?: boolean;\n  /**\n   * Whether to show the reset button\n   */\n  showReset?: boolean;\n  /**\n   * Whether to show the submit button\n   */\n  showSubmit?: boolean;\n  /**\n   * Whether to show the loading indicator (replaces the submit if\n   * the search is stalled)\n   */\n  showLoadingIndicator?: boolean;\n  /**\n   * CSS classes to add\n   */\n  cssClasses?: SearchBoxCSSClasses;\n\n  /**\n   * Templates used for customizing the rendering of the searchbox\n   */\n  templates?: SearchBoxTemplates;\n  /**\n   * A function that is called every time a new search is done. You\n   * will get the query as the first parameter and a search (query) function to call as the second parameter.\n   * This `queryHook` can be used to debounce the number of searches done from the search box.\n   */\n  queryHook?: (query: string, hook: (value: string) => void) => void;\n};\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SearchBoxComponentCSSClasses;\n    placeholder: string;\n    templates: SearchBoxComponentTemplates;\n    autofocus: boolean;\n    searchAsYouType: boolean;\n    showReset: boolean;\n    showSubmit: boolean;\n    showLoadingIndicator: boolean;\n  }) =>\n  ({\n    refine,\n    query,\n    isSearchStalled,\n  }: SearchBoxRenderState & RendererOptions<SearchBoxConnectorParams>) => {\n    render(\n      <SearchBox\n        query={query}\n        placeholder={placeholder}\n        autofocus={autofocus}\n        refine={refine}\n        searchAsYouType={searchAsYouType}\n        templates={templates}\n        showSubmit={showSubmit}\n        showReset={showReset}\n        showLoadingIndicator={showLoadingIndicator}\n        isSearchStalled={isSearchStalled}\n        cssClasses={cssClasses}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The searchbox widget is used to let the user set a text based query.\n *\n * This is usually the  main entry point to start the search in an instantsearch context. For that\n * reason is usually placed on top, and not hidden so that the user can start searching right\n * away.\n *\n */\nexport type SearchBoxWidget = WidgetFactory<\n  SearchBoxWidgetDescription & { $$widgetType: 'ais.searchBox' },\n  SearchBoxConnectorParams,\n  SearchBoxWidgetParams\n>;\n\nconst searchBox: SearchBoxWidget = function searchBox(widgetParams) {\n  const {\n    container,\n    placeholder = '',\n    cssClasses: userCssClasses = {},\n    autofocus = false,\n    searchAsYouType = true,\n    showReset = true,\n    showSubmit = true,\n    showLoadingIndicator = true,\n    queryHook,\n    templates: userTemplates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    form: cx(suit({ descendantName: 'form' }), userCssClasses.form),\n    input: cx(suit({ descendantName: 'input' }), userCssClasses.input),\n    submit: cx(suit({ descendantName: 'submit' }), userCssClasses.submit),\n    submitIcon: cx(\n      suit({ descendantName: 'submitIcon' }),\n      userCssClasses.submitIcon\n    ),\n    reset: cx(suit({ descendantName: 'reset' }), userCssClasses.reset),\n    resetIcon: cx(\n      suit({ descendantName: 'resetIcon' }),\n      userCssClasses.resetIcon\n    ),\n    loadingIndicator: cx(\n      suit({ descendantName: 'loadingIndicator' }),\n      userCssClasses.loadingIndicator\n    ),\n    loadingIcon: cx(\n      suit({ descendantName: 'loadingIcon' }),\n      userCssClasses.loadingIcon\n    ),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    placeholder,\n    templates,\n    autofocus,\n    searchAsYouType,\n    showReset,\n    showSubmit,\n    showLoadingIndicator,\n  });\n\n  const makeWidget = connectSearchBox(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ queryHook }),\n    $$widgetType: 'ais.searchBox',\n  };\n};\n\nexport default searchBox;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { SelectorComponentCSSClasses } from '../../components/Selector/Selector';\nimport Selector from '../../components/Selector/Selector';\nimport type {\n  SortByConnectorParams,\n  SortByItem,\n  SortByRenderState,\n  SortByWidgetDescription,\n} from '../../connectors/sort-by/connectSortBy';\nimport connectSortBy from '../../connectors/sort-by/connectSortBy';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type { Renderer, TransformItems, WidgetFactory } from '../../types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'sort-by' });\nconst suit = component('SortBy');\n\nexport type SortByWidgetCssClasses = Partial<{\n  /**\n   * CSS classes added to the outer `<div>`.\n   */\n  root: string | string[];\n  /**\n   * CSS classes added to the parent `<select>`.\n   */\n  select: string | string[];\n  /**\n   * CSS classes added to each `<option>`.\n   */\n  option: string | string[];\n}>;\n\nexport type SortByIndexDefinition = {\n  /**\n   * The name of the index to target.\n   */\n  value: string;\n  /**\n   * The label of the index to display.\n   */\n  label: string;\n};\n\nexport type SortByWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n  /**\n   * Array of objects defining the different indices to choose from.\n   */\n  items: SortByIndexDefinition[];\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: SortByWidgetCssClasses;\n  /**\n   * Function to transform the items passed to the templates.\n   */\n  transformItems?: TransformItems<SortByItem>;\n};\n\nexport type SortByWidget = WidgetFactory<\n  SortByWidgetDescription & { $$widgetType: 'ais.sortBy' },\n  SortByConnectorParams,\n  SortByWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: SelectorComponentCSSClasses;\n  }): Renderer<SortByRenderState, SortByWidgetParams> =>\n  ({ currentRefinement, options, refine }, isFirstRendering) => {\n    if (isFirstRendering) {\n      return;\n    }\n\n    render(\n      <div className={cssClasses.root}>\n        <Selector\n          cssClasses={cssClasses}\n          currentValue={currentRefinement}\n          options={options}\n          setValue={refine}\n        />\n      </div>,\n      containerNode\n    );\n  };\n\n/**\n * Sort by selector is a widget used for letting the user choose between different\n * indices that contains the same data with a different order / ranking formula.\n */\nconst sortBy: SortByWidget = (widgetParams) => {\n  const {\n    container,\n    items,\n    cssClasses: userCssClasses = {},\n    transformItems,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    select: cx(suit({ descendantName: 'select' }), userCssClasses.select),\n    option: cx(suit({ descendantName: 'option' }), userCssClasses.option),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n  });\n\n  const makeWidget = connectSortBy(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ container: containerNode, items, transformItems }),\n    $$widgetType: 'ais.sortBy',\n  };\n};\n\nexport default sortBy;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  StatsComponentCSSClasses,\n  StatsComponentTemplates,\n} from '../../components/Stats/Stats';\nimport Stats from '../../components/Stats/Stats';\nimport type {\n  StatsConnectorParams,\n  StatsRenderState,\n  StatsWidgetDescription,\n} from '../../connectors/stats/connectStats';\nimport connectStats from '../../connectors/stats/connectStats';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport { component } from '../../lib/suit';\nimport type { Renderer, Template, WidgetFactory } from '../../types';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport { formatNumber } from '../../lib/formatNumber';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'stats' });\nconst suit = component('Stats');\n\ntype TextTemplateProps = {\n  hasManyResults: boolean;\n  hasNoResults: boolean;\n  hasOneResult: boolean;\n  hasNoSortedResults: boolean;\n  hasOneSortedResults: boolean;\n  hasManySortedResults: boolean;\n};\n\nexport type StatsCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n\n  /**\n   * CSS class to add to the text span element.\n   */\n  text: string | string[];\n}>;\n\nexport type StatsTemplates = Partial<{\n  /**\n   * Text template, provided with `hasManyResults`, `hasNoResults`, `hasOneResult`, `hasNoSortedResults`, `hasOneSortedResults`, `hasManySortedResults`, `hitsPerPage`, `nbHits`, `nbSortedHits`, `nbPages`, `areHitsSorted`, `page`, `processingTimeMS`, `query`.\n   */\n  text: Template<TextTemplateProps & StatsRenderState>;\n}>;\n\nexport type StatsWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: StatsTemplates;\n\n  /**\n   * CSS classes to add.\n   */\n  cssClasses?: StatsCSSClasses;\n};\n\nexport type StatsWidget = WidgetFactory<\n  StatsWidgetDescription & { $$widgetType: 'ais.stats' },\n  StatsConnectorParams,\n  StatsWidgetParams\n>;\n\nexport const defaultTemplates: StatsComponentTemplates = {\n  text(props) {\n    return `${\n      props.areHitsSorted\n        ? getSortedResultsSentence(props)\n        : getResultsSentence(props)\n    } found in ${props.processingTimeMS}ms`;\n  },\n};\n\nfunction getSortedResultsSentence({\n  nbHits,\n  hasNoSortedResults,\n  hasOneSortedResults,\n  hasManySortedResults,\n  nbSortedHits,\n}: TextTemplateProps & StatsRenderState) {\n  const suffix = `sorted out of ${formatNumber(nbHits)}`;\n\n  if (hasNoSortedResults) {\n    return `No relevant results ${suffix}`;\n  }\n\n  if (hasOneSortedResults) {\n    return `1 relevant result ${suffix}`;\n  }\n\n  if (hasManySortedResults) {\n    return `${formatNumber(nbSortedHits || 0)} relevant results ${suffix}`;\n  }\n\n  return '';\n}\n\nfunction getResultsSentence({\n  nbHits,\n  hasNoResults,\n  hasOneResult,\n  hasManyResults,\n}: TextTemplateProps & StatsRenderState) {\n  if (hasNoResults) {\n    return 'No results';\n  }\n\n  if (hasOneResult) {\n    return '1 result';\n  }\n\n  if (hasManyResults) {\n    return `${formatNumber(nbHits)} results`;\n  }\n\n  return '';\n}\n\nconst renderer =\n  ({\n    renderState,\n    cssClasses,\n    containerNode,\n    templates,\n  }: {\n    renderState: {\n      templateProps?: PreparedTemplateProps<StatsComponentTemplates>;\n    };\n    cssClasses: StatsComponentCSSClasses;\n    containerNode: HTMLElement;\n    templates: StatsTemplates;\n  }): Renderer<StatsRenderState, Partial<StatsWidgetParams>> =>\n  (\n    {\n      hitsPerPage,\n      nbHits,\n      nbSortedHits,\n      areHitsSorted,\n      nbPages,\n      page,\n      processingTimeMS,\n      query,\n      instantSearchInstance,\n    },\n    isFirstRendering\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <Stats\n        cssClasses={cssClasses}\n        hitsPerPage={hitsPerPage}\n        nbHits={nbHits}\n        nbSortedHits={nbSortedHits}\n        areHitsSorted={areHitsSorted}\n        nbPages={nbPages}\n        page={page}\n        processingTimeMS={processingTimeMS}\n        query={query}\n        templateProps={renderState.templateProps!}\n      />,\n      containerNode\n    );\n  };\n\n/**\n * The `stats` widget is used to display useful insights about the current results.\n *\n * By default, it will display the **number of hits** and the time taken to compute the\n * results inside the engine.\n */\nconst stats: StatsWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates = {},\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses: StatsComponentCSSClasses = {\n    root: cx(suit(), userCssClasses.root),\n    text: cx(suit({ descendantName: 'text' }), userCssClasses.text),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n    renderState: {},\n  });\n\n  const makeWidget = connectStats(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({}),\n    $$widgetType: 'ais.stats',\n  };\n};\n\nexport default stats;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport type {\n  ToggleRefinementRenderState,\n  ToggleRefinementValue,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport type { PreparedTemplateProps } from '../../lib/templating';\nimport type { ComponentCSSClasses } from '../../types';\nimport type {\n  ToggleRefinementTemplates,\n  ToggleRefinementCSSClasses,\n} from '../../widgets/toggle-refinement/toggle-refinement';\n\nimport Template from '../Template/Template';\n\nexport type ToggleRefinementComponentCSSClasses =\n  ComponentCSSClasses<ToggleRefinementCSSClasses>;\n\nexport type ToggleRefinementComponentTemplates =\n  Required<ToggleRefinementTemplates>;\n\nexport type ToggleRefinementProps = {\n  currentRefinement: ToggleRefinementValue;\n  refine: ToggleRefinementRenderState['refine'];\n  cssClasses: ToggleRefinementComponentCSSClasses;\n  templateProps: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n};\n\nconst ToggleRefinement = ({\n  currentRefinement,\n  refine,\n  cssClasses,\n  templateProps,\n}: ToggleRefinementProps) => (\n  <div className={cssClasses.root}>\n    <label className={cssClasses.label}>\n      <input\n        className={cssClasses.checkbox}\n        type=\"checkbox\"\n        checked={currentRefinement.isRefined}\n        onChange={(event) =>\n          refine({ isRefined: !(event.target as HTMLInputElement).checked })\n        }\n      />\n\n      <Template\n        {...templateProps}\n        rootTagName=\"span\"\n        rootProps={{ className: cssClasses.labelText }}\n        templateKey=\"labelText\"\n        data={currentRefinement}\n      />\n    </label>\n  </div>\n);\n\nexport default ToggleRefinement;\n","/** @jsx h */\n\nimport { h } from 'preact';\nimport Template from '../Template/Template';\n\nimport type {\n  VoiceSearchCSSClasses,\n  VoiceSearchTemplates,\n} from '../../widgets/voice-search/voice-search';\nimport type { VoiceListeningState } from '../../lib/voiceSearchHelper/types';\nimport type { ComponentCSSClasses } from '../../types';\n\nexport type VoiceSearchComponentCSSClasses =\n  ComponentCSSClasses<VoiceSearchCSSClasses>;\n\nexport type VoiceSearchComponentTemplates = Required<VoiceSearchTemplates>;\n\nexport type VoiceSearchProps = {\n  cssClasses: VoiceSearchComponentCSSClasses;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templates: VoiceSearchComponentTemplates;\n};\n\nconst VoiceSearch = ({\n  cssClasses,\n  isBrowserSupported,\n  isListening,\n  toggleListening,\n  voiceListeningState,\n  templates,\n}: VoiceSearchProps) => {\n  const handleClick = (event: MouseEvent): void => {\n    if (event.currentTarget instanceof HTMLElement) {\n      event.currentTarget.blur();\n    }\n    toggleListening();\n  };\n\n  const { status, transcript, isSpeechFinal, errorCode } = voiceListeningState;\n  return (\n    <div className={cssClasses.root}>\n      <Template\n        templateKey=\"buttonText\"\n        rootTagName=\"button\"\n        rootProps={{\n          className: cssClasses.button,\n          type: 'button',\n          title: `Search by voice${\n            isBrowserSupported ? '' : ' (not supported on this browser)'\n          }`,\n          onClick: handleClick,\n          disabled: !isBrowserSupported,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n      <Template\n        templateKey=\"status\"\n        rootProps={{\n          className: cssClasses.status,\n        }}\n        data={{\n          status,\n          errorCode,\n          isListening,\n          transcript,\n          isSpeechFinal,\n          isBrowserSupported,\n        }}\n        templates={templates}\n      />\n    </div>\n  );\n};\n\nexport default VoiceSearch;\n","/** @jsx h */\nimport { Fragment, h } from 'preact';\n\nimport type { VoiceSearchComponentTemplates } from '../../components/VoiceSearch/VoiceSearch';\n\ntype ButtonInnerElementProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n};\n\nconst ButtonInnerElement = ({\n  status,\n  errorCode,\n  isListening,\n}: ButtonInnerElementProps) => {\n  if (status === 'error' && errorCode === 'not-allowed') {\n    return (\n      <Fragment>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n        <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n        <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n        <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <path\n        d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n        fill={isListening ? 'currentColor' : 'none'}\n      />\n      <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n      <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\" />\n      <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\" />\n    </Fragment>\n  );\n};\n\nconst defaultTemplates: VoiceSearchComponentTemplates = {\n  buttonText({ status, errorCode, isListening }) {\n    return (\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        /* eslint-disable react/no-unknown-property */\n        // Preact supports kebab case attributes, and using camel case would\n        // require using `preact/compat`.\n        // @TODO: reconsider using the `react` ESLint preset\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        /* eslint-enable react/no-unknown-property */\n      >\n        <ButtonInnerElement\n          status={status}\n          errorCode={errorCode}\n          isListening={isListening}\n        />\n      </svg>\n    );\n  },\n  status({ transcript }) {\n    return <p>{transcript}</p>;\n  },\n};\n\nexport default defaultTemplates;\n","import type { ToggleRefinementComponentTemplates } from '../../components/ToggleRefinement/ToggleRefinement';\n\nconst defaultTemplates: ToggleRefinementComponentTemplates = {\n  labelText({ name }) {\n    return name;\n  },\n};\n\nexport default defaultTemplates;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type {\n  ToggleRefinementComponentCSSClasses,\n  ToggleRefinementComponentTemplates,\n} from '../../components/ToggleRefinement/ToggleRefinement';\nimport ToggleRefinement from '../../components/ToggleRefinement/ToggleRefinement';\nimport type {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementValue,\n  ToggleRefinementRenderState,\n} from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport connectToggleRefinement from '../../connectors/toggle-refinement/connectToggleRefinement';\nimport defaultTemplates from './defaultTemplates';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { prepareTemplateProps } from '../../lib/templating';\nimport type { RendererOptions, Template, WidgetFactory } from '../../types';\nimport { component } from '../../lib/suit';\nimport type { PreparedTemplateProps } from '../../lib/templating';\n\nconst withUsage = createDocumentationMessageGenerator({\n  name: 'toggle-refinement',\n});\nconst suit = component('ToggleRefinement');\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    renderState,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: ToggleRefinementComponentCSSClasses;\n    renderState: {\n      templateProps?: PreparedTemplateProps<ToggleRefinementComponentTemplates>;\n    };\n    templates: ToggleRefinementTemplates;\n  }) =>\n  (\n    {\n      value,\n      refine,\n      instantSearchInstance,\n    }: ToggleRefinementRenderState &\n      RendererOptions<ToggleRefinementConnectorParams>,\n    isFirstRendering: boolean\n  ) => {\n    if (isFirstRendering) {\n      renderState.templateProps = prepareTemplateProps({\n        defaultTemplates,\n        templatesConfig: instantSearchInstance.templatesConfig,\n        templates,\n      });\n\n      return;\n    }\n\n    render(\n      <ToggleRefinement\n        cssClasses={cssClasses}\n        currentRefinement={value}\n        templateProps={renderState.templateProps!}\n        refine={refine}\n      />,\n      containerNode\n    );\n  };\n\nexport type ToggleRefinementCSSClasses = Partial<{\n  /**\n   * CSS class to add to the root element.\n   */\n  root: string | string[];\n  /**\n   * CSS class to add to the label wrapping element.\n   */\n  label: string | string[];\n  /**\n   * CSS class to add to the checkbox.\n   */\n  checkbox: string | string[];\n  /**\n   * CSS class to add to the label text.\n   */\n  labelText: string | string[];\n}>;\n\nexport type ToggleRefinementTemplates = Partial<{\n  /**\n   * the text that describes the toggle action\n   */\n  labelText: Template<ToggleRefinementValue & { name: string }>;\n}>;\n\nexport type ToggleRefinementWidgetParams = {\n  /**\n   * CSS Selector or HTMLElement to insert the widget.\n   */\n  container: string | HTMLElement;\n\n  /**\n   * Templates to use for the widget.\n   */\n  templates?: ToggleRefinementTemplates;\n\n  /**\n   * CSS classes to be added.\n   */\n  cssClasses?: ToggleRefinementCSSClasses;\n};\n\nexport type ToggleRefinementWidget = WidgetFactory<\n  ToggleRefinementWidgetDescription & {\n    $$widgetType: 'ais.toggleRefinement';\n  },\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetParams\n>;\n\n/**\n * The toggleRefinement widget lets the user either:\n *  - switch between two values for a single facetted attribute (free_shipping / not_free_shipping)\n *  - toggleRefinement a faceted value on and off (only 'canon' for brands)\n *\n * This widget is particularly useful if you have a boolean value in the records.\n *\n * @requirements\n * The attribute passed to `attribute` must be declared as an\n * [attribute for faceting](https://www.algolia.com/doc/guides/searching/faceting/#declaring-attributes-for-faceting)\n * in your Algolia settings.\n */\nconst toggleRefinement: ToggleRefinementWidget = function toggleRefinement(\n  widgetParams\n) {\n  const {\n    container,\n    attribute,\n    cssClasses: userCssClasses = {},\n    templates = {},\n    on = true,\n    off,\n  } = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    label: cx(suit({ descendantName: 'label' }), userCssClasses.label),\n    checkbox: cx(suit({ descendantName: 'checkbox' }), userCssClasses.checkbox),\n    labelText: cx(\n      suit({ descendantName: 'labelText' }),\n      userCssClasses.labelText\n    ),\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    renderState: {},\n    templates,\n  });\n\n  const makeWidget = connectToggleRefinement(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({ attribute, on, off }),\n    $$widgetType: 'ais.toggleRefinement',\n  };\n};\n\nexport default toggleRefinement;\n","/** @jsx h */\n\nimport { h, render } from 'preact';\nimport { cx } from '@algolia/ui-components-shared';\nimport type { PlainSearchParameters } from 'algoliasearch-helper';\nimport {\n  getContainerNode,\n  createDocumentationMessageGenerator,\n} from '../../lib/utils';\nimport { component } from '../../lib/suit';\nimport type {\n  VoiceSearchConnectorParams,\n  VoiceSearchRenderState,\n  VoiceSearchWidgetDescription,\n} from '../../connectors/voice-search/connectVoiceSearch';\nimport connectVoiceSearch from '../../connectors/voice-search/connectVoiceSearch';\nimport type {\n  VoiceSearchComponentCSSClasses,\n  VoiceSearchComponentTemplates,\n} from '../../components/VoiceSearch/VoiceSearch';\nimport VoiceSearchComponent from '../../components/VoiceSearch/VoiceSearch';\nimport defaultTemplates from './defaultTemplates';\nimport type { WidgetFactory, Template, Renderer } from '../../types';\nimport type { CreateVoiceSearchHelper } from '../../lib/voiceSearchHelper/types';\n\nconst withUsage = createDocumentationMessageGenerator({ name: 'voice-search' });\nconst suit = component('VoiceSearch');\n\nexport type VoiceSearchCSSClasses = Partial<{\n  root: string | string[];\n  button: string | string[];\n  status: string | string[];\n}>;\n\ntype VoiceSearchTemplateProps = {\n  status: string;\n  errorCode: string;\n  isListening: boolean;\n  transcript: string;\n  isSpeechFinal: boolean;\n  isBrowserSupported: boolean;\n};\n\nexport type VoiceSearchTemplates = Partial<{\n  buttonText: Template<VoiceSearchTemplateProps>;\n  status: Template<VoiceSearchTemplateProps>;\n}>;\n\nexport type VoiceSearchWidgetParams = {\n  container: string | HTMLElement;\n  cssClasses?: VoiceSearchCSSClasses;\n  templates?: VoiceSearchTemplates;\n  searchAsYouSpeak?: boolean;\n  language?: string;\n  additionalQueryParameters?: (params: {\n    query: string;\n  }) => PlainSearchParameters | void;\n  createVoiceSearchHelper?: CreateVoiceSearchHelper;\n};\n\nexport type VoiceSearchWidget = WidgetFactory<\n  VoiceSearchWidgetDescription & { $$type: 'ais.voiceSearch' },\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetParams\n>;\n\nconst renderer =\n  ({\n    containerNode,\n    cssClasses,\n    templates,\n  }: {\n    containerNode: HTMLElement;\n    cssClasses: VoiceSearchComponentCSSClasses;\n    templates: VoiceSearchComponentTemplates;\n  }): Renderer<VoiceSearchRenderState, Partial<VoiceSearchWidgetParams>> =>\n  ({\n    isBrowserSupported,\n    isListening,\n    toggleListening,\n    voiceListeningState,\n  }) => {\n    render(\n      <VoiceSearchComponent\n        cssClasses={cssClasses}\n        templates={templates}\n        isBrowserSupported={isBrowserSupported}\n        isListening={isListening}\n        toggleListening={toggleListening}\n        voiceListeningState={voiceListeningState}\n      />,\n      containerNode\n    );\n  };\n\nconst voiceSearch: VoiceSearchWidget = (widgetParams) => {\n  const {\n    container,\n    cssClasses: userCssClasses = {},\n    templates: userTemplates = {},\n    searchAsYouSpeak = false,\n    language,\n    additionalQueryParameters,\n    createVoiceSearchHelper,\n  }: VoiceSearchWidgetParams = widgetParams || {};\n  if (!container) {\n    throw new Error(withUsage('The `container` option is required.'));\n  }\n\n  const containerNode = getContainerNode(container);\n\n  const cssClasses = {\n    root: cx(suit(), userCssClasses.root),\n    button: cx(suit({ descendantName: 'button' }), userCssClasses.button),\n    status: cx(suit({ descendantName: 'status' }), userCssClasses.status),\n  };\n  const templates = {\n    ...defaultTemplates,\n    ...userTemplates,\n  };\n\n  const specializedRenderer = renderer({\n    containerNode,\n    cssClasses,\n    templates,\n  });\n\n  const makeWidget = connectVoiceSearch(specializedRenderer, () =>\n    render(null, containerNode)\n  );\n\n  return {\n    ...makeWidget({\n      container: containerNode,\n      cssClasses,\n      templates,\n      searchAsYouSpeak,\n      language,\n      additionalQueryParameters,\n      createVoiceSearchHelper,\n    }),\n    $$widgetType: 'ais.voiceSearch',\n  };\n};\n\nexport default voiceSearch;\n","import { deprecate } from '../lib/utils';\n\nexport { default as analytics } from './analytics/analytics';\nexport { default as breadcrumb } from './breadcrumb/breadcrumb';\nexport { default as clearRefinements } from './clear-refinements/clear-refinements';\nexport { default as configure } from './configure/configure';\nexport { default as currentRefinements } from './current-refinements/current-refinements';\n\nimport answers from './answers/answers';\n/** @deprecated answers is no longer supported */\nexport const EXPERIMENTAL_answers = deprecate(\n  answers,\n  'answers is no longer supported'\n);\n\nexport { default as EXPERIMENTAL_configureRelatedItems } from './configure-related-items/configure-related-items';\n\nimport dynamicWidgets from './dynamic-widgets/dynamic-widgets';\nexport { dynamicWidgets };\n/** @deprecated use dynamicWidgets */\nexport const EXPERIMENTAL_dynamicWidgets = deprecate(\n  dynamicWidgets,\n  'use dynamicWidgets'\n);\n\nexport { default as geoSearch } from './geo-search/geo-search';\nexport { default as hierarchicalMenu } from './hierarchical-menu/hierarchical-menu';\nexport { default as hits } from './hits/hits';\nexport { default as hitsPerPage } from './hits-per-page/hits-per-page';\nexport { default as index } from './index/index';\nexport { default as infiniteHits } from './infinite-hits/infinite-hits';\nexport { default as menu } from './menu/menu';\nexport { default as menuSelect } from './menu-select/menu-select';\nexport { default as numericMenu } from './numeric-menu/numeric-menu';\nexport { default as pagination } from './pagination/pagination';\nexport { default as panel } from './panel/panel';\nexport { default as places } from './places/places';\nexport { default as poweredBy } from './powered-by/powered-by';\nexport { default as queryRuleContext } from './query-rule-context/query-rule-context';\nexport { default as queryRuleCustomData } from './query-rule-custom-data/query-rule-custom-data';\nexport { default as rangeInput } from './range-input/range-input';\nexport { default as rangeSlider } from './range-slider/range-slider';\nexport { default as ratingMenu } from './rating-menu/rating-menu';\nexport { default as refinementList } from './refinement-list/refinement-list';\nexport { default as relevantSort } from './relevant-sort/relevant-sort';\nexport { default as searchBox } from './search-box/search-box';\nexport { default as sortBy } from './sort-by/sort-by';\nexport { default as stats } from './stats/stats';\nexport { default as toggleRefinement } from './toggle-refinement/toggle-refinement';\nexport { default as voiceSearch } from './voice-search/voice-search';\n","import type {\n  ConfigureConnectorParams,\n  ConfigureWidgetDescription,\n} from '../../connectors/configure/connectConfigure';\nimport connectConfigure from '../../connectors/configure/connectConfigure';\nimport type { Widget } from '../../types';\nimport { noop } from '../../lib/utils';\n\n/**\n * A list of [search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)\n * to enable when the widget mounts.\n */\nexport type ConfigureWidgetParams =\n  ConfigureConnectorParams['searchParameters'];\n\nexport type ConfigureWidget = (widgetParams: ConfigureWidgetParams) => Widget<\n  ConfigureWidgetDescription & {\n    $$widgetType: 'ais.configure';\n    widgetParams: ConfigureConnectorParams;\n  }\n>;\n\nconst configure: ConfigureWidget = function configure(widgetParams) {\n  // This is a renderless widget that falls back to the connector's\n  // noop render and unmount functions.\n  const makeWidget = connectConfigure(noop);\n\n  return {\n    ...makeWidget({ searchParameters: widgetParams }),\n    $$widgetType: 'ais.configure',\n  };\n};\n\nexport default configure;\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport { noop } from '../../lib/utils';\nimport type {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport connectConfigureRelatedItems from '../../connectors/configure-related-items/connectConfigureRelatedItems';\nimport type { WidgetFactory } from '../../types';\n\nexport type ConfigureRelatedItemsWidget = WidgetFactory<\n  ConfigureRelatedItemsWidgetDescription & {\n    $$widgetType: 'ais.configureRelatedItems';\n  },\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetParams\n>;\n\nexport type ConfigureRelatedItemsWidgetParams = PlainSearchParameters;\n\nconst configureRelatedItems: ConfigureRelatedItemsWidget =\n  function configureRelatedItems(widgetParams) {\n    const makeWidget = connectConfigureRelatedItems(noop);\n\n    return {\n      ...makeWidget(widgetParams),\n      $$widgetType: 'ais.configureRelatedItems',\n    };\n  };\n\nexport default configureRelatedItems;\n","/* global google EventListener */\nimport { render } from 'preact';\nimport type { renderTemplate } from '../../lib/templating';\n\nexport type HTMLMarkerArguments = {\n  __id: string;\n  position: google.maps.LatLngLiteral;\n  map: google.maps.Map;\n  template: ReturnType<typeof renderTemplate>;\n  title?: string;\n  className: string;\n  anchor?: { x: number; y: number };\n};\n\ninterface Marker {\n  __id: string;\n  anchor: { x: number; y: number };\n  offset?: { x: number; y: number };\n  listeners: { [key: string]: EventListener };\n  latLng: google.maps.LatLng;\n  element: HTMLDivElement;\n  getPosition(): google.maps.LatLng;\n}\n\nconst createHTMLMarker = (\n  googleReference: typeof google\n): new (args: HTMLMarkerArguments) => google.maps.OverlayView & Marker => {\n  class HTMLMarker extends googleReference.maps.OverlayView {\n    public __id: string;\n    public anchor: {\n      x: number;\n      y: number;\n    };\n    public offset?: {\n      x: number;\n      y: number;\n    };\n    public listeners: { [key: string]: EventListener };\n    public latLng: google.maps.LatLng;\n    public element: HTMLDivElement;\n\n    public constructor({\n      __id,\n      position,\n      map,\n      template,\n      className,\n      anchor = {\n        x: 0,\n        y: 0,\n      },\n    }: HTMLMarkerArguments) {\n      super();\n\n      this.__id = __id;\n      this.anchor = anchor;\n      this.listeners = {};\n      this.latLng = new googleReference.maps.LatLng(position);\n\n      this.element = document.createElement('div');\n      this.element.className = className;\n      this.element.style.position = 'absolute';\n\n      if (typeof template === 'object') {\n        render(template, this.element);\n      } else {\n        this.element.innerHTML = template;\n      }\n\n      this.setMap(map);\n    }\n\n    public onAdd() {\n      // Append the element to the map\n      this.getPanes()!.overlayMouseTarget.appendChild(this.element);\n\n      // Compute the offset onAdd & cache it because afterwards\n      // it won't retrieve the correct values, we also avoid\n      // to read the values on every draw\n      const bbBox = this.element.getBoundingClientRect();\n\n      this.offset = {\n        x: this.anchor.x + bbBox.width / 2,\n        y: this.anchor.y + bbBox.height,\n      };\n\n      // Force the width of the element will avoid the\n      // content to collapse when we move the map\n      this.element.style.width = `${bbBox.width}px`;\n    }\n\n    public draw() {\n      const position = this.getProjection().fromLatLngToDivPixel(this.latLng)!;\n\n      this.element.style.left = `${Math.round(position.x - this.offset!.x)}px`;\n      this.element.style.top = `${Math.round(position.y - this.offset!.y)}px`;\n\n      // Markers to the south are in front of markers to the north\n      // This is the default behaviour of Google Maps\n      this.element.style.zIndex = String(parseInt(this.element.style.top, 10));\n    }\n\n    public onRemove() {\n      if (this.element) {\n        this.element.parentNode!.removeChild(this.element);\n\n        Object.keys(this.listeners).forEach((eventName) => {\n          this.element.removeEventListener(\n            eventName,\n            this.listeners[eventName]\n          );\n        });\n\n        // after onRemove the class is no longer used, thus it can be deleted\n        // @ts-expect-error\n        delete this.element;\n        // @ts-expect-error\n        delete this.listeners;\n      }\n    }\n\n    public addListener(eventName: string, listener: EventListener) {\n      this.listeners[eventName] = listener;\n\n      const element = this.element;\n\n      element.addEventListener(eventName, listener);\n\n      return {\n        remove() {\n          return element.removeEventListener(eventName, listener);\n        },\n      };\n    }\n\n    public getPosition() {\n      return this.latLng;\n    }\n  }\n\n  return HTMLMarker;\n};\n\nexport default createHTMLMarker;\n","/** @ts-ignore */\nimport type * as Places from 'places.js';\nimport type { WidgetFactory, WidgetRenderState } from '../../types';\n\n// using the type like this requires only one ts-ignore\ntype StaticOptions = Places.StaticOptions;\ntype ChangeEvent = Places.ChangeEvent;\ntype PlacesInstance = Places.PlacesInstance;\ntype ReconfigurableOptions = Places.ReconfigurableOptions;\n\nexport type PlacesWidgetParams = {\n  /**\n   * The Algolia Places reference to use.\n   *\n   * @see https://github.com/algolia/places\n   */\n  placesReference: (\n    options: StaticOptions & ReconfigurableOptions\n  ) => PlacesInstance;\n  /**\n   * The default position when the input is empty.\n   */\n  defaultPosition?: string[];\n} & StaticOptions;\n\ntype PlacesWidgetState = {\n  query: string;\n  initialLatLngViaIP: boolean | undefined;\n  isInitialLatLngViaIPSet: boolean;\n};\n\nexport type PlacesWidgetDescription = {\n  $$type: 'ais.places';\n  $$widgetType: 'ais.places';\n  renderState: Record<string, unknown>;\n  indexRenderState: {\n    places: WidgetRenderState<Record<string, unknown>, PlacesWidgetParams>;\n  };\n  indexUiState: {\n    places: {\n      query: string;\n      position: string;\n    };\n  };\n};\n\nexport type PlacesWidget = WidgetFactory<\n  PlacesWidgetDescription,\n  PlacesWidgetParams,\n  PlacesWidgetParams\n>;\n\n/**\n * This widget sets the geolocation value for the search based on the selected\n * result in the Algolia Places autocomplete.\n */\nconst placesWidget: PlacesWidget = (widgetParams) => {\n  const {\n    placesReference,\n    defaultPosition = [],\n    ...placesOptions\n  } = widgetParams || {};\n\n  if (typeof placesReference !== 'function') {\n    throw new Error(\n      'The `placesReference` option requires a valid Places.js reference.'\n    );\n  }\n\n  const placesAutocomplete = placesReference(placesOptions);\n\n  const state: PlacesWidgetState = {\n    query: '',\n    initialLatLngViaIP: undefined,\n    isInitialLatLngViaIPSet: false,\n  };\n\n  return {\n    $$type: 'ais.places',\n    $$widgetType: 'ais.places',\n\n    init({ helper }) {\n      placesAutocomplete.on('change', (eventOptions: ChangeEvent) => {\n        const {\n          suggestion: {\n            value,\n            latlng: { lat, lng },\n          },\n        } = eventOptions;\n\n        state.query = value;\n\n        helper\n          .setQueryParameter('insideBoundingBox', undefined)\n          .setQueryParameter('aroundLatLngViaIP', false)\n          .setQueryParameter('aroundLatLng', `${lat},${lng}`)\n          .search();\n      });\n\n      placesAutocomplete.on('clear', () => {\n        state.query = '';\n\n        helper.setQueryParameter('insideBoundingBox', undefined);\n\n        if (defaultPosition.length > 1) {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', false)\n            .setQueryParameter('aroundLatLng', defaultPosition.join(','));\n        } else {\n          helper\n            .setQueryParameter('aroundLatLngViaIP', state.initialLatLngViaIP)\n            .setQueryParameter('aroundLatLng', undefined);\n        }\n\n        helper.search();\n      });\n    },\n\n    getWidgetUiState(uiState, { searchParameters }) {\n      const position =\n        searchParameters.aroundLatLng || defaultPosition.join(',');\n      const hasPositionSet = position !== defaultPosition.join(',');\n\n      if (!hasPositionSet && !state.query) {\n        const { places, ...uiStateWithoutPlaces } = uiState;\n\n        return uiStateWithoutPlaces;\n      }\n\n      return {\n        ...uiState,\n        places: {\n          query: state.query,\n          position,\n        },\n      };\n    },\n\n    getWidgetSearchParameters(searchParameters, { uiState }) {\n      const { query = '', position = defaultPosition.join(',') } =\n        uiState.places || {};\n\n      state.query = query;\n\n      if (!state.isInitialLatLngViaIPSet) {\n        state.isInitialLatLngViaIPSet = true;\n        state.initialLatLngViaIP = searchParameters.aroundLatLngViaIP;\n      }\n\n      placesAutocomplete.setVal(query);\n      placesAutocomplete.close();\n\n      return searchParameters\n        .setQueryParameter('insideBoundingBox', undefined)\n        .setQueryParameter('aroundLatLngViaIP', false)\n        .setQueryParameter('aroundLatLng', position || undefined);\n    },\n\n    getRenderState(renderState, renderOptions) {\n      return {\n        ...renderState,\n        places: this.getWidgetRenderState(renderOptions),\n      };\n    },\n\n    getWidgetRenderState() {\n      return {\n        widgetParams,\n      };\n    },\n  };\n};\n\nexport default placesWidget;\n","import type {\n  InsightsClient,\n  InsightsClientMethod,\n  InternalMiddleware,\n  Hit,\n} from '../types';\nimport { getInsightsAnonymousUserTokenInternal } from '../helpers';\nimport { warning, noop, getAppIdAndApiKey, find } from '../lib/utils';\nimport type {\n  AlgoliaSearchHelper,\n  PlainSearchParameters,\n} from 'algoliasearch-helper';\n\nexport type InsightsEvent = {\n  insightsMethod?: InsightsClientMethod;\n  payload: any;\n  widgetType: string;\n  eventType: string; // 'view' | 'click' | 'conversion', but we're not restricting.\n  hits?: Hit[];\n  attribute?: string;\n};\n\nexport type InsightsProps<\n  TInsightsClient extends null | InsightsClient = InsightsClient | null\n> = {\n  insightsClient: TInsightsClient;\n  insightsInitParams?: {\n    userHasOptedOut?: boolean;\n    useCookie?: boolean;\n    cookieDuration?: number;\n    region?: 'de' | 'us';\n  };\n  onEvent?: (event: InsightsEvent, insightsClient: TInsightsClient) => void;\n};\n\nexport type CreateInsightsMiddleware = typeof createInsightsMiddleware;\n\nexport function createInsightsMiddleware<\n  TInsightsClient extends null | InsightsClient\n>(props: InsightsProps<TInsightsClient>): InternalMiddleware {\n  const {\n    insightsClient: _insightsClient,\n    insightsInitParams,\n    onEvent,\n  } = props || {};\n  if (_insightsClient !== null && !_insightsClient) {\n    if (__DEV__) {\n      throw new Error(\n        \"The `insightsClient` option is required if you want userToken to be automatically set in search calls. If you don't want this behaviour, set it to `null`.\"\n      );\n    } else {\n      throw new Error(\n        'The `insightsClient` option is required. To disable, set it to `null`.'\n      );\n    }\n  }\n\n  const hasInsightsClient = Boolean(_insightsClient);\n  const insightsClient: InsightsClient =\n    _insightsClient === null ? noop : _insightsClient;\n\n  return ({ instantSearchInstance }) => {\n    const [appId, apiKey] = getAppIdAndApiKey(instantSearchInstance.client);\n\n    // search-insights.js also throws an error so dev-only clarification is sufficient\n    if (__DEV__ && !(appId && apiKey)) {\n      throw new Error(\n        '[insights middleware]: could not extract Algolia credentials from searchClient'\n      );\n    }\n\n    let queuedUserToken: string | undefined = undefined;\n    let userTokenBeforeInit: string | undefined = undefined;\n\n    if (Array.isArray(insightsClient.queue)) {\n      // Context: The umd build of search-insights is asynchronously loaded by the snippet.\n      //\n      // When user calls `aa('setUserToken', 'my-user-token')` before `search-insights` is loaded,\n      // ['setUserToken', 'my-user-token'] gets stored in `aa.queue`.\n      // Whenever `search-insights` is finally loaded, it will process the queue.\n      //\n      // But here's the reason why we handle it here:\n      // At this point, even though `search-insights` is not loaded yet,\n      // we still want to read the token from the queue.\n      // Otherwise, the first search call will be fired without the token.\n      [, queuedUserToken] =\n        find(\n          insightsClient.queue.slice().reverse(),\n          ([method]) => method === 'setUserToken'\n        ) || [];\n    }\n    insightsClient('getUserToken', null, (_error: any, userToken: string) => {\n      // If user has called `aa('setUserToken', 'my-user-token')` before creating\n      // the `insights` middleware, we store them temporarily and\n      // set it later on.\n      //\n      // Otherwise, the `init` call might override it with anonymous user token.\n      userTokenBeforeInit = userToken;\n    });\n    insightsClient('init', { appId, apiKey, ...insightsInitParams });\n\n    let initialParameters: PlainSearchParameters;\n    let helper: AlgoliaSearchHelper;\n\n    return {\n      onStateChange() {},\n      subscribe() {},\n      started() {\n        insightsClient('addAlgoliaAgent', 'insights-middleware');\n\n        helper = instantSearchInstance.helper!;\n\n        initialParameters = {\n          userToken: (helper.state as PlainSearchParameters).userToken,\n          clickAnalytics: helper.state.clickAnalytics,\n        };\n\n        helper.overrideStateWithoutTriggeringChangeEvent({\n          ...helper.state,\n          clickAnalytics: true,\n        });\n        instantSearchInstance.scheduleSearch();\n\n        const setUserTokenToSearch = (userToken?: string) => {\n          helper.overrideStateWithoutTriggeringChangeEvent({\n            ...helper.state,\n            userToken,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        };\n\n        const anonymousUserToken = getInsightsAnonymousUserTokenInternal();\n        if (hasInsightsClient && anonymousUserToken) {\n          // When `aa('init', { ... })` is called, it creates an anonymous user token in cookie.\n          // We can set it as userToken.\n          setUserTokenToSearch(anonymousUserToken);\n        }\n\n        // We consider the `userToken` coming from a `init` call to have a higher\n        // importance than the one coming from the queue.\n        if (userTokenBeforeInit) {\n          insightsClient('setUserToken', userTokenBeforeInit);\n        } else if (queuedUserToken) {\n          insightsClient('setUserToken', queuedUserToken);\n        }\n\n        // This updates userToken which is set explicitly by `aa('setUserToken', userToken)`\n        insightsClient('onUserTokenChange', setUserTokenToSearch, {\n          immediate: true,\n        });\n\n        instantSearchInstance.sendEventToInsights = (event: InsightsEvent) => {\n          if (onEvent) {\n            onEvent(event, _insightsClient);\n          } else if (event.insightsMethod) {\n            const hasUserToken = Boolean(\n              (helper.state as PlainSearchParameters).userToken\n            );\n            if (hasUserToken) {\n              insightsClient(event.insightsMethod, event.payload);\n            } else {\n              warning(\n                false,\n                `\nCannot send event to Algolia Insights because \\`userToken\\` is not set.\n\nSee documentation: https://www.algolia.com/doc/guides/building-search-ui/going-further/send-insights-events/js/#setting-the-usertoken\n`\n              );\n            }\n          } else {\n            warning(\n              false,\n              'Cannot send event to Algolia Insights because `insightsMethod` option is missing.'\n            );\n          }\n        };\n      },\n      unsubscribe() {\n        insightsClient('onUserTokenChange', undefined);\n        instantSearchInstance.sendEventToInsights = noop;\n        if (helper && initialParameters) {\n          helper.setState({\n            ...helper.state,\n            ...initialParameters,\n          });\n\n          instantSearchInstance.scheduleSearch();\n        }\n      },\n    };\n  };\n}\n","// typed as any, since it accepts the _real_ js clients, not the interface we otherwise expect\nexport function getAppIdAndApiKey(searchClient: any): [string, string] {\n  if (searchClient.transporter) {\n    // searchClient v4\n    const { headers, queryParameters } = searchClient.transporter;\n    const APP_ID = 'x-algolia-application-id';\n    const API_KEY = 'x-algolia-api-key';\n    const appId = headers[APP_ID] || queryParameters[APP_ID];\n    const apiKey = headers[API_KEY] || queryParameters[API_KEY];\n    return [appId, apiKey];\n  } else {\n    // searchClient v3\n    return [searchClient.applicationID, searchClient.apiKey];\n  }\n}\n","import type { StateMapping, IndexUiState, UiState } from '../../types';\n\nfunction getIndexStateWithoutConfigure<TIndexUiState extends IndexUiState>(\n  uiState: TIndexUiState\n): TIndexUiState {\n  const { configure, ...trackedUiState } = uiState;\n  return trackedUiState as TIndexUiState;\n}\n\nexport default function singleIndexStateMapping<\n  TUiState extends UiState = UiState\n>(\n  indexName: keyof TUiState\n): StateMapping<TUiState, TUiState[typeof indexName]> {\n  return {\n    stateToRoute(uiState) {\n      return getIndexStateWithoutConfigure(uiState[indexName] || {});\n    },\n    routeToState(routeState = {} as TUiState[typeof indexName]) {\n      return {\n        [indexName]: getIndexStateWithoutConfigure(routeState),\n      } as unknown as TUiState;\n    },\n  };\n}\n","import type { PlainSearchParameters } from 'algoliasearch-helper';\nimport { isEqual, safelyRunOnBrowser } from '../utils';\nimport type { InfiniteHitsCache } from '../../connectors/infinite-hits/connectInfiniteHits';\n\nfunction getStateWithoutPage(state: PlainSearchParameters) {\n  const { page, ...rest } = state || {};\n  return rest;\n}\n\nconst KEY = 'ais.infiniteHits';\n\nexport default function createInfiniteHitsSessionStorageCache(): InfiniteHitsCache {\n  return {\n    read({ state }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return null;\n      }\n\n      try {\n        const cache = JSON.parse(\n          // @ts-expect-error JSON.parse() requires a string, but it actually accepts null, too.\n          sessionStorage.getItem(KEY)\n        );\n\n        return cache && isEqual(cache.state, getStateWithoutPage(state))\n          ? cache.hits\n          : null;\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          try {\n            sessionStorage.removeItem(KEY);\n          } catch (err) {\n            // do nothing\n          }\n        }\n        return null;\n      }\n    },\n    write({ state, hits }) {\n      const sessionStorage = safelyRunOnBrowser<Storage | undefined>(\n        ({ window }) => window.sessionStorage\n      );\n\n      if (!sessionStorage) {\n        return;\n      }\n\n      try {\n        sessionStorage.setItem(\n          KEY,\n          JSON.stringify({\n            state: getStateWithoutPage(state),\n            hits,\n          })\n        );\n      } catch (error) {\n        // do nothing\n      }\n    },\n  };\n}\n","import type { InstantSearchOptions } from './lib/InstantSearch';\nimport InstantSearch from './lib/InstantSearch';\nimport type { Expand, UiState } from './types';\n\nimport version from './lib/version';\n\nimport * as connectors from './connectors/index';\nimport * as widgets from './widgets/index';\nimport * as helpers from './helpers/index';\nimport * as middlewares from './middlewares/index';\n\nimport * as routers from './lib/routers/index';\nimport * as stateMappings from './lib/stateMappings/index';\nimport { createInfiniteHitsSessionStorageCache } from './lib/infiniteHitsCache/index';\n\ntype InstantSearchModule = {\n  <TUiState = Record<string, unknown>, TRouteState = TUiState>(\n    options: InstantSearchOptions<Expand<UiState & TUiState>, TRouteState>\n  ): InstantSearch<Expand<UiState & TUiState>, TRouteState>;\n  version: string;\n\n  connectors: typeof connectors;\n  widgets: typeof widgets;\n  middlewares: typeof middlewares;\n\n  routers: typeof routers;\n  stateMappings: typeof stateMappings;\n\n  createInfiniteHitsSessionStorageCache: typeof createInfiniteHitsSessionStorageCache;\n  highlight: typeof helpers.highlight;\n  reverseHighlight: typeof helpers.reverseHighlight;\n  snippet: typeof helpers.snippet;\n  reverseSnippet: typeof helpers.reverseSnippet;\n\n  /**\n   * @deprecated use createInsightsMiddleware\n   * @link https://www.algolia.com/doc/api-reference/widgets/insights/js/\n   */\n  insights: typeof helpers.insights;\n};\n\n/**\n * InstantSearch is the main component of InstantSearch.js. This object\n * manages the widget and lets you add new ones.\n *\n * Two parameters are required to get you started with InstantSearch.js:\n *  - `indexName`: the main index that you will use for your new search UI\n *  - `searchClient`: the search client to plug to InstantSearch.js\n *\n * The [search client provided by Algolia](algolia.com/doc/api-client/getting-started/what-is-the-api-client/javascript/)\n * needs an `appId` and an `apiKey`. Those parameters can be found in your\n * [Algolia dashboard](https://www.algolia.com/api-keys).\n *\n * If you want to get up and running quickly with InstantSearch.js, have a\n * look at the [getting started](https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).\n */\nconst instantsearch: InstantSearchModule = (options) =>\n  new InstantSearch(options);\n\ninstantsearch.version = version;\n\ninstantsearch.connectors = connectors;\ninstantsearch.widgets = widgets;\ninstantsearch.middlewares = middlewares;\n\ninstantsearch.routers = routers;\ninstantsearch.stateMappings = stateMappings;\n\ninstantsearch.createInfiniteHitsSessionStorageCache =\n  createInfiniteHitsSessionStorageCache;\ninstantsearch.highlight = helpers.highlight;\ninstantsearch.reverseHighlight = helpers.reverseHighlight;\ninstantsearch.snippet = helpers.snippet;\ninstantsearch.reverseSnippet = helpers.reverseSnippet;\ninstantsearch.insights = helpers.insights;\n\nexport default instantsearch;\n"],"names":["isObjectOrArrayOrFunction","value","Array","isArray","Object","prototype","toString","call","_merge","target","source","key","hasOwnProperty","sourceVal","targetVal","i","l","arguments","length","slice","reduceRight","acc","keys","forEach","undefined","arr1","arr2","filter","index","indexOf","array","comparator","valToNumber","v","parseFloat","map","Error","excluded","sourceKeys","obj","userToken","test","lib","addRefinement","refinementList","attribute","isRefined","valueAsString","facetRefinement","concat","mod","defaultsPure","removeRefinement","clearRefinement","f","toggleRefinement","refinementType","objectHasKeys","omit","hasChanged","newRefinementList","reduce","memo","values","facetList","refinementValue","containsRefinements","refinementValueAsString","isEqualNumericRefinement","a","b","every","el","SearchParameters","newParameters","params","_parseNumbers","isValidUserToken","console","warn","this","facets","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","isNaN","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","merge","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","name","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","parameters","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","RefinementList","setQueryParameters","clearTags","setIndex","setQuery","newQuery","query","setPage","newPage","page","setFacets","setDisjunctiveFacets","setHitsPerPage","n","hitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","push","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","isAttributeValueDefined","searchedValue","find","currentValue","findArray","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","intersection","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","error","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","split","part","trim","JSON","stringify","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","Boolean","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","collection","iteratees","orders","result","criteria","iteratee","object","res","String","replace","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","data","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","parts","escapedValue","escapeFacetValue","count","format","unescapeFacetValue","generateHierarchicalTree","results","fv","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","SearchResults","options","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","facetValueObject","hierarchicalAttributeName","findMatchingHierarchicalFacetFromAttributeName","facetIndex","idxAttributeName","findIndex","exhaustiveFacetsCount","position","isFacetDisjunctive","isFacetConjunctive","facets_stats","compact","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","root","excludes","_state","getFacetStatsIfAvailable","getRefinement","type","attributeName","resultsFacets","getFacetByName","predicate","DEFAULT_SORT","getFacetValues","opts","facetValues","isExcluded","extractNormalizedFacetValues","facetOrdering","recSort","sortFn","node","names","children","childNode","sortedChildren","renderingContent","getFacetOrdering","orderedFacets","remainingFacets","reverseOrder","order","item","ordering","sortRemainingBy","sortViaFacetOrdering","formatSort","vanillaSortFn","getFacetStats","getRefinements","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNumber","TypeError","emit","er","handler","len","args","listeners","err","context","apply","on","addListener","listener","m","newListener","warned","trace","once","fired","g","removeListener","list","splice","removeAllListeners","listenerCount","evlistener","emitter","ctor","superCtor","create","enumerable","writable","configurable","DerivedHelper","mainHelper","fn","main","lastResults","detach","detachDerivedHelper","getModifiedState","sortObject","localeCompare","curr","requestBuilder","_getQueries","queries","indexName","_getHitsSearchParams","_getDisjunctiveFacetSearchParams","filtersMap","segment","join","hasHierarchicalFacetFilter","some","filteredFacetFilters","facetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","require$$0","AlgoliaSearchHelper","client","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","then","content","_originalResponse","e","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","nbHits","errorMessage","initIndex","queryLanguages","searchForFacetValues","userState","clientHasSFFV","clientHasInitIndex","isDisjunctive","algoliaQuery","searchForFacetValuesPromise","response","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","s","specificResults","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","algoliasearchHelper","version","noop","deprecate","message","checkRendering","rendering","usage","getObjectType","_ref$attributesToClea","attributesToClear","finalState","htmlEntities","&","<",">","\"","'","regexUnescapedHtml","regexHasUnescapedHtml","RegExp","htmlCharacters","&amp;","&lt;","&gt;","&quot;","&#39;","regexEscapedHtml","regexHasEscapedHtml","unescape","character","isPlainObject","_typeof","isObjectLike","getTag","getPrototypeOf","proto","TAG_PLACEHOLDER","highlightPreTag","highlightPostTag","TAG_REPLACEMENT","replaceTagsAndEscape","escape","recursiveEscape","input","escapeHits","hits","__escaped","hit","_highlightResult","_snippetResult","concatHighlightedParts","isHighlighted","createSendEventForFacet","instantSearchInstance","attr","widgetType","eventType","_args$","eventName","sendEventToInsights","insightsMethod","payload","filters","serializePayload","btoa","encodeURIComponent","deserializePayload","serialized","parse","decodeURIComponent","atob","buildPayloads","methodName","isSearchStalled","hitsArray","removeEscapedFromHits","queryID","__queryID","hitsChunks","arr","chunkSize","chunks","Math","ceil","chunk","objectIDsByChunk","batch","objectID","positionsByChunk","__position","objectIDs","positions","createSendEventForHits","status","createBindEventForHits","payloads","isIndexWidget","widget","$$type","setIndexHelperState","finalUiState","indexWidget","nextIndexUiState","getIndexId","getHelper","getWidgetSearchParameters","uiState","getWidgets","debounce","func","wait","lastTimeout","reject","clearTimeout","setTimeout","nextMicroTask","defer","callback","progress","cancelled","cancel","createDocumentationMessageGenerator","widgets","links","_ref$connector","connector","createDocumentationLink","items","latLngRegExp","insideBoundingBoxToBoundingBox","_value$","neLat","neLng","swLat","swLng","northEast","lat","lng","southWest","insideBoundingBoxArrayToBoundingBox","_value$split$map2","insideBoundingBoxStringToBoundingBox","getContainerNode","selectorOrHTMLElement","isSelectorString","domElement","document","querySelector","HTMLElement","nodeType","isDomElement","getHighlightedParts","highlightedValue","splitByPreTag","firstValue","shift","elements","splitByPostTag","hasAlphanumeric","getPropertyByPath","current","resultsFacet","nameParts","facetData","refinementKey","getFacetRefinement","_loop","includesQuery","_state$facetsExcludes","_state$disjunctiveFac","_state$hierarchicalFa","_state$numericRefinem","_state$tagRefinements","refinementName","exclude","operatorOriginal","valueOrValues","getWidgetAttribute","initOptions","renderState","getWidgetRenderState","_widget$getWidgetRend","widgetParams","addAbsolutePosition","addQueryID","isPrimitive","isEqual","first","second","isFiniteNumber","isFinite","isSpecialClick","button","altKey","ctrlKey","metaKey","shiftKey","uniq","mergeHierarchicalFacets","left","right","_","nextFacets","mergeSearchParameters","hierarchicalFacetsRefinementsMerged","mergeHierarchicalFacetsRefinements","ruleContexts","rest","mergeWithRest","mergeFacets","mergeRuleContexts","mergeDisjunctiveFacets","mergeFacetRefinements","mergeFacetsExcludes","mergeDisjunctiveFacetsRefinements","mergeNumericRefinements","mergeTagRefinements","range","start","end","_ref$step","step","limitStep","arrayLength","round","_toConsumableArray","createInitArgs","templatesConfig","createURL","scopedResults","searchMetadata","createRenderArgs","getResults","getScopedResults","reverseHighlightedParts","isNextHighlighted","_parts","isPreviousHighlighted","_parts2","getHighlightFromSiblings","safelyRunOnBrowser","fallback","window","toArray","withUsage","privateHelperSetState","_uiState","getLocalWidgetsUiState","widgetStateOptions","initialUiState","getWidgetUiState","getWidgetState","getLocalWidgetsSearchParameters","widgetSearchParametersOptions","initialSearchParameters","_widgetParams$indexId","indexId","localWidgets","localUiState","localInstantSearchInstance","localParent","$$widgetType","getIndexName","widgetParent","getParent","resolveScopedResultsFromWidgets","nextState","_createURL","searchParameters","addWidgets","init","render","getRenderState","storeRenderState","_this","_initialUiState","scheduleSearch","removeWidgets","dispose","_this2","_instantSearchInstanc","onStateChange","mainIndex","setUiState","searchWithoutTriggeringOnStateChange","resolveSearchParameters","_this3","indexInitialResults","_initialResults","resetPageFromWidgets","indexWidgets","widgetHelper","scheduleStalledRender","scheduleRender","onInternalStateChange","_this4","_this5","previousUiState","innerIndex","refreshUiState","parentIndexName","component","componentName","descendantName","modifierName","descendent","modifier","suit","highlight","_ref$highlightedTagNa","highlightedTagName","_ref$cssClasses","cssClasses","_ref2$value","attributeValue","className","highlighted","reverseHighlight","snippet","reverseSnippet","insights","method","serializedPayload","writeDataAttributes","ANONYMOUS_TOKEN_COOKIE_KEY","getInsightsAnonymousUserTokenInternal","cookie","prefix","cookies","charAt","substring","getCookie","formatNumber","numberLocale","toLocaleString","getIndexStateWithoutConfigure","configure","simpleStateMapping","stateToRoute","routeToState","routeState","arrayToObject","plainObjects","pushToArray","valueOrArray","generateArrayPrefix","strictNullHandling","skipNulls","encoder","allowDots","serializeDate","formatter","encodeValuesOnly","charset","Date","utils","maybeMap","isNonNullishPrimitive","isBuffer","objKeys","keyPrefix","parseArrayValue","comma","parseKeys","givenKey","valuesParsed","child","depth","exec","has","allowPrototypes","chain","leaf","parseArrays","cleanRoot","parseInt","arrayLimit","0","parseObject","setWindowTitle","title","percentTwenties","Format","default","formatters","RFC1738","RFC3986","hexTable","toUpperCase","assign","combine","queue","o","prop","refs","j","pop","compacted","compactQueue","decode","str","decoder","strWithoutPlus","encode","defaultEncoder","kind","string","Symbol","$0","c","charCodeAt","formats","isRegExp","mapped","mergeTarget","targetItem","arrayPrefixGenerators","brackets","repeat","toISO","toISOString","defaultFormat","addQueryPrefix","charsetSentinel","delimiter","date","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","normalizeParseOptions","tempObj","cleanStr","limit","Infinity","skipIndex","bracketEqualsPos","encodedVal","numberStr","fromCharCode","parseValues","newObj","normalizeStringifyOptions","arrayFormat","joined","BrowserHistory","windowTitle","_ref$writeDelay","writeDelay","parseURL","getLocation","_classCallCheck","_defineProperty","writeTimer","read","latestAcknowledgedHistory","history","_createClass","qsModule","qs","location","url","shouldWrite","pushState","inPopState","_onPopState","addEventListener","isDisposed","removeEventListener","write","lastPushWasByISAfterDispose","href","historyRouter","_ref7$createURL","protocol","hostname","_location$port","port","pathname","hash","queryString","portWithPrefix","_ref7$parseURL","_ref7$writeDelay","_ref7$getLocation","createRouterMiddleware","props","router","_props$stateMapping","stateMapping","route","lastRouteState","subscribe","onUpdate","started","unsubscribe","isMetadataEnabled","navigator","_window$navigator","userAgent","_window$navigator$use","createMetadataMiddleware","payloadContainer","createElement","refNode","ua","transporter","_ua","extractPayload","appendChild","remove","defaultCreateURL","connectClearRefinements","renderFn","unmountFn","_ref$includedAttribut","includedAttributes","_ref$excludedAttribut","excludedAttributes","_ref$transformItems","transformItems","cachedRefine","connectorState","refine","cachedCreateURL","renderOptions","scopedResult","getAttributesToClear","indexHelper","canRefine","attributeToClear","InstantSearch","_inherits","shouldResetStatus","_searchStalledTimer","nextUiState","middleware","_options$initialUiSta","_options$routing","routing","searchFunction","_options$stalledSearc","stalledSearchDelay","_options$searchClient","searchClient","_options$insightsClie","insightsClient","_options$onStateChang","helpers","Number","createHelpers","compileOptions","_stalledSearchDelay","_searchFunction","routerOptions","use","get","newMiddlewareList","newMiddleware","creator","middlewareToUnuse","includes","fakeClient","_mainHelperSearch","mainIndexHelper","searchFunctionHelper","originalScheduleSearch","callOnStateChange","connectCurrentRefinements","currentRefinements","accResults","getRefinementsItems","clearRefinementFromState","filterFunction","normalizeRefinement","allItems","currentItem","label","getValue","getOperatorSymbol","normalizedRefinement","connectHierarchicalMenu","_ref$separator","_ref$rootPath","_ref$showParentLevel","_ref$limit","_ref$showMore","showMore","_ref$showMoreLimit","showMoreLimit","_ref$sortBy","sendEvent","_refine","toggleShowMore","cachedToggleShowMore","isShowingMore","getLimit","createToggleShowMore","hierarchicalMenu","canToggleShowMore","facetItems","hasExhaustiveItems","maxValuesPerFacet","_prepareFacetValues","withFacetConfiguration","currentMaxValuesPerFacet","nextMaxValuesPerFacet","max","withMaxValuesPerFacet","connectHits","bindEvent","_ref$escapeHTML","escapeHTML","hitsWithAbsolutePositionAndQueryID","inferPayload","selectedHits","selectedObjectIDs","h","getSelectedHits","queryIDs","getQueryID","getPositions","withInsights","isFirstRender","aa","withInstantSearchUsage","inferredPayload","wrapInsightsClient","u","parentNode","removeChild","defaultProps","ref","__k","__","__b","__e","__d","__c","__h","__v","vnode","p","d","base","__r","debounceRendering","__P","__n","ownerSVGElement","z","w","y","x","C","A","N","M","nextSibling","insertBefore","$","setProperty","H","style","cssText","toLowerCase","T","I","setAttribute","removeAttribute","contextType","__E","O","sub","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","localName","createTextNode","createElementNS","is","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","L","diffed","unmount","componentWillUnmount","P","firstChild","getDerivedStateFromError","componentDidCatch","forceUpdate","findInsightsTarget","startElement","endElement","validator","element","parentElement","insightsListener","BaseComponent","onClick","targetWithEvent","currentTarget","hasAttribute","getAttribute","parseInsightsEvent","single","insightsTarget","hasDataAttributes","readDataAttributes","connectHitsPerPage","userItems","defaultItems","defaultItem","normalizeItems","hasNoResults","connectHitsWithInsights","getStateWithoutPage","connectInfiniteHits","getFirstReceivedPage","cachedHits","pages","min","getLastReceivedPage","showPrevious","_ref4$escapeHTML","_ref4$transformItems","_ref4$cache","cache","cachedState","getInMemoryCache","widgetRenderState","currentPageHits","infiniteHits","isFirstPage","transformedHits","__isArtificial","getShowPrevious","getShowMore","extractHitsFromCachedHits","isLastPage","nbPages","stateWithoutPage","widgetSearchParameters","connectMenu","menu","refinedItem","connectNumericMenu","_ref2$attribute","_ref2$items","_ref2$transformItems","equal","numericMenu","withoutRefinements","withMinRefinement","refinedState","getRefinedState","createSendEvent","_step","preparedItems","encodeURI","prepareItems","allIsSelected","decodeURI","_iterator","connectInfiniteHitsWithInsights","option","hasNumericRefinement","resolvedState","refinedOption","connectPagination","totalPages","_ref$padding","padding","pager","Paginator","currentPage","total","helperState","getMaxPage","pagination","totalDisplayedPages","nbPagesDisplayed","paddingLeft","calculatePaddingLeft","toPrecision","precision","pow","floor","connectRange","minBound","maxBound","_ref2$precision","rangeFormatter","from","to","toFixed","formatToNumber","currentRange","_ref12","nextMin","nextMax","newNextMin","newNextMax","currentRangeMin","currentRangeMax","isResetMin","isResetMax","nextMinAsNumber","nextMaxAsNumber","isResetNewNextMin","isGreaterThanCurrentRange","isMinValid","isResetNewNextMax","isLowerThanRange","isMaxValid","_getCurrentRange","minValue","maxValue","_getCurrentRefinement","_searchParameters$get2","_searchParameters$get3","lowerBound","upperBound","connectRefinementList","_ref$operator","_ref$escapeFacetValue","escapeFacetValues","formatItems","lastResultsFromMainSearch","triggerRefine","lastItemsFromMainSearch","createSearchForFacetValues","searchResults","tags","escapeFacets","normalizedFacetValues","isFromSearch","maxValuesPerFacetConfig","currentLimit","searchFacetValues","searchForItems","withoutMaxValuesPerFacet","defaultQueryHook","hook","connectSearchBox","_clear","_ref$queryHook","queryHook","searchBox","clear","connectSortBy","currentIndex","initialIndex","connectRatingMenu","_ref2$max","getRefinedStar","_values$","emptyState","ratingMenu","refinementIsApplied","totalCount","maxDecimalPlaces","_facetResult$name$spl3","decimal","getFacetsMaxDecimalPlaces","refinedStar","star","stars","_v","reverse","withDisjunctiveFacet","connectStats","nbSortedHits","areHitsSorted","appliedRelevancyStrictness","connectToggleRefinement","_ref2$on","userOn","userOff","off","hasAnOffValue","valuesToRemove","valuesToAdd","onFacetValue","offFacetValue","offValue","allFacetValues","onData","offData","nextRefinement","toggleRefinementFactory","toggle","connectBreadcrumb","breadcrumb","shiftItemsValues","getItems","getBoundingBoxAsString","setBoundingBoxAsString","connectGeoSearch","getPositionFromState","aroundLatLng","pattern","match","aroundLatLngToPosition","toggleRefineOnMapMove","widgetState","internalToggleRefineOnMapMove","createInternalToggleRefinementOnMapMove","isRefineOnMapMove","setMapMoveSinceLastRefine","internalSetMapMoveSinceLastRefine","createInternalSetMapMoveSinceLastRefine","shouldTriggerRender","hasMapMoveSinceLastRefine","_ref$enableRefineOnMa","enableRefineOnMapMove","lastRefinePosition","lastRefineBoundingBox","initArgs","renderArgs","positionChangedSinceLastRefine","boundingBoxChangedSinceLastRefine","_geoloc","getCurrentRefinementFromState","ne","sw","boundingBox","clearMapRefinement","isRefinedWithMap","geoSearch","connectPoweredBy","defaultUrl","_window$location","_ref2$url","poweredBy","getInitialSearchParameters","connectConfigure","_renderState$configur","actualState","nextSearchParameters","createOptionalFilter","attributeScore","connectConfigureRelatedItems","matchingPatterns","_ref2$transformSearch","transformSearchParameters","optionalFilters","score","attributeSubValue","sumOrFiltersScores","makeWidget","applyRuleContexts","initialRuleContexts","trackedFilters","transformRuleContexts","sharedHelperState","previousRuleContexts","newRuleContexts","facetRefinements","trackedFacetValues","getTrackedFacetValues","ruleName","escapeRuleContext","getRuleContextsFromTrackedFilters","connectQueryRules","_ref2$trackedFilters","_ref2$transformRuleCo","rules","onHelperChange","hasTrackedFilters","hasStateRefinements","_ref4$userData","userData","queryRules","createVoiceSearchHelper","getDefaultState","transcript","isSpeechFinal","errorCode","resetState","onStart","onError","onResult","isFinal","searchAsYouSpeak","onQueryChange","onEnd","recognition","stop","language","SpeechRecognitionAPI","webkitSpeechRecognition","SpeechRecognition","getState","isBrowserSupported","isListening","startListening","interimResults","lang","stopListening","connectVoiceSearch","additionalQueryParameters","_widgetParams$createV","builtInCreateVoiceSearchHelper","voiceSearch","ignorePlurals","removeStopWords","optionalWords","_voiceSearchHelper","toggleListening","voiceListeningState","additional","toReset","connectAnswers","_ref$nbHits","_ref$renderDebounceTi","renderDebounceTime","_ref$searchDebounceTi","searchDebounceTime","_ref$extraParameters","extraParameters","debouncedRefine","runConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","promise","currentPromiseId","createConcurrentSafePromise","lastHits","isLoading","debouncedRender","answersIndex","hasFindAnswersMethod","answers","connectRelevantSort","relevantSort","relevancyStrictness","isVirtualReplica","isRelevantSorted","connectDynamicWidgets","_widgetParams$maxValu","_widgetParams$facets","_widgetParams$transfo","fallbackWidget","Map","set","isMounted","widgetsToUnmount","widgetsToMount","attributesToRender","shouldMount","toRemove","dynamicWidgets","_results$renderingCon2","_results$renderingCon3","_results$renderingCon4","EXPERIMENTAL_connectAnswers","EXPERIMENTAL_connectDynamicWidgets","autocomplete","stateWithoutQuery","cx","_len","_key","prepareTemplateProps","defaultTemplates","templates","config","defaultTemplate","customTemplate","isCustomTemplate","useCustomCompileOptions","prepareTemplates","Hogan","rIsWhitespace","rQuot","rNewline","rCr","rSlash","rLineSep","rParagraphSep","cleanTripleStache","token","substr","tagChange","text","#","^","/","!","=","{","_t","scan","delimiters","close","closeIndex","tagType","buf","tokens","seenTag","lineStart","otag","ctag","addBuf","filterLine","haveSeenTag","noNewLine","isAllWhitespace","lineIsWhitespace","next","indent","allowedInSuper","\n","isOpener","isCloser","open","stringifyPartials","codeObj","partials","esc","stringifySubstitutions","subs","wrapMain","code","serialNo","chooseMethod","createPartial","sym","tripleStache","generate","tree","walk","asString","makeTemplate","template","Template","makePartials","Function","codegen","nodes","ctx","inPartial","last","nodelist","buildTree","stack","customTags","tail","instructions","opener","sectionTags","cacheKey","disableLambda","modelGet","compile","exports","findInScope","scope","doModelGet","compiler","coerceToString","hChars","rAmp","rLt","rGt","rApos","ri","ep","symbol","partial","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","createSpecializedPartial","rp","rs","section","inverted","pass","ms","returnFound","found","mv","ls","oldTags","ct","fl","textSource","_extends","module","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_excluded","_ref3","Fragment","HighlightPart","InternalHighlight","_ref","_ref2","classNames","nonHighlightedTagName","nonHighlighted","createHighlightPartComponent","_ref4","_ref4$highlightedTagN","_ref4$nonHighlightedT","_ref4$separator","_ref4$classNames","_objectWithoutProperties","partIndex","isLastPart","subPart","subPartIndex","Highlight","HighlightUiComponent","ReverseHighlight","ReverseHighlightUiComponent","ReverseSnippet","ReverseSnippetUiComponent","Snippet","SnippetUiComponent","renderTemplate","templateKey","html","components","transformedHelpers","helperKey","hogan","transformHelpersToHogan","spaces","Component","nextProps","rootProps","RootTagName","rootTagName","Breadcrumb","templateProps","noRefinementRoot","selectedItem","link","preventDefault","isLast","aria-hidden","ClearRefinements","disabledButton","disabled","CurrentRefinements","capitalize","createItemKey","category","categoryLabel","delete","handleClick","renderer","container","Answers","emptyRoot","header","loader","__hitIndex","home","resetLabel","createContainer","rootContainer","containerSelector","otherWidgetParams","userContainer","containers","connectorWidgets","childWidget","GeoSearchButton","_ref$disabled","GeoSearchToggle","classNameLabel","classNameInput","onToggle","onChange","GeoSearchControls","enableRefine","enableRefineControl","enableClearMapRefinement","onRefineToggle","onRefineClick","onClearClick","control","selectedLabel","redo","disabledRedo","reset","refineWithMap","mapInstance","getBounds","getNorthEast","toJSON","getSouthWest","lockUserInteraction","functionThatAltersTheMapPosition","isUserInteraction","isFirstRendering","googleReference","initialZoom","initialPosition","mapOptions","createMarker","markerOptions","isPendingRefine","markers","rootElement","mapElement","treeElement","maps","mapTypeControl","fullscreenControl","streetViewControl","clickableIcons","zoomControlOptions","ControlPosition","LEFT_TOP","addListenerOnce","nextItemsIds","_collectMarkersForNex2","nextIds","marker","update","exit","__id","collectMarkersForNextRender","updateMarkers","exitMarkers","updateMarkerIds","nextPendingItems","setMap","events","shouldUpdate","boundingBoxPadding","google","latLngBounds","extend","getPosition","LatLngBounds","createBoundingBoxFromMarkers","fitBounds","setCenter","setZoom","HTMLMarker","RefinementListItem","facetValueToRefine","templateData","subItems","originalEvent","showSubmit","showReset","showLoadingIndicator","autofocus","searchAsYouType","onSubmit","onReset","SearchBox","focused","stopPropagation","blur","focus","placeholder","action","role","form","noValidate","autoFocus","autoComplete","autoCorrect","autoCapitalize","spellCheck","maxLength","onInput","onBlur","onFocus","submit","hidden","loadingIndicator","isHierarchicalMenuItem","handleItemClick","childList","refinementListItemClassName","disabledItem","parentItem","tagName","resetInput","actualValue","showMoreButtonClassName","disabledShowMore","showMoreButton","shouldDisableSearchBox","searchIsAlwaysActive","searchPlaceholder","searchable","searchBoxTemplateProps","refineFirstValue","_generateFacetItem","noResults","selectedItemLink","showMoreText","empty","HitsWithInsightsListener","withInsightsListener","Selector","setValue","select","showPreviousText","InfiniteHitsWithInsightsListener","hasShowPrevious","loadPrevious","disabledLoadPrevious","loadMore","disabledLoadMore","MenuSelect","selectedValue","defaultOption","radio","defaultChecked","labelText","Pagination","createClickHandler","pageNumber","showFirst","PaginationLink","ariaLabel","firstPageItem","isDisabled","previousPageItem","pageItem","isSelected","showNext","nextPageItem","showLast","lastPageItem","_ref$isDisabled","_ref$isSelected","aria-label","__H","__V","__N","F","requestAnimationFrame","cancelAnimationFrame","Panel","_useState2","useState","isCollapsed","setIsCollapsed","_useState4","isControlled","setIsControlled","bodyRef","useRef","useEffect","bodyElement","collapsible","collapsibleRoot","collapsedRoot","collapseButton","aria-expanded","prevIsCollapsed","collapsed","body","footer","PoweredBy","theme","rel","height","logo","viewBox","width","fill","QueryRuleCustomData","RangeInput","noRefinement","inputMin","inputMax","separatorText","submitText","KEYS","PERCENT_FULL","getClassName","orientation","getHandleFor","ev","killEvent","Rheostat","handlePos","handleDimensions","mousePos","sliderBox","slidingIndex","getPublicState","getSliderBoundingBox","getProgressStyle","getMinValue","getMaxValue","getHandleDimensions","getClosestSnapPoint","getSnapPosition","getNextPositionForKey","getNextState","getClosestHandle","setStartSlide","startMouseSlide","startTouchSlide","handleMouseSlide","handleTouchSlide","handleSlide","endSlide","handleKeydown","validatePosition","validateValues","canMove","fireChangeEvent","slideTo","updateNewValues","minMaxChanged","valuesChanged","orientationChanged","willBeDisabled","rheostat","rect","getBoundingClientRect","clientHeight","top","clientWidth","prevValue","diffValue","handleNode","snapPoints","snapTo","snap","abs","positionPercent","keyCode","shouldSnap","proposedValue","proposedPercentage","originalPercentage","stepValue","stepMultiplier","proposedPosition","actualPosition","nextHandlePos","closestIdx","_node","clientX","clientY","changedTouches","touch","onSliderDragStart","onSliderDragMove","onSliderDragEnd","handleId","validPositionPercent","onKeyPress","proposedValues","realValue","onAfterSet","onValuesUpdated","nextValues","_this6","Handle","handle","PitComponent","pitComponent","pitPoints","ProgressBar","progressBar","handleStyle","aria-valuemax","_this7","aria-valuemin","aria-valuenow","aria-disabled","data-handle-key","onKeyDown","onMouseDown","onTouchStart","tabIndex","pitStyle","Pit","positionValue","shouldDisplayValue","pitValue","marginLeft","Slider","tooltips","roundedValue","stepsLength","steps","pips","computeSnapPoints","computeDefaultPitPoints","disabledRoot","createHandleComponent","handleChange","ItemWrapper","RelevantSort","Stats","hasManySortedResults","hasNoSortedResults","hasOneSortedResults","hasManyResults","hasOneResult","isFull","starIcon","fullStarIcon","emptyStarIcon","xlinkHref","fillRule","transform","strokeWidth","strokeOpacity","cy","dur","repeatCount","resetIcon","submitIcon","loadingIcon","stroke","checkbox","searchableNoResults","searchBoxSuit","suffix","getSortedResultsSentence","getResultsSentence","ToggleRefinement","VoiceSearch","ButtonInnerElement","x1","y1","x2","y2","buttonText","stroke-width","stroke-linecap","stroke-linejoin","EXPERIMENTAL_answers","_ref3$templates","_ref3$cssClasses","userCssClasses","containerNode","specializedRenderer","EXPERIMENTAL_dynamicWidgets","pushFunction","_ref$delay","delay","_ref$triggerOnUIInter","triggerOnUIInteraction","_ref$pushInitialSearc","pushInitialSearch","_ref$pushPagination","pushPagination","sendAnalytics","analyticsState","serializedParams","serializedRefinements","serializeRefinements","serializedNumericRefinements","equals","serializeNumericRefinements","stringifiedParams","dataToSend","lastSentData","pushTimeout","isInitialSearch","onUnload","_ref$initialZoom","_ref$initialPosition","_ref$templates","userTemplates","_ref$builtInMarker","builtInMarker","userBuiltInMarker","userCustomHTMLMarker","customHTMLMarker","_ref$enableRefine","_ref$enableClearMapRe","_ref$enableRefineCont","createOptions","OverlayView","_ref$anchor","anchor","latLng","LatLng","getPanes","overlayMouseTarget","bbBox","offset","getProjection","fromLatLngToDivPixel","zIndex","createHTMLMarker","Marker","_ref3$showMore","receivedHits","_ref5$cssClasses","_ref3$sortBy","_ref3$limit","_ref3$showFirst","_ref3$showLast","_ref3$showPrevious","_ref3$showNext","_ref3$scrollTo","scrollTo","userScrollTo","scrollToNode","scrollIntoView","panelWidgetParams","_ref3$hidden","bodyContainerNode","collapsedFn","collapseIcon","widgetFactory","renderPanel","collapseButtonText","placesReference","_ref$defaultPosition","defaultPosition","placesOptions","placesAutocomplete","initialLatLngViaIP","isInitialLatLngViaIPSet","eventOptions","suggestion","_eventOptions$suggest2","latlng","places","_ref5$query","_ref5$position","aroundLatLngViaIP","setVal","_ref3$theme","_ref4$cssClasses","_ref4$templates","CustomData","_ref3$precision","rangeMin","rangeMax","_ref3$pips","_ref3$tooltips","minRange","maxRange","minStart","maxStart","minFinite","maxFinite","_ref5$max","_ref5$templates","id","_ref3$searchable","_ref3$searchablePlace","searchablePlaceholder","_ref3$searchableEscap","searchableEscapeFacetValues","_ref3$searchableIsAlw","searchableIsAlwaysActive","searchableRoot","searchableForm","searchableInput","searchableSubmit","searchableSubmitIcon","searchableReset","searchableResetIcon","searchableLoadingIndicator","searchableLoadingIcon","searchBoxTemplates","searchBoxDefaultTemplates","_widgetParams$templat","_widgetParams$cssClas","_ref3$placeholder","_ref3$autofocus","_ref3$searchAsYouType","_ref3$showReset","_ref3$showSubmit","_ref3$showLoadingIndi","_ref3$on","_ref3$searchAsYouSpea","VoiceSearchComponent","_insightsClient","insightsInitParams","onEvent","hasInsightsClient","initialParameters","_getAppIdAndApiKey2","headers","queryParameters","APP_ID","API_KEY","applicationID","apiKey","getAppIdAndApiKey","appId","queuedUserToken","userTokenBeforeInit","_error","setUserTokenToSearch","anonymousUserToken","immediate","KEY","instantsearch","connectors","middlewares","routers","stateMappings","createInfiniteHitsSessionStorageCache","sessionStorage","getItem","SyntaxError","removeItem","setItem"],"mappings":"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"}