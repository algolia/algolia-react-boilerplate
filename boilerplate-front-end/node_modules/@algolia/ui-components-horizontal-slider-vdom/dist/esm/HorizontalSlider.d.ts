/** @jsx createElement */
import { ComponentChildren, Renderer } from '@algolia/ui-components-shared';
import { FrameworkProps, HorizontalSliderProps } from './types';
interface IntrinsicElement extends JSX.IntrinsicAttributes {
    children?: ComponentChildren;
    className?: string;
    id?: string;
    tabIndex?: string | number;
    title?: string;
    onClick?: (event: MouseEvent) => void;
    onKeyDown?: (event: KeyboardEvent) => void;
    onScroll?: (event: MouseEvent) => void;
}
interface IntrinsicSvgElement extends IntrinsicElement {
    width?: string;
    height?: string;
    viewBox?: string;
    fill?: string;
    fillRule?: string;
    clipRule?: string;
    d?: string;
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            div: IntrinsicElement;
            button: IntrinsicElement;
            ol: IntrinsicElement;
            li: IntrinsicElement;
            svg: IntrinsicSvgElement;
            path: IntrinsicSvgElement;
        }
    }
}
export declare function generateHorizontalSliderId(): string;
export declare function updateNavigationButtonsProps({ listRef, nextButtonRef, previousButtonRef, }: Pick<FrameworkProps, 'listRef' | 'nextButtonRef' | 'previousButtonRef'>): void;
export declare function createHorizontalSliderComponent({ createElement }: Renderer): <TObject extends {
    objectID: string;
}>(props: HorizontalSliderProps<TObject> & FrameworkProps) => JSX.Element | null;
export {};
