{"version":3,"file":"index.js","sources":["../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../shared/dist/esm/cx.js","../../src/HorizontalSlider.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export function cx() {\n  for (var _len = arguments.length, cssClasses = new Array(_len), _key = 0; _key < _len; _key++) {\n    cssClasses[_key] = arguments[_key];\n  }\n\n  return cssClasses.reduce(function (acc, className) {\n    if (Array.isArray(className)) {\n      return acc.concat(className);\n    }\n\n    return acc.concat([className]);\n  }, []).filter(Boolean).join(' ');\n}","/** @jsx createElement */\nimport { ComponentChildren, cx, Renderer } from '@algolia/ui-components-shared';\n\nimport {\n  FrameworkProps,\n  HorizontalSliderProps,\n  HorizontalSliderTranslations,\n  RecordWithObjectID,\n} from './types';\n\n// basic types to allow this file to compile without @types/react or preact\n// this is a minimal subset of the actual types, coming from the JSX namespace\ninterface IntrinsicElement extends JSX.IntrinsicAttributes {\n  children?: ComponentChildren;\n\n  className?: string;\n  id?: string;\n  tabIndex?: string | number;\n  title?: string;\n\n  onClick?: (event: MouseEvent) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  onScroll?: (event: MouseEvent) => void;\n}\n\ninterface IntrinsicSvgElement extends IntrinsicElement {\n  width?: string;\n  height?: string;\n  viewBox?: string;\n  fill?: string;\n  fillRule?: string;\n  clipRule?: string;\n  d?: string;\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      div: IntrinsicElement;\n      button: IntrinsicElement;\n      ol: IntrinsicElement;\n      li: IntrinsicElement;\n      svg: IntrinsicSvgElement;\n      path: IntrinsicSvgElement;\n    }\n  }\n}\n\nlet lastHorizontalSliderId = 0;\n\nexport function generateHorizontalSliderId() {\n  return `uic-horizontal-slider-${lastHorizontalSliderId++}`;\n}\n\nexport function updateNavigationButtonsProps({\n  listRef,\n  nextButtonRef,\n  previousButtonRef,\n}: Pick<FrameworkProps, 'listRef' | 'nextButtonRef' | 'previousButtonRef'>) {\n  if (\n    !listRef.current ||\n    !previousButtonRef.current ||\n    !nextButtonRef.current\n  ) {\n    return;\n  }\n\n  previousButtonRef.current.hidden = listRef.current.scrollLeft <= 0;\n  nextButtonRef.current.hidden =\n    listRef.current.scrollLeft + listRef.current.clientWidth >=\n    listRef.current.scrollWidth;\n}\n\nexport function createHorizontalSliderComponent({ createElement }: Renderer) {\n  return function HorizontalSlider<TObject extends RecordWithObjectID>(\n    props: HorizontalSliderProps<TObject> & FrameworkProps\n  ) {\n    const {\n      listRef,\n      nextButtonRef,\n      previousButtonRef,\n      sliderIdRef,\n      updateNavigationButtonsProps,\n    } = props;\n    const translations: Required<HorizontalSliderTranslations> = {\n      sliderLabel: 'Items',\n      nextButtonLabel: 'Next',\n      nextButtonTitle: 'Next',\n      previousButtonLabel: 'Previous',\n      previousButtonTitle: 'Previous',\n      ...props.translations,\n    };\n    const classNames = props.classNames ?? {};\n\n    function scrollLeft() {\n      if (listRef.current) {\n        listRef.current.scrollLeft -= listRef.current.offsetWidth * 0.75;\n      }\n    }\n\n    function scrollRight() {\n      if (listRef.current) {\n        listRef.current.scrollLeft += listRef.current.offsetWidth * 0.75;\n      }\n    }\n\n    if (props.items.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={cx('uic-HorizontalSlider-container', classNames.root)}>\n        <button\n          ref={previousButtonRef}\n          title={translations.previousButtonTitle}\n          aria-label={translations.previousButtonLabel}\n          aria-controls={sliderIdRef.current}\n          className={cx(\n            'uic-HorizontalSlider-navigation',\n            'uic-HorizontalSlider-navigation--previous',\n            classNames.navigation,\n            classNames.navigationPrevious\n          )}\n          onClick={(event) => {\n            event.preventDefault();\n            scrollLeft();\n          }}\n        >\n          <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\" fill=\"none\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M7.13809 0.744078C7.39844 1.06951 7.39844 1.59715 7.13809 1.92259L2.27616 8L7.13809 14.0774C7.39844 14.4028 7.39844 14.9305 7.13809 15.2559C6.87774 15.5814 6.45563 15.5814 6.19528 15.2559L0.861949 8.58926C0.6016 8.26382 0.6016 7.73618 0.861949 7.41074L6.19528 0.744078C6.45563 0.418641 6.87774 0.418641 7.13809 0.744078Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n\n        <ol\n          className={cx('uic-HorizontalSlider-list', classNames.list)}\n          ref={listRef}\n          tabIndex={0}\n          id={sliderIdRef.current}\n          aria-roledescription=\"carousel\"\n          aria-label={translations.sliderLabel}\n          aria-live=\"polite\"\n          onScroll={updateNavigationButtonsProps}\n          onKeyDown={(event) => {\n            if (event.key === 'ArrowLeft') {\n              event.preventDefault();\n              scrollLeft();\n            } else if (event.key === 'ArrowRight') {\n              event.preventDefault();\n              scrollRight();\n            }\n          }}\n        >\n          {props.items.map((item, index) => (\n            <li\n              key={item.objectID}\n              className={cx('uic-HorizontalSlider-item', classNames.item)}\n              aria-roledescription=\"slide\"\n              aria-label={`${index + 1} of ${props.items.length}`}\n            >\n              <props.itemComponent item={item} />\n            </li>\n          ))}\n        </ol>\n\n        <button\n          ref={nextButtonRef}\n          title={translations.nextButtonTitle}\n          aria-label={translations.nextButtonLabel}\n          aria-controls={sliderIdRef.current}\n          className={cx(\n            'uic-HorizontalSlider-navigation',\n            'uic-HorizontalSlider-navigation--next',\n            classNames.navigation,\n            classNames.navigationNext\n          )}\n          onClick={(event) => {\n            event.preventDefault();\n            scrollRight();\n          }}\n        >\n          <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\" fill=\"none\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M0.861908 15.2559C0.601559 14.9305 0.601559 14.4028 0.861908 14.0774L5.72384 8L0.861908 1.92259C0.601559 1.59715 0.601559 1.06952 0.861908 0.744079C1.12226 0.418642 1.54437 0.418642 1.80472 0.744079L7.13805 7.41074C7.3984 7.73618 7.3984 8.26382 7.13805 8.58926L1.80472 15.2559C1.54437 15.5814 1.12226 15.5814 0.861908 15.2559Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n      </div>\n    );\n  };\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","cx","_len","arguments","length","cssClasses","Array","_key","reduce","acc","className","isArray","concat","filter","Boolean","join","lastHorizontalSliderId","createElement","props","listRef","nextButtonRef","previousButtonRef","sliderIdRef","updateNavigationButtonsProps","translations","sliderLabel","nextButtonLabel","nextButtonTitle","previousButtonLabel","previousButtonTitle","classNames","scrollLeft","current","offsetWidth","scrollRight","items","root","ref","title","navigation","navigationPrevious","onClick","event","preventDefault","width","height","viewBox","fill","fillRule","clipRule","d","list","tabIndex","id","onScroll","onKeyDown","map","item","index","objectID","itemComponent","navigationNext","hidden","clientWidth","scrollWidth"],"mappings":";wRAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECZF,SAASQ,QACT,IAAIC,EAAOC,UAAUC,OAAQC,EAAa,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IACrFF,EAAWE,GAAQJ,UAAUI,UAGxBF,EAAWG,QAAO,SAAUC,EAAKC,UAClCJ,MAAMK,QAAQD,GACTD,EAAIG,OAAOF,GAGbD,EAAIG,OAAO,CAACF,MAClB,IAAIG,OAAOC,SAASC,KAAK,mOCsC9B,IAAIC,EAAyB,oCAyBtB,gBAA2CC,IAAAA,qBACzC,SACLC,SAGEC,EAKED,EALFC,QACAC,EAIEF,EAJFE,cACAC,EAGEH,EAHFG,kBACAC,EAEEJ,EAFFI,YACAC,EACEL,EADFK,6BAEIC,mWACJC,YAAa,QACbC,gBAAiB,OACjBC,gBAAiB,OACjBC,oBAAqB,WACrBC,oBAAqB,YAClBX,EAAMM,cAELM,YAAaZ,EAAMY,0BAAc,YAE9BC,IACHZ,EAAQa,UACVb,EAAQa,QAAQD,YAA4C,IAA9BZ,EAAQa,QAAQC,sBAIzCC,IACHf,EAAQa,UACVb,EAAQa,QAAQD,YAA4C,IAA9BZ,EAAQa,QAAQC,oBAIvB,IAAvBf,EAAMiB,MAAM/B,OACP,KAIPa,SAAKP,UAAWT,EAAG,iCAAkC6B,EAAWM,OAC9DnB,YACEoB,IAAKhB,EACLiB,MAAOd,EAAaK,iCACRL,EAAaI,oCACVN,EAAYU,QAC3BtB,UAAWT,EACT,kCACA,4CACA6B,EAAWS,WACXT,EAAWU,oBAEbC,QAAS,SAACC,GACRA,EAAMC,iBACNZ,MAGFd,SAAK2B,MAAM,IAAIC,OAAO,KAAKC,QAAQ,WAAWC,KAAK,QACjD9B,UACE+B,SAAS,UACTC,SAAS,UACTC,EAAE,mUACFH,KAAK,mBAKX9B,QACEP,UAAWT,EAAG,4BAA6B6B,EAAWqB,MACtDd,IAAKlB,EACLiC,SAAU,EACVC,GAAI/B,EAAYU,+BACK,wBACTR,EAAaC,wBACf,SACV6B,SAAU/B,EACVgC,UAAW,SAACb,GACQ,cAAdA,EAAMhD,KACRgD,EAAMC,iBACNZ,KACuB,eAAdW,EAAMhD,MACfgD,EAAMC,iBACNT,OAIHhB,EAAMiB,MAAMqB,KAAI,SAACC,EAAMC,UACtBzC,QACEvB,IAAK+D,EAAKE,SACVjD,UAAWT,EAAG,4BAA6B6B,EAAW2B,6BACjC,+BACNC,EAAQ,iBAAQxC,EAAMiB,MAAM/B,SAE3Ca,EAACC,EAAM0C,eAAcH,KAAMA,SAKjCxC,YACEoB,IAAKjB,EACLkB,MAAOd,EAAaG,6BACRH,EAAaE,gCACVJ,EAAYU,QAC3BtB,UAAWT,EACT,kCACA,wCACA6B,EAAWS,WACXT,EAAW+B,gBAEbpB,QAAS,SAACC,GACRA,EAAMC,iBACNT,MAGFjB,SAAK2B,MAAM,IAAIC,OAAO,KAAKC,QAAQ,WAAWC,KAAK,QACjD9B,UACE+B,SAAS,UACTC,SAAS,UACTC,EAAE,yUACFH,KAAK,mDA5IZ,iDAC2B/B,qCAG3B,gBACLG,IAAAA,QACAC,IAAAA,cACAC,IAAAA,kBAGGF,EAAQa,SACRX,EAAkBW,SAClBZ,EAAcY,UAKjBX,EAAkBW,QAAQ8B,OAAS3C,EAAQa,QAAQD,YAAc,EACjEX,EAAcY,QAAQ8B,OACpB3C,EAAQa,QAAQD,WAAaZ,EAAQa,QAAQ+B,aAC7C5C,EAAQa,QAAQgC"}