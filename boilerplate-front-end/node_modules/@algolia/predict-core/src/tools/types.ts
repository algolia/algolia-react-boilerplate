import { type PredictToolsActions } from './actions';
import { type PredictActions } from './init';

export const PREDICT_TO_EXTENSION = 'predict-to-extension';
export const EXTENSION_TO_PREDICT = 'extension-to-predict';

export type PredictMessageType = keyof PredictActions;
export type PredictMessage<TMessageType extends PredictMessageType> = {
  type: TMessageType;
  data: Parameters<PredictActions[TMessageType]>[0];
};
export type SendPredictMessage = <TMessageType extends PredictMessageType>(
  message: PredictMessage<TMessageType>
) => void;

export type PredictToolsMessageType = keyof PredictToolsActions;
export type PredictToolsMessage<TMessageType extends PredictToolsMessageType> =
  {
    type: TMessageType;
    data: Parameters<PredictToolsActions[TMessageType]>[0];
  };
export type SendPredictToolsMessage = <
  TMessageType extends PredictToolsMessageType
>(
  message: PredictToolsMessage<TMessageType>
) => void;
