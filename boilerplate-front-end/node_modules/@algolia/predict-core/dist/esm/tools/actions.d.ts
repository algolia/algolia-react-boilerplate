import { type UserProfile } from '@algolia/predict';
import { createElementHighlighter } from './highlighter';
import { createPersonifier } from './personifier';
import { type PredictToolsMessage, type PredictToolsMessageType } from './types';
declare type ZoneActionProps = {
    zoneId: string;
};
declare type ZoneHighlightActionProps = ZoneActionProps & {
    params: {
        style: Record<string, any>;
    };
};
export declare type PredictToolsActions = {
    'request-init': (params: Record<string, never>) => void;
    'request-highlight-zone': ({ zoneId, params, }: ZoneHighlightActionProps) => void;
    'request-unhighlight-zone': ({ zoneId }: ZoneActionProps) => void;
    'request-scroll-to-zone': ({ zoneId }: ZoneActionProps) => void;
    'request-personification-start': ({ userProfile, }: {
        userProfile: UserProfile;
    }) => void;
    'request-personification-end': (params: Record<string, never>) => void;
    disconnect: (params: Record<string, never>) => void;
};
declare type ActionApi = {
    init: () => void;
    highlighter: ReturnType<typeof createElementHighlighter>;
    personifier: ReturnType<typeof createPersonifier>;
};
export declare function runAction(message: PredictToolsMessage<PredictToolsMessageType>, { init, highlighter, personifier }: ActionApi): void;
export {};
