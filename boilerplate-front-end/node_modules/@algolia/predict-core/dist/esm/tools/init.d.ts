import { type PredictApi, type PredictCoreApi } from '../predict';
import { type PersonifierParams } from './personifier';
export declare type PredictActions = {
    init: (params: {
        version: string;
        context: PredictApi;
        isPersonifying: boolean;
    }) => void;
    'state-change': (params: {
        version: string;
        context: PredictApi;
        isPersonifying: boolean;
    }) => void;
};
declare type InitPredictToolsParams = {
    version: string;
    getContext: () => PredictApi;
    subscribe: PredictCoreApi['subscribe'];
    startPersonification: PersonifierParams['onPersonificationStart'];
    endPersonification: PersonifierParams['onPersonificationEnd'];
};
export declare function initPredictTools({ version, getContext, subscribe, startPersonification, endPersonification, }: InitPredictToolsParams): void;
export {};
