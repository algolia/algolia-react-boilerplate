var STORAGE_KEY_PREFIX = 'predict';
var STORAGE_TEST_KEY = "".concat(STORAGE_KEY_PREFIX, "/test-key");

function isStorageSupported(storage) {
  try {
    storage.setItem(STORAGE_TEST_KEY, '');
    storage.removeItem(STORAGE_TEST_KEY);
    return true;
  } catch (error) {
    return false;
  }
}

export function createInMemoryStorage() {
  return {
    get: function get() {
      return null;
    },
    set: function set() {},
    remove: function remove() {}
  };
}

function createStorage(_ref) {
  var key = _ref.key,
      storage = _ref.storage;

  if (!isStorageSupported(storage)) {
    return createInMemoryStorage();
  }

  var storageKey = "".concat(STORAGE_KEY_PREFIX, "/").concat(key);
  return {
    get: function get() {
      var item = storage.getItem(storageKey);
      return item ? JSON.parse(item) : null;
    },
    set: function set(value) {
      storage.setItem(storageKey, JSON.stringify(value));
    },
    remove: function remove() {
      storage.removeItem(storageKey);
    }
  };
}

export function createSessionStorage(_ref2) {
  var key = _ref2.key;
  return createStorage({
    key: key,
    storage: sessionStorage
  });
}
export function createLocalStorage(_ref3) {
  var key = _ref3.key;
  return createStorage({
    key: key,
    storage: localStorage
  });
}