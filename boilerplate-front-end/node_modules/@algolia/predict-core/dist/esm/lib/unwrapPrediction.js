import { warn } from './warn';

function isModelError(prediction) {
  return Boolean(prediction.error);
}
/**
 * Unwraps the prediction value, or falls back when it's unavailable.
 *
 * If the model is unavailable, it returns the fallback and triggers a warning.
 */


export function unwrapPrediction(predictions, model, fallback) {
  var prediction = predictions && predictions[model];

  if (!prediction) {
    return fallback;
  }

  if (isModelError(prediction)) {
    process.env.NODE_ENV !== 'production' ? warn(false, prediction.error) : void 0;
    return fallback;
  }

  return prediction.value;
}