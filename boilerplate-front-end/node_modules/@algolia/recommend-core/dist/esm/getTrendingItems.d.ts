import { RecommendClient, TrendingItemsQuery } from '@algolia/recommend';
import { ProductRecord } from './types';
export declare type TrendingItemsProps<TObject> = {
    /**
     * The initialized Algolia recommend client.
     */
    recommendClient: RecommendClient;
    /**
     * A function to transform the retrieved items before passing them to the component.
     *
     * Itâ€™s useful to add or remove items, change them, or reorder them.
     */
    transformItems?: (items: Array<ProductRecord<TObject>>) => Array<ProductRecord<TObject>>;
};
export declare type GetTrendingItemsResult<TObject> = {
    recommendations: Array<ProductRecord<TObject>>;
};
export declare type GetTrendingItemsProps<TObject> = TrendingItemsProps<TObject> & TrendingItemsQuery;
export declare function getTrendingItems<TObject>({ recommendClient, transformItems, fallbackParameters, indexName, maxRecommendations, queryParameters, threshold, facetName, facetValue, }: GetTrendingItemsProps<TObject>): Promise<{
    recommendations: ProductRecord<TObject>[];
}>;
