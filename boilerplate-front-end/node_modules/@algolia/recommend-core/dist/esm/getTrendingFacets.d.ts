import { RecommendClient, TrendingFacetsQuery } from '@algolia/recommend';
import { TrendingFacet } from './types';
export declare type TrendingFacetsProps<TObject> = {
    /**
     * The initialized Algolia recommend client.
     */
    recommendClient: RecommendClient;
    /**
     * A function to transform the retrieved items before passing them to the component.
     *
     * Itâ€™s useful to add or remove items, change them, or reorder them.
     */
    transformItems?: (items: Array<TrendingFacet<TObject>>) => Array<TrendingFacet<TObject>>;
};
export declare type GetTrendingFacetsResult<TObject> = {
    recommendations: Array<TrendingFacet<TObject>>;
};
export declare type GetTrendingFacetsProps<TObject> = TrendingFacetsProps<TObject> & TrendingFacetsQuery;
export declare function getTrendingFacets<TObject>({ recommendClient, transformItems, indexName, maxRecommendations, threshold, facetName, }: GetTrendingFacetsProps<TObject>): Promise<{
    recommendations: TrendingFacet<TObject>[];
}>;
